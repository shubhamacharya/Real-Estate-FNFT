{
  "contractName": "NFTEscrow",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buyerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectState",
      "outputs": [
        {
          "internalType": "enum NFTEscrow.ProjectState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_NFTAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TokenID",
          "type": "uint256"
        }
      ],
      "name": "depositNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelAtNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "cancelBeforeDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProjectState",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAtNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"cancelBeforeDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_TokenID\",\"type\":\"uint256\"}],\"name\":\"depositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProjectState\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectState\",\"outputs\":[{\"internalType\":\"enum NFTEscrow.ProjectState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EscrowNFT.sol\":\"NFTEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/EscrowNFT.sol\":{\"keccak256\":\"0x053a2bb363b9c1f7962b768a25baba25ec9f30e99e6f5d28559881b76de3db60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://42e03d8bac663bdb8cd3039b99ff4a40380b2a4dc98a83705454b8d789328ec3\",\"dweb:/ipfs/QmQbxEK8S5B22opCuckzVKYfvRPpuqV3coo7V3H5qoriuu\"]}},\"version\":1}",
  "bytecode": "0x60806040526004805461ffff1916905534801561001b57600080fd5b5060008054336001600160a01b03199091161790556004805462ff000019169055610c568061004b6000396000f3fe6080604052600436106100c25760003560e01c8063499586111161007f578063748807ab11610059578063748807ab146101f85780639b5b9b1814610225578063a1ee418114610245578063f6326fb31461025a57600080fd5b806349958611146101ae5780635bf8633a146101d05780635e10177b146101f057600080fd5b806312065fe0146100c7578063150b7a02146100e75780632f9fa7f61461012c578063342901a7146101435780633d9b2ae61461015657806344834aca1461018e575b600080fd5b3480156100d357600080fd5b506040514781526020015b60405180910390f35b3480156100f357600080fd5b50610113610102366004610a41565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100de565b34801561013857600080fd5b50610141610262565b005b610141610151366004610adc565b610343565b34801561016257600080fd5b50600054610176906001600160a01b031681565b6040516001600160a01b0390911681526020016100de565b34801561019a57600080fd5b50600154610176906001600160a01b031681565b3480156101ba57600080fd5b506101c36104fc565b6040516100de9190610b05565b3480156101dc57600080fd5b50600254610176906001600160a01b031681565b6101416106cb565b34801561020457600080fd5b506004546102189062010000900460ff1681565b6040516100de9190610b69565b34801561023157600080fd5b50610141610240366004610b91565b61080e565b34801561025157600080fd5b506101416108f2565b6101416109d1565b60018060045462010000900460ff16600681111561028257610282610b53565b1461028c57600080fd5b6000546001600160a01b031633146102bf5760405162461bcd60e51b81526004016102b690610bbb565b60405180910390fd5b600254600354604051632142170760e11b81526001600160a01b03909216916342842e0e916102f49130913391600401610bfc565b600060405180830381600087803b15801561030e57600080fd5b505af1158015610322573d6000803e3d6000fd5b5050600480546002935090915062ff0000191662010000835b021790555050565b60038060045462010000900460ff16600681111561036357610363610b53565b1461036d57600080fd5b6001546001600160a01b031633148061039057506000546001600160a01b031633145b6103dc5760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f74206275796572206f722073656c6c65722e000060448201526064016102b6565b6000546001600160a01b03163303610406576004805461ff00191661010084151502179055610415565b6004805460ff19168315151790555b60045460ff6101009091041615156001148015610439575060045460ff1615156001145b156104f857600254600054600354604051632142170760e11b81526001600160a01b03938416936342842e0e936104799330939290911691600401610bfc565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b50506001546040516001600160a01b0390911692504780156108fc029250906000818181858888f193505050501580156104e5573d6000803e3d6000fd5b506004805462ff00001916620400001790555b5050565b60045460609062010000900460ff16600081600681111561051f5761051f610b53565b0361054a57505060408051808201909152600a8152694e657720457363726f7760b01b602082015290565b600181600681111561055e5761055e610b53565b0361058c57505060408051808201909152600d81526c1391950811195c1bdcda5d1959609a1b602082015290565b60028160068111156105a0576105a0610b53565b036105cb57505060408051808201909152600a81526910d85b98d95b0813919560b21b602082015290565b60038160068111156105df576105df610b53565b0361060d57505060408051808201909152600d81526c1155120811195c1bdcda5d1959609a1b602082015290565b600481600681111561062157610621610b53565b0361065f57505060408051808201909152601981527f43616e63656c6c6564204265666f72652044656c697665727900000000000000602082015290565b600581600681111561067357610673610b53565b036106a657505060408051808201909152601281527111195b1a5d995c9e48125b9a5d1a585d195960721b602082015290565b505060408051808201909152600981526811195b1a5d995c995960ba1b602082015290565b60058060045462010000900460ff1660068111156106eb576106eb610b53565b146106f557600080fd5b6001546001600160a01b0316331461074f5760405162461bcd60e51b815260206004820181905260248201527f43616c6c65722061646472657373206973206e6f74207468652062757965722e60448201526064016102b6565b600254600154600354604051632142170760e11b81526001600160a01b03938416936342842e0e9361078a9330939290911691600401610bfc565b600060405180830381600087803b1580156107a457600080fd5b505af11580156107b8573d6000803e3d6000fd5b5050600080546040516001600160a01b0390911693504780156108fc02935091818181858888f193505050501580156107f5573d6000803e3d6000fd5b50600480546006919062ff00001916620100008361033b565b60008060045462010000900460ff16600681111561082e5761082e610b53565b1461083857600080fd5b6000546001600160a01b031633146108625760405162461bcd60e51b81526004016102b690610bbb565b600280546001600160a01b0319166001600160a01b0385169081179091556003839055604051632142170760e11b81526342842e0e906108aa90339030908790600401610bfc565b600060405180830381600087803b1580156108c457600080fd5b505af11580156108d8573d6000803e3d6000fd5b50506004805462ff00001916620100001790555050505050565b60038060045462010000900460ff16600681111561091257610912610b53565b1461091c57600080fd5b6000546001600160a01b031633146109465760405162461bcd60e51b81526004016102b690610bbb565b60045460ff161580156109615750600454610100900460ff16155b6109b95760405162461bcd60e51b8152602060048201526024808201527f456974686572206275796572206f722073656c6c65722063616e636c6564206460448201526332b0b61760e11b60648201526084016102b6565b600480546005919062ff00001916620100008361033b565b60018060045462010000900460ff1660068111156109f1576109f1610b53565b146109fb57600080fd5b600180546001600160a01b03191633179055600480546003919062ff00001916620100008361033b565b80356001600160a01b0381168114610a3c57600080fd5b919050565b600080600080600060808688031215610a5957600080fd5b610a6286610a25565b9450610a7060208701610a25565b935060408601359250606086013567ffffffffffffffff80821115610a9457600080fd5b818801915088601f830112610aa857600080fd5b813581811115610ab757600080fd5b896020828501011115610ac957600080fd5b9699959850939650602001949392505050565b600060208284031215610aee57600080fd5b81358015158114610afe57600080fd5b9392505050565b600060208083528351808285015260005b81811015610b3257858101830151858201604001528201610b16565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052602160045260246000fd5b6020810160078310610b8b57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215610ba457600080fd5b610bad83610a25565b946020939093013593505050565b60208082526021908201527f43616c6c65722061646472657373206973206e6f74207468652073656c6c65726040820152601760f91b606082015260800190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea2646970667358221220ce6994610ea322bfd5ef6c92e6d01327b24c674689497c61dc4889748ebbf71464736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100c25760003560e01c8063499586111161007f578063748807ab11610059578063748807ab146101f85780639b5b9b1814610225578063a1ee418114610245578063f6326fb31461025a57600080fd5b806349958611146101ae5780635bf8633a146101d05780635e10177b146101f057600080fd5b806312065fe0146100c7578063150b7a02146100e75780632f9fa7f61461012c578063342901a7146101435780633d9b2ae61461015657806344834aca1461018e575b600080fd5b3480156100d357600080fd5b506040514781526020015b60405180910390f35b3480156100f357600080fd5b50610113610102366004610a41565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100de565b34801561013857600080fd5b50610141610262565b005b610141610151366004610adc565b610343565b34801561016257600080fd5b50600054610176906001600160a01b031681565b6040516001600160a01b0390911681526020016100de565b34801561019a57600080fd5b50600154610176906001600160a01b031681565b3480156101ba57600080fd5b506101c36104fc565b6040516100de9190610b05565b3480156101dc57600080fd5b50600254610176906001600160a01b031681565b6101416106cb565b34801561020457600080fd5b506004546102189062010000900460ff1681565b6040516100de9190610b69565b34801561023157600080fd5b50610141610240366004610b91565b61080e565b34801561025157600080fd5b506101416108f2565b6101416109d1565b60018060045462010000900460ff16600681111561028257610282610b53565b1461028c57600080fd5b6000546001600160a01b031633146102bf5760405162461bcd60e51b81526004016102b690610bbb565b60405180910390fd5b600254600354604051632142170760e11b81526001600160a01b03909216916342842e0e916102f49130913391600401610bfc565b600060405180830381600087803b15801561030e57600080fd5b505af1158015610322573d6000803e3d6000fd5b5050600480546002935090915062ff0000191662010000835b021790555050565b60038060045462010000900460ff16600681111561036357610363610b53565b1461036d57600080fd5b6001546001600160a01b031633148061039057506000546001600160a01b031633145b6103dc5760405162461bcd60e51b815260206004820152601e60248201527f43616c6c6572206973206e6f74206275796572206f722073656c6c65722e000060448201526064016102b6565b6000546001600160a01b03163303610406576004805461ff00191661010084151502179055610415565b6004805460ff19168315151790555b60045460ff6101009091041615156001148015610439575060045460ff1615156001145b156104f857600254600054600354604051632142170760e11b81526001600160a01b03938416936342842e0e936104799330939290911691600401610bfc565b600060405180830381600087803b15801561049357600080fd5b505af11580156104a7573d6000803e3d6000fd5b50506001546040516001600160a01b0390911692504780156108fc029250906000818181858888f193505050501580156104e5573d6000803e3d6000fd5b506004805462ff00001916620400001790555b5050565b60045460609062010000900460ff16600081600681111561051f5761051f610b53565b0361054a57505060408051808201909152600a8152694e657720457363726f7760b01b602082015290565b600181600681111561055e5761055e610b53565b0361058c57505060408051808201909152600d81526c1391950811195c1bdcda5d1959609a1b602082015290565b60028160068111156105a0576105a0610b53565b036105cb57505060408051808201909152600a81526910d85b98d95b0813919560b21b602082015290565b60038160068111156105df576105df610b53565b0361060d57505060408051808201909152600d81526c1155120811195c1bdcda5d1959609a1b602082015290565b600481600681111561062157610621610b53565b0361065f57505060408051808201909152601981527f43616e63656c6c6564204265666f72652044656c697665727900000000000000602082015290565b600581600681111561067357610673610b53565b036106a657505060408051808201909152601281527111195b1a5d995c9e48125b9a5d1a585d195960721b602082015290565b505060408051808201909152600981526811195b1a5d995c995960ba1b602082015290565b60058060045462010000900460ff1660068111156106eb576106eb610b53565b146106f557600080fd5b6001546001600160a01b0316331461074f5760405162461bcd60e51b815260206004820181905260248201527f43616c6c65722061646472657373206973206e6f74207468652062757965722e60448201526064016102b6565b600254600154600354604051632142170760e11b81526001600160a01b03938416936342842e0e9361078a9330939290911691600401610bfc565b600060405180830381600087803b1580156107a457600080fd5b505af11580156107b8573d6000803e3d6000fd5b5050600080546040516001600160a01b0390911693504780156108fc02935091818181858888f193505050501580156107f5573d6000803e3d6000fd5b50600480546006919062ff00001916620100008361033b565b60008060045462010000900460ff16600681111561082e5761082e610b53565b1461083857600080fd5b6000546001600160a01b031633146108625760405162461bcd60e51b81526004016102b690610bbb565b600280546001600160a01b0319166001600160a01b0385169081179091556003839055604051632142170760e11b81526342842e0e906108aa90339030908790600401610bfc565b600060405180830381600087803b1580156108c457600080fd5b505af11580156108d8573d6000803e3d6000fd5b50506004805462ff00001916620100001790555050505050565b60038060045462010000900460ff16600681111561091257610912610b53565b1461091c57600080fd5b6000546001600160a01b031633146109465760405162461bcd60e51b81526004016102b690610bbb565b60045460ff161580156109615750600454610100900460ff16155b6109b95760405162461bcd60e51b8152602060048201526024808201527f456974686572206275796572206f722073656c6c65722063616e636c6564206460448201526332b0b61760e11b60648201526084016102b6565b600480546005919062ff00001916620100008361033b565b60018060045462010000900460ff1660068111156109f1576109f1610b53565b146109fb57600080fd5b600180546001600160a01b03191633179055600480546003919062ff00001916620100008361033b565b80356001600160a01b0381168114610a3c57600080fd5b919050565b600080600080600060808688031215610a5957600080fd5b610a6286610a25565b9450610a7060208701610a25565b935060408601359250606086013567ffffffffffffffff80821115610a9457600080fd5b818801915088601f830112610aa857600080fd5b813581811115610ab757600080fd5b896020828501011115610ac957600080fd5b9699959850939650602001949392505050565b600060208284031215610aee57600080fd5b81358015158114610afe57600080fd5b9392505050565b600060208083528351808285015260005b81811015610b3257858101830151858201604001528201610b16565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052602160045260246000fd5b6020810160078310610b8b57634e487b7160e01b600052602160045260246000fd5b91905290565b60008060408385031215610ba457600080fd5b610bad83610a25565b946020939093013593505050565b60208082526021908201527f43616c6c65722061646472657373206973206e6f74207468652073656c6c65726040820152601760f91b606082015260800190565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea2646970667358221220ce6994610ea322bfd5ef6c92e6d01327b24c674689497c61dc4889748ebbf71464736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:143:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:25",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:25"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5690:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:25",
                "type": ""
              }
            ],
            "src": "14:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:25"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:25",
                "type": ""
              }
            ],
            "src": "196:173:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "514:668:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "561:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "570:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "573:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "563:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "563:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "563:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "535:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "544:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "531:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "531:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "556:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:33:25"
                  },
                  "nodeType": "YulIf",
                  "src": "524:53:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "586:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "615:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "596:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "667:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "678:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "644:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "691:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "718:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "729:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "701:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "691:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "742:46:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "773:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "784:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "756:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:32:25"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "746:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "797:28:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "807:18:25",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "801:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "852:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "861:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "864:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "854:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "854:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "854:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "840:6:25"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "848:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "837:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:14:25"
                  },
                  "nodeType": "YulIf",
                  "src": "834:34:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "877:32:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "891:9:25"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "902:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "887:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "887:22:25"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "881:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "957:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "966:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "969:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "959:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "959:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "959:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "936:2:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "940:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "932:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "932:13:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "928:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "918:55:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "982:30:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1009:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "996:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:16:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "986:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1039:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1048:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1051:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1041:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1041:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1041:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:25"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1035:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1024:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:14:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1021:34:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1105:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1114:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1117:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1107:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1107:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1078:2:25"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1082:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1074:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1074:15:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1091:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1070:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:24:25"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1096:7:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1067:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:37:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1064:57:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1130:21:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1144:2:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:11:25"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1160:16:25",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1170:6:25"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1160:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "448:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "459:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "471:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "479:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "487:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "495:6:25",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "503:6:25",
                "type": ""
              }
            ],
            "src": "374:808:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:103:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1296:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1308:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1319:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1304:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1304:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1296:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1338:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1353:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1365:3:25",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1370:10:25",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1361:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1361:20:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:33:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1331:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1331:52:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1255:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1266:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1277:4:25",
                "type": ""
              }
            ],
            "src": "1187:202:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1461:206:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1507:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1516:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1519:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1509:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1509:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1509:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1482:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1478:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1503:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1474:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1471:52:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1532:36:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1558:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1545:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1545:23:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1536:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1621:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1630:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1633:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1623:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1623:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1623:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1590:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1611:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1604:13:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1597:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1597:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1587:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1587:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1580:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1577:60:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1646:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1656:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1646:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1427:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1438:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1450:6:25",
                "type": ""
              }
            ],
            "src": "1394:273:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1799:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1811:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1807:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1799:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1841:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1856:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1872:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1877:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1868:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1868:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1881:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1864:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1864:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1834:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1834:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1834:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1758:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1769:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1780:4:25",
                "type": ""
              }
            ],
            "src": "1672:219:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2017:427:25",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2027:12:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2037:2:25",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2031:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2055:9:25"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2066:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2048:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2048:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2048:21:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2078:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2098:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2092:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2092:13:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2082:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2125:9:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2136:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2121:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2121:18:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2141:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2114:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2114:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2114:34:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2157:10:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2166:1:25",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2161:1:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2226:90:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "2255:9:25"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2266:1:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2251:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2251:17:25"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2270:2:25",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2247:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2247:26:25"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2289:6:25"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2297:1:25"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2285:3:25"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2285:14:25"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "2301:2:25"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2281:3:25"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2281:23:25"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2275:5:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2275:30:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2240:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2240:66:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2240:66:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2187:1:25"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2190:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2184:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2184:13:25"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2198:19:25",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2200:15:25",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2209:1:25"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "2212:2:25"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2205:3:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2205:10:25"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2200:1:25"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2180:3:25",
                    "statements": []
                  },
                  "src": "2176:140:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2340:9:25"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2351:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2336:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2336:22:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2360:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2332:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2332:31:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2365:1:25",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2325:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2325:42:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2325:42:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2376:62:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2392:9:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2411:6:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2419:2:25",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2407:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2407:15:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2428:2:25",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "2424:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2424:7:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "2403:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2403:29:25"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2388:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2388:45:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2435:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2384:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2384:54:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2376:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1986:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1997:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2008:4:25",
                "type": ""
              }
            ],
            "src": "1896:548:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2550:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2560:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2572:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2583:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2568:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2568:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2560:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2602:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2617:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2633:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2638:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2629:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2629:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2642:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2625:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2625:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2613:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2613:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2595:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2595:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2595:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2519:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2530:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2541:4:25",
                "type": ""
              }
            ],
            "src": "2449:203:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2689:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2706:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2713:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2718:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2709:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2709:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2699:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2699:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2699:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2746:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2749:4:25",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2739:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2739:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2739:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2770:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2773:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2763:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2763:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2763:15:25"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2657:127:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2905:229:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2915:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2927:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2938:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2923:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2923:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2915:4:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2983:111:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3004:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3011:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3016:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3007:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3007:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2997:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2997:31:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2997:31:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3048:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3051:4:25",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3041:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3041:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3041:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3076:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3079:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3069:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3069:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3069:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2963:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2971:1:25",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2960:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2960:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2953:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2953:21:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2950:144:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3110:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3121:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3103:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3103:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3103:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ProjectState_$3484__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2874:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2885:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2896:4:25",
                "type": ""
              }
            ],
            "src": "2789:345:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3226:167:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3272:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3281:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3284:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3274:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3274:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3274:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3247:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3256:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3243:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3243:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3268:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3239:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3239:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3236:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3297:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3326:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "3307:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3307:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3297:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3345:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3372:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3383:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3368:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3368:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3355:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3355:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3345:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3184:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3195:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3207:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3215:6:25",
                "type": ""
              }
            ],
            "src": "3139:254:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3572:223:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3589:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3600:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3582:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3582:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3582:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3623:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3634:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3619:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3619:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3639:2:25",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3612:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3612:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3612:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3662:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3673:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3658:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3658:18:25"
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f74207468652073656c6c6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3678:34:25",
                        "type": "",
                        "value": "Caller address is not the seller"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3651:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3651:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3651:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3733:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3744:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3729:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3729:18:25"
                      },
                      {
                        "hexValue": "2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3749:3:25",
                        "type": "",
                        "value": "."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3722:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3722:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3722:31:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3762:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3774:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3785:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3770:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3762:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5771ad670ddc77eed0acb89e6de301ddb0366af7a9c9745df523b7d6bf5b5213__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3549:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3563:4:25",
                "type": ""
              }
            ],
            "src": "3398:397:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3957:218:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3967:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3979:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3990:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3975:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3975:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3967:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4002:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4020:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4025:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4016:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4016:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4029:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4012:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4012:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4006:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4047:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4062:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4070:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4058:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4058:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4040:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4040:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4040:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4094:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4105:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4090:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4090:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4114:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4122:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4110:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4110:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4083:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4083:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4083:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4146:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4157:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4142:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4142:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4162:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4135:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4135:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4135:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3910:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3921:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3929:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3937:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3948:4:25",
                "type": ""
              }
            ],
            "src": "3800:375:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4354:180:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4371:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4382:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4364:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4364:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4364:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4405:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4416:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4401:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4401:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4421:2:25",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4394:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4394:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4394:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4444:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4455:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4440:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4440:18:25"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206275796572206f722073656c6c65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4460:32:25",
                        "type": "",
                        "value": "Caller is not buyer or seller."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4433:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4433:60:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4433:60:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4502:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4514:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4525:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4510:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4510:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4502:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f0a37c69e944dcdf9f14b2444e245b46facd3e944148d179a0a2f3b62a9a5bbb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4331:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4345:4:25",
                "type": ""
              }
            ],
            "src": "4180:354:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4704:218:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4714:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4726:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4737:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4722:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4722:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4714:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4749:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4767:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4772:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "4763:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4763:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4776:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4759:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4759:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "4753:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4794:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4809:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4817:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4805:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4805:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4787:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4787:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4787:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4841:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4852:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4837:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4837:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4861:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "4869:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4857:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4857:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4830:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4830:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4830:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4893:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4904:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4889:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4889:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "4909:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4882:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4882:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4882:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4657:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "4668:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4676:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4684:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4695:4:25",
                "type": ""
              }
            ],
            "src": "4539:383:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5101:182:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5118:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5129:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5111:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5111:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5111:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5152:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5163:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5148:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5148:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5168:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5141:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5141:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5141:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5191:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5202:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5187:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5187:18:25"
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f74207468652062757965722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5207:34:25",
                        "type": "",
                        "value": "Caller address is not the buyer."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5180:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5180:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5180:62:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5251:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5263:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5274:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5259:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5259:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5251:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_353567adedb2460968cac49d16d878a1117f520cb8b4169e7a397bcbe68fcca1__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5078:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5092:4:25",
                "type": ""
              }
            ],
            "src": "4927:356:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5462:226:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5479:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5490:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5472:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5472:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5472:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5513:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5524:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5509:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5509:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5529:2:25",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5502:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5502:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5502:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5552:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5563:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5548:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5548:18:25"
                      },
                      {
                        "hexValue": "456974686572206275796572206f722073656c6c65722063616e636c65642064",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5568:34:25",
                        "type": "",
                        "value": "Either buyer or seller cancled d"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5541:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5541:62:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5541:62:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5623:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5634:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5619:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5619:18:25"
                      },
                      {
                        "hexValue": "65616c2e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5639:6:25",
                        "type": "",
                        "value": "eal."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5612:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5612:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5612:34:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5655:27:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5667:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5678:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5663:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5663:19:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5655:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9ae675d4ce11a776d37fde51870bd8404cc3b434233f5d0dfa3ba6b707c73bc__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5439:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5453:4:25",
                "type": ""
              }
            ],
            "src": "5288:400:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ProjectState_$3484__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_5771ad670ddc77eed0acb89e6de301ddb0366af7a9c9745df523b7d6bf5b5213__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Caller address is not the seller\")\n        mstore(add(headStart, 96), \".\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_f0a37c69e944dcdf9f14b2444e245b46facd3e944148d179a0a2f3b62a9a5bbb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Caller is not buyer or seller.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_353567adedb2460968cac49d16d878a1117f520cb8b4169e7a397bcbe68fcca1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Caller address is not the buyer.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c9ae675d4ce11a776d37fde51870bd8404cc3b434233f5d0dfa3ba6b707c73bc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"Either buyer or seller cancled d\")\n        mstore(add(headStart, 96), \"eal.\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "183:3932:21:-:0;;;499:24;;;-1:-1:-1;;529:25:21;;;599:112;;;;;;;;;-1:-1:-1;622:13:21;:35;;646:10;-1:-1:-1;;;;;;622:35:21;;;;;;667:12;:37;;-1:-1:-1;;667:37:21;;;183:3932;;;;;;",
  "deployedSourceMap": "183:3932:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:105;;;;;;;;;;-1:-1:-1;3383:105:21;;3460:21;160:25:25;;148:2;133:18;3383:105:21;;;;;;;;721:185;;;;;;;;;;-1:-1:-1;721:185:21;;;;;:::i;:::-;-1:-1:-1;;;721:185:21;;;;;;;;;;;-1:-1:-1;;;;;;1349:33:25;;;1331:52;;1319:2;1304:18;721:185:21;1187:202:25;1251:218:21;;;;;;;;;;;;;:::i;:::-;;1477:558;;;;;;:::i;:::-;;:::i;364:36::-;;;;;;;;;;-1:-1:-1;364:36:21;;;;-1:-1:-1;;;;;364:36:21;;;;;;-1:-1:-1;;;;;1852:32:25;;;1834:51;;1822:2;1807:18;364:36:21;1672:219:25;406:35:21;;;;;;;;;;-1:-1:-1;406:35:21;;;;-1:-1:-1;;;;;406:35:21;;;3494:619;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;447:25::-;;;;;;;;;;-1:-1:-1;447:25:21;;;;-1:-1:-1;;;;;447:25:21;;;2413:291;;;:::i;560:32::-;;;;;;;;;;-1:-1:-1;560:32:21;;;;;;;;;;;;;;;;;;:::i;916:325::-;;;;;;;;;;-1:-1:-1;916:325:21;;;;;:::i;:::-;;:::i;2235:160::-;;;;;;;;;;;;;:::i;2045:180::-;;;:::i;1251:218::-;1296:25;;3345:12;;;;;;;:22;;;;;;;;:::i;:::-;;3337:31;;;;;;2837:13:::1;::::0;-1:-1:-1;;;;;2837:13:21::1;2823:10;:27;2815:73;;;;-1:-1:-1::0;;;2815:73:21::1;;;;;;;:::i;:::-;;;;;;;;;1351:10:::2;::::0;1407:7:::2;::::0;1344:71:::2;::::0;-1:-1:-1;;;1344:71:21;;-1:-1:-1;;;;;1351:10:21;;::::2;::::0;1344:35:::2;::::0;:71:::2;::::0;1388:4:::2;::::0;1395:10:::2;::::0;1344:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1425:12:21::2;:37:::0;;1440:22:::2;::::0;-1:-1:-1;1425:12:21;;-1:-1:-1;;;1425:37:21::2;::::0;1440:22;1425:37:::2;;;;;;1251:218:::0;:::o;1477:558::-;1542:25;;3345:12;;;;;;;:22;;;;;;;;:::i;:::-;;3337:31;;;;;;3198:12:::1;::::0;-1:-1:-1;;;;;3198:12:21::1;3184:10;:26;::::0;:57:::1;;-1:-1:-1::0;3228:13:21::1;::::0;-1:-1:-1;;;;;3228:13:21::1;3214:10;:27;3184:57;3176:99;;;::::0;-1:-1:-1;;;3176:99:21;;4382:2:25;3176:99:21::1;::::0;::::1;4364:21:25::0;4421:2;4401:18;;;4394:30;4460:32;4440:18;;;4433:60;4510:18;;3176:99:21::1;4180:354:25::0;3176:99:21::1;1619:13:::2;::::0;-1:-1:-1;;;;;1619:13:21::2;1605:10;:27:::0;1601:136:::2;;1647:12;:21:::0;;-1:-1:-1;;1647:21:21::2;;::::0;::::2;;;;::::0;;1601:136:::2;;;1706:11;:20:::0;;-1:-1:-1;;1706:20:21::2;::::0;::::2;;;::::0;;1601:136:::2;1759:12;::::0;::::2;;::::0;;::::2;;:20;;:12;:20;:43:::0;::::2;;;-1:-1:-1::0;1783:11:21::2;::::0;::::2;;:19;;:11:::0;:19:::2;1759:43;1755:274;;;1824:10;::::0;::::2;1868:13:::0;1883:7:::2;::::0;1817:74:::2;::::0;-1:-1:-1;;;1817:74:21;;-1:-1:-1;;;;;1824:10:21;;::::2;::::0;1817:35:::2;::::0;:74:::2;::::0;1861:4:::2;::::0;1868:13;;;::::2;::::0;1817:74:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1905:12:21::2;::::0;:44:::2;::::0;-1:-1:-1;;;;;1905:12:21;;::::2;::::0;-1:-1:-1;1927:21:21::2;1905:44:::0;::::2;;;::::0;-1:-1:-1;1927:21:21;1905:12:::2;:44:::0;:12;:44;1927:21;1905:12;:44;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1978:35:21::2;1963:50:::0;;-1:-1:-1;;1963:50:21::2;::::0;::::2;::::0;;1755:274:::2;1477:558:::0;;:::o;3494:619::-;3587:12;;3542:13;;3587:12;;;;;3567:17;3612:4;:30;;;;;;;;:::i;:::-;;3609:488;;-1:-1:-1;;3644:19:21;;;;;;;;;;;;-1:-1:-1;;;3644:19:21;;;;;3494:619::o;3609:488::-;3689:25;3681:4;:33;;;;;;;;:::i;:::-;;3678:419;;-1:-1:-1;;3716:22:21;;;;;;;;;;;;-1:-1:-1;;;3716:22:21;;;;;3494:619::o;3678:419::-;3764:22;3756:4;:30;;;;;;;;:::i;:::-;;3753:344;;-1:-1:-1;;3788:19:21;;;;;;;;;;;;-1:-1:-1;;;3788:19:21;;;;;3494:619::o;3753:344::-;3833:25;3825:4;:33;;;;;;;;:::i;:::-;;3822:275;;-1:-1:-1;;3860:22:21;;;;;;;;;;;;-1:-1:-1;;;3860:22:21;;;;;3494:619::o;3822:275::-;3908:35;3900:4;:43;;;;;;;;:::i;:::-;;3897:200;;-1:-1:-1;;3945:34:21;;;;;;;;;;;;;;;;;;3494:619::o;3897:200::-;4005:30;3997:4;:38;;;;;;;;:::i;:::-;;3994:103;;-1:-1:-1;;4037:27:21;;;;;;;;;;;;-1:-1:-1;;;4037:27:21;;;;;3494:619::o;3994:103::-;-1:-1:-1;;4079:18:21;;;;;;;;;;;;-1:-1:-1;;;4079:18:21;;;;;3494:619::o;2413:291::-;2470:30;;3345:12;;;;;;;:22;;;;;;;;:::i;:::-;;3337:31;;;;;;2947:12:::1;::::0;-1:-1:-1;;;;;2947:12:21::1;2933:10;:26;2925:71;;;::::0;-1:-1:-1;;;2925:71:21;;5129:2:25;2925:71:21::1;::::0;::::1;5111:21:25::0;;;5148:18;;;5141:30;5207:34;5187:18;;;5180:62;5259:18;;2925:71:21::1;4927:356:25::0;2925:71:21::1;2529:10:::2;::::0;;2573:12;2587:7:::2;::::0;2522:73:::2;::::0;-1:-1:-1;;;2522:73:21;;-1:-1:-1;;;;;2529:10:21;;::::2;::::0;2522:35:::2;::::0;:73:::2;::::0;2566:4:::2;::::0;2573:12;;;::::2;::::0;2522:73:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;2605:13:21::2;::::0;;:45:::2;::::0;-1:-1:-1;;;;;2605:13:21;;::::2;::::0;-1:-1:-1;2628:21:21::2;2605:45:::0;::::2;;;::::0;-1:-1:-1;2628:21:21;2605:45;:13;:45;2628:21;2605:13;:45;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;2660:12:21::2;:37:::0;;2675:22:::2;::::0;2660:12;-1:-1:-1;;2660:37:21::2;::::0;2675:22;2660:37:::2;::::0;916:325;997:22;;3345:12;;;;;;;:22;;;;;;;;:::i;:::-;;3337:31;;;;;;2837:13:::1;::::0;-1:-1:-1;;;;;2837:13:21::1;2823:10;:27;2815:73;;;;-1:-1:-1::0;;;2815:73:21::1;;;;;;;:::i;:::-;1051:10:::2;:24:::0;;-1:-1:-1;;;;;;1051:24:21::2;-1:-1:-1::0;;;;;1051:24:21;::::2;::::0;;::::2;::::0;;;1085:7:::2;:18:::0;;;1113:71:::2;::::0;-1:-1:-1;;;1113:71:21;;:35:::2;::::0;:71:::2;::::0;1149:10:::2;::::0;1169:4:::2;::::0;1085:18;;1113:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1194:12:21::2;:40:::0;;-1:-1:-1;;1194:40:21::2;::::0;::::2;::::0;;-1:-1:-1;;;;;916:325:21:o;2235:160::-;2285:25;;3345:12;;;;;;;:22;;;;;;;;:::i;:::-;;3337:31;;;;;;2837:13:::1;::::0;-1:-1:-1;;;;;2837:13:21::1;2823:10;:27;2815:73;;;;-1:-1:-1::0;;;2815:73:21::1;;;;;;;:::i;:::-;3044:11:::2;::::0;::::2;;:20;::::0;::::2;:45;;-1:-1:-1::0;3068:12:21::2;::::0;::::2;::::0;::::2;;;:21;3044:45;3036:95;;;::::0;-1:-1:-1;;;3036:95:21;;5490:2:25;3036:95:21::2;::::0;::::2;5472:21:25::0;5529:2;5509:18;;;5502:30;5568:34;5548:18;;;5541:62;-1:-1:-1;;;5619:18:25;;;5612:34;5663:19;;3036:95:21::2;5288:400:25::0;3036:95:21::2;2343:12:::3;:45:::0;;2358:30:::3;::::0;2343:12;-1:-1:-1;;2343:45:21::3;::::0;2358:30;2343:45:::3;::::0;2045:180;2097:25;;3345:12;;;;;;;:22;;;;;;;;:::i;:::-;;3337:31;;;;;;2134:12:::1;:34:::0;;-1:-1:-1;;;;;;2134:34:21::1;2157:10;2134:34;::::0;;2178:12:::1;:40:::0;;2193:25:::1;::::0;2178:12;-1:-1:-1;;2178:40:21::1;::::0;2193:25;2178:40:::1;::::0;196:173:25;264:20;;-1:-1:-1;;;;;313:31:25;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:808::-;471:6;479;487;495;503;556:3;544:9;535:7;531:23;527:33;524:53;;;573:1;570;563:12;524:53;596:29;615:9;596:29;:::i;:::-;586:39;;644:38;678:2;667:9;663:18;644:38;:::i;:::-;634:48;;729:2;718:9;714:18;701:32;691:42;;784:2;773:9;769:18;756:32;807:18;848:2;840:6;837:14;834:34;;;864:1;861;854:12;834:34;902:6;891:9;887:22;877:32;;947:7;940:4;936:2;932:13;928:27;918:55;;969:1;966;959:12;918:55;1009:2;996:16;1035:2;1027:6;1024:14;1021:34;;;1051:1;1048;1041:12;1021:34;1096:7;1091:2;1082:6;1078:2;1074:15;1070:24;1067:37;1064:57;;;1117:1;1114;1107:12;1064:57;374:808;;;;-1:-1:-1;374:808:25;;-1:-1:-1;1148:2:25;1140:11;;1170:6;374:808;-1:-1:-1;;;374:808:25:o;1394:273::-;1450:6;1503:2;1491:9;1482:7;1478:23;1474:32;1471:52;;;1519:1;1516;1509:12;1471:52;1558:9;1545:23;1611:5;1604:13;1597:21;1590:5;1587:32;1577:60;;1633:1;1630;1623:12;1577:60;1656:5;1394:273;-1:-1:-1;;;1394:273:25:o;1896:548::-;2008:4;2037:2;2066;2055:9;2048:21;2098:6;2092:13;2141:6;2136:2;2125:9;2121:18;2114:34;2166:1;2176:140;2190:6;2187:1;2184:13;2176:140;;;2285:14;;;2281:23;;2275:30;2251:17;;;2270:2;2247:26;2240:66;2205:10;;2176:140;;;2180:3;2365:1;2360:2;2351:6;2340:9;2336:22;2332:31;2325:42;2435:2;2428;2424:7;2419:2;2411:6;2407:15;2403:29;2392:9;2388:45;2384:54;2376:62;;;;1896:548;;;;:::o;2657:127::-;2718:10;2713:3;2709:20;2706:1;2699:31;2749:4;2746:1;2739:15;2773:4;2770:1;2763:15;2789:345;2938:2;2923:18;;2971:1;2960:13;;2950:144;;3016:10;3011:3;3007:20;3004:1;2997:31;3051:4;3048:1;3041:15;3079:4;3076:1;3069:15;2950:144;3103:25;;;2789:345;:::o;3139:254::-;3207:6;3215;3268:2;3256:9;3247:7;3243:23;3239:32;3236:52;;;3284:1;3281;3274:12;3236:52;3307:29;3326:9;3307:29;:::i;:::-;3297:39;3383:2;3368:18;;;;3355:32;;-1:-1:-1;;;3139:254:25:o;3398:397::-;3600:2;3582:21;;;3639:2;3619:18;;;3612:30;3678:34;3673:2;3658:18;;3651:62;-1:-1:-1;;;3744:2:25;3729:18;;3722:31;3785:3;3770:19;;3398:397::o;3800:375::-;-1:-1:-1;;;;;4058:15:25;;;4040:34;;4110:15;;;;4105:2;4090:18;;4083:43;4157:2;4142:18;;4135:34;;;;3990:2;3975:18;;3800:375::o",
  "source": "//SPDX-License-Identifier: MIT\n \npragma solidity ^0.8.2;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\ncontract NFTEscrow is IERC721Receiver {\n    \n    enum ProjectState {newEscrow, nftDeposited, cancelNFT, ethDeposited, canceledBeforeDelivery, deliveryInitiated, delivered}\n    \n    address payable public sellerAddress;\n    address payable public buyerAddress;\n    address public nftAddress;\n    uint256 tokenID;\n    bool buyerCancel = false;\n    bool sellerCancel = false;\n    ProjectState public projectState;\n\n    constructor(){\n        sellerAddress = payable(msg.sender);\n        projectState = ProjectState.newEscrow;\n    }\n    \n    function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n    \n    function depositNFT(address _NFTAddress, uint256 _TokenID) public inProjectState(ProjectState.newEscrow) onlySeller {\n        \n        nftAddress = _NFTAddress;\n        tokenID = _TokenID;\n        ERC721(nftAddress).safeTransferFrom(msg.sender, address(this), tokenID);\n        projectState = ProjectState.nftDeposited;\n    }\n    \n    function cancelAtNFT() public inProjectState(ProjectState.nftDeposited) onlySeller {\n        ERC721(nftAddress).safeTransferFrom(address(this), msg.sender, tokenID);\n        projectState = ProjectState.cancelNFT;\n    }\n  \n    function cancelBeforeDelivery(bool _state) public inProjectState(ProjectState.ethDeposited) payable BuyerOrSeller {\n        if (msg.sender == sellerAddress){\n            sellerCancel = _state;\n        }\n        else{\n            buyerCancel = _state;\n        }\n        \n        if (sellerCancel == true && buyerCancel == true){\n            ERC721(nftAddress).safeTransferFrom(address(this), sellerAddress, tokenID);\n            buyerAddress.transfer(address(this).balance);\n            projectState = ProjectState.canceledBeforeDelivery;     \n        }\n    }\n    \n    function depositETH() public payable inProjectState(ProjectState.nftDeposited) {\n        buyerAddress = payable(msg.sender);\n        projectState = ProjectState.ethDeposited;\n    }\n    \n    function initiateDelivery() public inProjectState(ProjectState.ethDeposited) onlySeller noDispute {\n        projectState = ProjectState.deliveryInitiated;\n    }        \n    \n    function confirmDelivery() public payable inProjectState(ProjectState.deliveryInitiated) onlyBuyer {\n        ERC721(nftAddress).safeTransferFrom(address(this), buyerAddress, tokenID);\n        sellerAddress.transfer(address(this).balance);\n        projectState = ProjectState.delivered;\n    }\n        \n   \tmodifier condition(bool _condition) {\n\t\trequire(_condition);\n\t\t_;\n\t}\n\n\tmodifier onlySeller() {\n\t\trequire(msg.sender == sellerAddress, \"Caller address is not the seller.\");\n\t\t_;\n\t}\n\n\tmodifier onlyBuyer() {\n\t\trequire(msg.sender == buyerAddress, \"Caller address is not the buyer.\");\n\t\t_;\n\t}\n\t\n\tmodifier noDispute(){\n\t    require(buyerCancel == false && sellerCancel == false, \"Either buyer or seller cancled deal.\" );\n\t    _;\n\t}\n\t\n\tmodifier BuyerOrSeller() {\n\t\trequire(msg.sender == buyerAddress || msg.sender == sellerAddress,\"Caller is not buyer or seller.\");\n\t\t_;\n\t}\n\t\n\tmodifier inProjectState(ProjectState _state) {\n\t\trequire(projectState == _state);\n\t\t_;\n\t}\n\n    function getBalance() public view returns (uint256 balance) {\n        return address(this).balance;\n    }\n\n    function getProjectState() public view returns (string memory) {\n        ProjectState temp = projectState;\n        if(temp == ProjectState.newEscrow) return \"New Escrow\";\n        else if(temp == ProjectState.nftDeposited) return \"NFT Deposited\";\n        else if(temp == ProjectState.cancelNFT) return \"Cancel NFT\";\n        else if(temp == ProjectState.ethDeposited) return \"ETH Deposited\";\n        else if(temp == ProjectState.canceledBeforeDelivery) return \"Cancelled Before Delivery\";\n        else if(temp == ProjectState.deliveryInitiated) return \"Delivery Initiated\";\n        else return \"Delivered\";\n        \n    }\n} \n",
  "sourcePath": "/home/shubham/Desktop/Real-Estate-FNFT/blockchain/contracts/EscrowNFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/EscrowNFT.sol",
    "exportedSymbols": {
      "Address": [
        2800
      ],
      "Context": [
        2822
      ],
      "ERC165": [
        3146
      ],
      "ERC721": [
        1820
      ],
      "IERC165": [
        3158
      ],
      "IERC721": [
        1936
      ],
      "IERC721Metadata": [
        2505
      ],
      "IERC721Receiver": [
        1954
      ],
      "NFTEscrow": [
        3890
      ],
      "Strings": [
        3122
      ]
    },
    "id": 3891,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3472,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3473,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3891,
        "sourceUnit": 1821,
        "src": "57:57:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3474,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3891,
        "sourceUnit": 1955,
        "src": "115:66:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3475,
              "name": "IERC721Receiver",
              "nameLocations": [
                "205:15:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1954,
              "src": "205:15:21"
            },
            "id": 3476,
            "nodeType": "InheritanceSpecifier",
            "src": "205:15:21"
          }
        ],
        "canonicalName": "NFTEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3890,
        "linearizedBaseContracts": [
          3890,
          1954
        ],
        "name": "NFTEscrow",
        "nameLocation": "192:9:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NFTEscrow.ProjectState",
            "id": 3484,
            "members": [
              {
                "id": 3477,
                "name": "newEscrow",
                "nameLocation": "251:9:21",
                "nodeType": "EnumValue",
                "src": "251:9:21"
              },
              {
                "id": 3478,
                "name": "nftDeposited",
                "nameLocation": "262:12:21",
                "nodeType": "EnumValue",
                "src": "262:12:21"
              },
              {
                "id": 3479,
                "name": "cancelNFT",
                "nameLocation": "276:9:21",
                "nodeType": "EnumValue",
                "src": "276:9:21"
              },
              {
                "id": 3480,
                "name": "ethDeposited",
                "nameLocation": "287:12:21",
                "nodeType": "EnumValue",
                "src": "287:12:21"
              },
              {
                "id": 3481,
                "name": "canceledBeforeDelivery",
                "nameLocation": "301:22:21",
                "nodeType": "EnumValue",
                "src": "301:22:21"
              },
              {
                "id": 3482,
                "name": "deliveryInitiated",
                "nameLocation": "325:17:21",
                "nodeType": "EnumValue",
                "src": "325:17:21"
              },
              {
                "id": 3483,
                "name": "delivered",
                "nameLocation": "344:9:21",
                "nodeType": "EnumValue",
                "src": "344:9:21"
              }
            ],
            "name": "ProjectState",
            "nameLocation": "237:12:21",
            "nodeType": "EnumDefinition",
            "src": "232:122:21"
          },
          {
            "constant": false,
            "functionSelector": "3d9b2ae6",
            "id": 3486,
            "mutability": "mutable",
            "name": "sellerAddress",
            "nameLocation": "387:13:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "364:36:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3485,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "364:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44834aca",
            "id": 3488,
            "mutability": "mutable",
            "name": "buyerAddress",
            "nameLocation": "429:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "406:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3487,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "406:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 3490,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "462:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "447:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3489,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3492,
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "486:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "478:15:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3495,
            "mutability": "mutable",
            "name": "buyerCancel",
            "nameLocation": "504:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "499:24:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3493,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "499:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "518:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3498,
            "mutability": "mutable",
            "name": "sellerCancel",
            "nameLocation": "534:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "529:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3496,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "529:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3497,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "549:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 3501,
            "mutability": "mutable",
            "name": "projectState",
            "nameLocation": "580:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3890,
            "src": "560:32:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$3484",
              "typeString": "enum NFTEscrow.ProjectState"
            },
            "typeName": {
              "id": 3500,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3499,
                "name": "ProjectState",
                "nameLocations": [
                  "560:12:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3484,
                "src": "560:12:21"
              },
              "referencedDeclaration": 3484,
              "src": "560:12:21",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$3484",
                "typeString": "enum NFTEscrow.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "612:99:21",
              "statements": [
                {
                  "expression": {
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3504,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "622:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3507,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "646:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "650:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "646:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "638:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "638:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "622:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "622:35:21"
                },
                {
                  "expression": {
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3512,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "667:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3513,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "682:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "695:9:21",
                      "memberName": "newEscrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3477,
                      "src": "682:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "667:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "667:37:21"
                }
              ]
            },
            "id": 3518,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:21"
            },
            "returnParameters": {
              "id": 3503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "612:0:21"
            },
            "scope": 3890,
            "src": "599:112:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1953
            ],
            "body": {
              "id": 3536,
              "nodeType": "Block",
              "src": "852:54:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 3532,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "869:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                          "typeString": "contract NFTEscrow"
                        }
                      },
                      "id": 3533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "874:16:21",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3537,
                      "src": "869:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 3534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "891:8:21",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "869:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 3531,
                  "id": 3535,
                  "nodeType": "Return",
                  "src": "862:37:21"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 3537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "730:16:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3528,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "826:8:21"
            },
            "parameters": {
              "id": 3527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3520,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "756:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "748:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "774:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "766:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3524,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "788:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "780:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3526,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "812:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "797:19:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3525,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:72:21"
            },
            "returnParameters": {
              "id": 3531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "844:6:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3529,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:8:21"
            },
            "scope": 3890,
            "src": "721:185:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3576,
              "nodeType": "Block",
              "src": "1032:209:21",
              "statements": [
                {
                  "expression": {
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3550,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3490,
                      "src": "1051:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3551,
                      "name": "_NFTAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3539,
                      "src": "1064:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1051:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "1051:24:21"
                },
                {
                  "expression": {
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3554,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "1085:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3555,
                      "name": "_TokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3541,
                      "src": "1095:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1085:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3557,
                  "nodeType": "ExpressionStatement",
                  "src": "1085:18:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1149:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1153:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1149:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3566,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1169:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 3565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1161:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1161:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1161:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3568,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "1176:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3559,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3490,
                            "src": "1120:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3558,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "1113:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1113:18:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1820",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1132:16:21",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1309,
                      "src": "1113:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1113:71:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3570,
                  "nodeType": "ExpressionStatement",
                  "src": "1113:71:21"
                },
                {
                  "expression": {
                    "id": 3574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3571,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "1194:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3572,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "1209:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1222:12:21",
                      "memberName": "nftDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3478,
                      "src": "1209:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "1194:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3575,
                  "nodeType": "ExpressionStatement",
                  "src": "1194:40:21"
                }
              ]
            },
            "functionSelector": "9b5b9b18",
            "id": 3577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3544,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "997:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1010:9:21",
                    "memberName": "newEscrow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3477,
                    "src": "997:22:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3546,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3543,
                  "name": "inProjectState",
                  "nameLocations": [
                    "982:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "982:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "982:38:21"
              },
              {
                "id": 3548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3547,
                  "name": "onlySeller",
                  "nameLocations": [
                    "1021:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3765,
                  "src": "1021:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:10:21"
              }
            ],
            "name": "depositNFT",
            "nameLocation": "925:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "mutability": "mutable",
                  "name": "_NFTAddress",
                  "nameLocation": "944:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "936:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3541,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "965:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "957:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:39:21"
            },
            "returnParameters": {
              "id": 3549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:21"
            },
            "scope": 3890,
            "src": "916:325:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3604,
              "nodeType": "Block",
              "src": "1334:135:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3592,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1388:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 3591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1380:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1380:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1380:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3594,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1395:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1399:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1395:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3596,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "1407:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3587,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3490,
                            "src": "1351:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3586,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "1344:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1344:18:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1820",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1363:16:21",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1309,
                      "src": "1344:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1344:71:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3598,
                  "nodeType": "ExpressionStatement",
                  "src": "1344:71:21"
                },
                {
                  "expression": {
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3599,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "1425:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3600,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "1440:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1453:9:21",
                      "memberName": "cancelNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "1440:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "1425:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3603,
                  "nodeType": "ExpressionStatement",
                  "src": "1425:37:21"
                }
              ]
            },
            "functionSelector": "2f9fa7f6",
            "id": 3605,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3580,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "1296:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1309:12:21",
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3478,
                    "src": "1296:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3582,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3579,
                  "name": "inProjectState",
                  "nameLocations": [
                    "1281:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "1281:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1281:41:21"
              },
              {
                "id": 3584,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3583,
                  "name": "onlySeller",
                  "nameLocations": [
                    "1323:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3765,
                  "src": "1323:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1323:10:21"
              }
            ],
            "name": "cancelAtNFT",
            "nameLocation": "1260:11:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1271:2:21"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1334:0:21"
            },
            "scope": 3890,
            "src": "1251:218:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3667,
              "nodeType": "Block",
              "src": "1591:444:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3616,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1605:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1609:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1605:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3618,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "1619:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1605:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3629,
                    "nodeType": "Block",
                    "src": "1692:45:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3625,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3495,
                            "src": "1706:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3626,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3607,
                            "src": "1720:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1706:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3628,
                        "nodeType": "ExpressionStatement",
                        "src": "1706:20:21"
                      }
                    ]
                  },
                  "id": 3630,
                  "nodeType": "IfStatement",
                  "src": "1601:136:21",
                  "trueBody": {
                    "id": 3624,
                    "nodeType": "Block",
                    "src": "1633:46:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3620,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3498,
                            "src": "1647:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3621,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3607,
                            "src": "1662:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1647:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3623,
                        "nodeType": "ExpressionStatement",
                        "src": "1647:21:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3631,
                        "name": "sellerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "1759:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1775:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1759:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3634,
                        "name": "buyerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "1783:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1798:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1783:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1759:43:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3666,
                  "nodeType": "IfStatement",
                  "src": "1755:274:21",
                  "trueBody": {
                    "id": 3665,
                    "nodeType": "Block",
                    "src": "1803:226:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3644,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1861:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                                    "typeString": "contract NFTEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                                    "typeString": "contract NFTEscrow"
                                  }
                                ],
                                "id": 3643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1853:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3642,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1853:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1853:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3646,
                              "name": "sellerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3486,
                              "src": "1868:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3647,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3492,
                              "src": "1883:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3639,
                                  "name": "nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3490,
                                  "src": "1824:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3638,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "1817:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 3640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1817:18:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1820",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 3641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1836:16:21",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1309,
                            "src": "1817:35:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 3648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1817:74:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3649,
                        "nodeType": "ExpressionStatement",
                        "src": "1817:74:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3655,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1935:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                                      "typeString": "contract NFTEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                                      "typeString": "contract NFTEscrow"
                                    }
                                  ],
                                  "id": 3654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1927:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3653,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1927:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1927:13:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1941:7:21",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "1927:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3650,
                              "name": "buyerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3488,
                              "src": "1905:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1918:8:21",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1905:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1905:44:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3659,
                        "nodeType": "ExpressionStatement",
                        "src": "1905:44:21"
                      },
                      {
                        "expression": {
                          "id": 3663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3660,
                            "name": "projectState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3501,
                            "src": "1963:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3661,
                              "name": "ProjectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "1978:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                                "typeString": "type(enum NFTEscrow.ProjectState)"
                              }
                            },
                            "id": 3662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "1991:22:21",
                            "memberName": "canceledBeforeDelivery",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3481,
                            "src": "1978:35:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "src": "1963:50:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "id": 3664,
                        "nodeType": "ExpressionStatement",
                        "src": "1963:50:21"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "342901a7",
            "id": 3668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3610,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "1542:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1555:12:21",
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3480,
                    "src": "1542:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3609,
                  "name": "inProjectState",
                  "nameLocations": [
                    "1527:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "1527:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1527:41:21"
              },
              {
                "id": 3614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3613,
                  "name": "BuyerOrSeller",
                  "nameLocations": [
                    "1577:13:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3809,
                  "src": "1577:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1577:13:21"
              }
            ],
            "name": "cancelBeforeDelivery",
            "nameLocation": "1486:20:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3607,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1512:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3668,
                  "src": "1507:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:13:21"
            },
            "returnParameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1591:0:21"
            },
            "scope": 3890,
            "src": "1477:558:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3688,
              "nodeType": "Block",
              "src": "2124:101:21",
              "statements": [
                {
                  "expression": {
                    "id": 3681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3675,
                      "name": "buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3488,
                      "src": "2134:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3678,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2157:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2161:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2157:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2149:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2149:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2149:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2134:34:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3682,
                  "nodeType": "ExpressionStatement",
                  "src": "2134:34:21"
                },
                {
                  "expression": {
                    "id": 3686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3683,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "2178:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3684,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "2193:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2206:12:21",
                      "memberName": "ethDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3480,
                      "src": "2193:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2178:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3687,
                  "nodeType": "ExpressionStatement",
                  "src": "2178:40:21"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "id": 3689,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3671,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "2097:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2110:12:21",
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3478,
                    "src": "2097:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3670,
                  "name": "inProjectState",
                  "nameLocations": [
                    "2082:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "2082:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2082:41:21"
              }
            ],
            "name": "depositETH",
            "nameLocation": "2054:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2064:2:21"
            },
            "returnParameters": {
              "id": 3674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2124:0:21"
            },
            "scope": 3890,
            "src": "2045:180:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3705,
              "nodeType": "Block",
              "src": "2333:62:21",
              "statements": [
                {
                  "expression": {
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3700,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "2343:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3701,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "2358:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2371:17:21",
                      "memberName": "deliveryInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3482,
                      "src": "2358:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2343:45:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3704,
                  "nodeType": "ExpressionStatement",
                  "src": "2343:45:21"
                }
              ]
            },
            "functionSelector": "a1ee4181",
            "id": 3706,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3692,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "2285:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2298:12:21",
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3480,
                    "src": "2285:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3691,
                  "name": "inProjectState",
                  "nameLocations": [
                    "2270:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "2270:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2270:41:21"
              },
              {
                "id": 3696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3695,
                  "name": "onlySeller",
                  "nameLocations": [
                    "2312:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3765,
                  "src": "2312:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2312:10:21"
              },
              {
                "id": 3698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3697,
                  "name": "noDispute",
                  "nameLocations": [
                    "2323:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3792,
                  "src": "2323:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2323:9:21"
              }
            ],
            "name": "initiateDelivery",
            "nameLocation": "2244:16:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2260:2:21"
            },
            "returnParameters": {
              "id": 3699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2333:0:21"
            },
            "scope": 3890,
            "src": "2235:160:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3742,
              "nodeType": "Block",
              "src": "2512:192:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3721,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2566:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2558:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2558:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2558:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3723,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3488,
                        "src": "2573:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3724,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "2587:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3716,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3490,
                            "src": "2529:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3715,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "2522:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2522:18:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1820",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2541:16:21",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1309,
                      "src": "2522:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2522:73:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3726,
                  "nodeType": "ExpressionStatement",
                  "src": "2522:73:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3732,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2636:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                                "typeString": "contract NFTEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                                "typeString": "contract NFTEscrow"
                              }
                            ],
                            "id": 3731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2628:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2628:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2628:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2642:7:21",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2628:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3727,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3486,
                        "src": "2605:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2619:8:21",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2605:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2605:45:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3736,
                  "nodeType": "ExpressionStatement",
                  "src": "2605:45:21"
                },
                {
                  "expression": {
                    "id": 3740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3737,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "2660:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3738,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "2675:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2688:9:21",
                      "memberName": "delivered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3483,
                      "src": "2675:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2660:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3741,
                  "nodeType": "ExpressionStatement",
                  "src": "2660:37:21"
                }
              ]
            },
            "functionSelector": "5e10177b",
            "id": 3743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3709,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "2470:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2483:17:21",
                    "memberName": "deliveryInitiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3482,
                    "src": "2470:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3708,
                  "name": "inProjectState",
                  "nameLocations": [
                    "2455:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3822,
                  "src": "2455:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2455:46:21"
              },
              {
                "id": 3713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3712,
                  "name": "onlyBuyer",
                  "nameLocations": [
                    "2502:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3777,
                  "src": "2502:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2502:9:21"
              }
            ],
            "name": "confirmDelivery",
            "nameLocation": "2422:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2437:2:21"
            },
            "returnParameters": {
              "id": 3714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2512:0:21"
            },
            "scope": 3890,
            "src": "2413:291:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3752,
              "nodeType": "Block",
              "src": "2754:32:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3748,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3745,
                        "src": "2766:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2758:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2758:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3750,
                  "nodeType": "ExpressionStatement",
                  "src": "2758:19:21"
                },
                {
                  "id": 3751,
                  "nodeType": "PlaceholderStatement",
                  "src": "2781:1:21"
                }
              ]
            },
            "id": 3753,
            "name": "condition",
            "nameLocation": "2727:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3745,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nameLocation": "2742:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3753,
                  "src": "2737:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2737:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2736:17:21"
            },
            "src": "2718:68:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3764,
              "nodeType": "Block",
              "src": "2811:86:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2823:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2827:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2823:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3758,
                          "name": "sellerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3486,
                          "src": "2837:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2823:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f74207468652073656c6c65722e",
                        "id": 3760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2852:35:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5771ad670ddc77eed0acb89e6de301ddb0366af7a9c9745df523b7d6bf5b5213",
                          "typeString": "literal_string \"Caller address is not the seller.\""
                        },
                        "value": "Caller address is not the seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5771ad670ddc77eed0acb89e6de301ddb0366af7a9c9745df523b7d6bf5b5213",
                          "typeString": "literal_string \"Caller address is not the seller.\""
                        }
                      ],
                      "id": 3755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2815:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:73:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3762,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:73:21"
                },
                {
                  "id": 3763,
                  "nodeType": "PlaceholderStatement",
                  "src": "2892:1:21"
                }
              ]
            },
            "id": 3765,
            "name": "onlySeller",
            "nameLocation": "2798:10:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2808:2:21"
            },
            "src": "2789:108:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3776,
              "nodeType": "Block",
              "src": "2921:84:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3768,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2933:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2937:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2933:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3770,
                          "name": "buyerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3488,
                          "src": "2947:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2933:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c65722061646472657373206973206e6f74207468652062757965722e",
                        "id": 3772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2961:34:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_353567adedb2460968cac49d16d878a1117f520cb8b4169e7a397bcbe68fcca1",
                          "typeString": "literal_string \"Caller address is not the buyer.\""
                        },
                        "value": "Caller address is not the buyer."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_353567adedb2460968cac49d16d878a1117f520cb8b4169e7a397bcbe68fcca1",
                          "typeString": "literal_string \"Caller address is not the buyer.\""
                        }
                      ],
                      "id": 3767,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2925:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2925:71:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3774,
                  "nodeType": "ExpressionStatement",
                  "src": "2925:71:21"
                },
                {
                  "id": 3775,
                  "nodeType": "PlaceholderStatement",
                  "src": "3000:1:21"
                }
              ]
            },
            "id": 3777,
            "name": "onlyBuyer",
            "nameLocation": "2909:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3766,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2918:2:21"
            },
            "src": "2900:105:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3791,
              "nodeType": "Block",
              "src": "3029:114:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3782,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3780,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3495,
                            "src": "3044:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3059:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3044:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3785,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3783,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3498,
                            "src": "3068:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3784,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3084:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3068:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3044:45:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "456974686572206275796572206f722073656c6c65722063616e636c6564206465616c2e",
                        "id": 3787,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3091:38:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9ae675d4ce11a776d37fde51870bd8404cc3b434233f5d0dfa3ba6b707c73bc",
                          "typeString": "literal_string \"Either buyer or seller cancled deal.\""
                        },
                        "value": "Either buyer or seller cancled deal."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9ae675d4ce11a776d37fde51870bd8404cc3b434233f5d0dfa3ba6b707c73bc",
                          "typeString": "literal_string \"Either buyer or seller cancled deal.\""
                        }
                      ],
                      "id": 3779,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3036:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3788,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3036:95:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3789,
                  "nodeType": "ExpressionStatement",
                  "src": "3036:95:21"
                },
                {
                  "id": 3790,
                  "nodeType": "PlaceholderStatement",
                  "src": "3138:1:21"
                }
              ]
            },
            "id": 3792,
            "name": "noDispute",
            "nameLocation": "3018:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3778,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3027:2:21"
            },
            "src": "3009:134:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3808,
              "nodeType": "Block",
              "src": "3172:112:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3795,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3184:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3188:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3184:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3797,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3488,
                            "src": "3198:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3184:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3799,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3214:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3218:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3214:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3801,
                            "name": "sellerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3486,
                            "src": "3228:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3214:27:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3184:57:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206275796572206f722073656c6c65722e",
                        "id": 3804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3242:32:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f0a37c69e944dcdf9f14b2444e245b46facd3e944148d179a0a2f3b62a9a5bbb",
                          "typeString": "literal_string \"Caller is not buyer or seller.\""
                        },
                        "value": "Caller is not buyer or seller."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f0a37c69e944dcdf9f14b2444e245b46facd3e944148d179a0a2f3b62a9a5bbb",
                          "typeString": "literal_string \"Caller is not buyer or seller.\""
                        }
                      ],
                      "id": 3794,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3176:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3176:99:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3806,
                  "nodeType": "ExpressionStatement",
                  "src": "3176:99:21"
                },
                {
                  "id": 3807,
                  "nodeType": "PlaceholderStatement",
                  "src": "3279:1:21"
                }
              ]
            },
            "id": 3809,
            "name": "BuyerOrSeller",
            "nameLocation": "3156:13:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3169:2:21"
            },
            "src": "3147:137:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3821,
              "nodeType": "Block",
              "src": "3333:44:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$3484",
                          "typeString": "enum NFTEscrow.ProjectState"
                        },
                        "id": 3817,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3815,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3501,
                          "src": "3345:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3816,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3812,
                          "src": "3361:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "src": "3345:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3814,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3337:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3818,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3337:31:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3819,
                  "nodeType": "ExpressionStatement",
                  "src": "3337:31:21"
                },
                {
                  "id": 3820,
                  "nodeType": "PlaceholderStatement",
                  "src": "3372:1:21"
                }
              ]
            },
            "id": 3822,
            "name": "inProjectState",
            "nameLocation": "3297:14:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3812,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "3325:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3822,
                  "src": "3312:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$3484",
                    "typeString": "enum NFTEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 3811,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3810,
                      "name": "ProjectState",
                      "nameLocations": [
                        "3312:12:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3484,
                      "src": "3312:12:21"
                    },
                    "referencedDeclaration": 3484,
                    "src": "3312:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3311:21:21"
            },
            "src": "3288:89:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3833,
              "nodeType": "Block",
              "src": "3443:45:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3829,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3468:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                            "typeString": "contract NFTEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTEscrow_$3890",
                            "typeString": "contract NFTEscrow"
                          }
                        ],
                        "id": 3828,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3460:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3827,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3460:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3830,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3460:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3474:7:21",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3460:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3826,
                  "id": 3832,
                  "nodeType": "Return",
                  "src": "3453:28:21"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 3834,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "3392:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3402:2:21"
            },
            "returnParameters": {
              "id": 3826,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3825,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3434:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3834,
                  "src": "3426:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3824,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3426:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3425:17:21"
            },
            "scope": 3890,
            "src": "3383:105:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3888,
              "nodeType": "Block",
              "src": "3557:556:21",
              "statements": [
                {
                  "assignments": [
                    3841
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 3841,
                      "mutability": "mutable",
                      "name": "temp",
                      "nameLocation": "3580:4:21",
                      "nodeType": "VariableDeclaration",
                      "scope": 3888,
                      "src": "3567:17:21",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      },
                      "typeName": {
                        "id": 3840,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 3839,
                          "name": "ProjectState",
                          "nameLocations": [
                            "3567:12:21"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 3484,
                          "src": "3567:12:21"
                        },
                        "referencedDeclaration": 3484,
                        "src": "3567:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$3484",
                          "typeString": "enum NFTEscrow.ProjectState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 3843,
                  "initialValue": {
                    "id": 3842,
                    "name": "projectState",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3501,
                    "src": "3587:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3567:32:21"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    },
                    "id": 3847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 3844,
                      "name": "temp",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3841,
                      "src": "3612:4:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 3845,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "3620:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "3633:9:21",
                      "memberName": "newEscrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3477,
                      "src": "3620:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "3612:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      },
                      "id": 3853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3850,
                        "name": "temp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3841,
                        "src": "3681:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$3484",
                          "typeString": "enum NFTEscrow.ProjectState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 3851,
                          "name": "ProjectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3484,
                          "src": "3689:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                            "typeString": "type(enum NFTEscrow.ProjectState)"
                          }
                        },
                        "id": 3852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberLocation": "3702:12:21",
                        "memberName": "nftDeposited",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3478,
                        "src": "3689:25:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ProjectState_$3484",
                          "typeString": "enum NFTEscrow.ProjectState"
                        }
                      },
                      "src": "3681:33:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$3484",
                          "typeString": "enum NFTEscrow.ProjectState"
                        },
                        "id": 3859,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3856,
                          "name": "temp",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3841,
                          "src": "3756:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 3857,
                            "name": "ProjectState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3484,
                            "src": "3764:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                              "typeString": "type(enum NFTEscrow.ProjectState)"
                            }
                          },
                          "id": 3858,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3777:9:21",
                          "memberName": "cancelNFT",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3479,
                          "src": "3764:22:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "src": "3756:30:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "falseBody": {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          },
                          "id": 3865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3862,
                            "name": "temp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3841,
                            "src": "3825:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 3863,
                              "name": "ProjectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "3833:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                                "typeString": "type(enum NFTEscrow.ProjectState)"
                              }
                            },
                            "id": 3864,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "3846:12:21",
                            "memberName": "ethDeposited",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3480,
                            "src": "3833:25:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "src": "3825:33:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            },
                            "id": 3871,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 3868,
                              "name": "temp",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3841,
                              "src": "3900:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProjectState_$3484",
                                "typeString": "enum NFTEscrow.ProjectState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 3869,
                                "name": "ProjectState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3484,
                                "src": "3908:12:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                                  "typeString": "type(enum NFTEscrow.ProjectState)"
                                }
                              },
                              "id": 3870,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberLocation": "3921:22:21",
                              "memberName": "canceledBeforeDelivery",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3481,
                              "src": "3908:35:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ProjectState_$3484",
                                "typeString": "enum NFTEscrow.ProjectState"
                              }
                            },
                            "src": "3900:43:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_ProjectState_$3484",
                                "typeString": "enum NFTEscrow.ProjectState"
                              },
                              "id": 3877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 3874,
                                "name": "temp",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3841,
                                "src": "3997:4:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProjectState_$3484",
                                  "typeString": "enum NFTEscrow.ProjectState"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 3875,
                                  "name": "ProjectState",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3484,
                                  "src": "4005:12:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                                    "typeString": "type(enum NFTEscrow.ProjectState)"
                                  }
                                },
                                "id": 3876,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberLocation": "4018:17:21",
                                "memberName": "deliveryInitiated",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 3482,
                                "src": "4005:30:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_ProjectState_$3484",
                                  "typeString": "enum NFTEscrow.ProjectState"
                                }
                              },
                              "src": "3997:38:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "expression": {
                                "hexValue": "44656c697665726564",
                                "id": 3880,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4086:11:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_84d438931365e92021ed104a3ccc6ebb11094926f21ebfcbd81ad9746006c510",
                                  "typeString": "literal_string \"Delivered\""
                                },
                                "value": "Delivered"
                              },
                              "functionReturnParameters": 3838,
                              "id": 3881,
                              "nodeType": "Return",
                              "src": "4079:18:21"
                            },
                            "id": 3882,
                            "nodeType": "IfStatement",
                            "src": "3994:103:21",
                            "trueBody": {
                              "expression": {
                                "hexValue": "44656c697665727920496e69746961746564",
                                "id": 3878,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4044:20:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_85da265ba8abd52f831195a311b065bb58dd01453409437d0f554bffff031168",
                                  "typeString": "literal_string \"Delivery Initiated\""
                                },
                                "value": "Delivery Initiated"
                              },
                              "functionReturnParameters": 3838,
                              "id": 3879,
                              "nodeType": "Return",
                              "src": "4037:27:21"
                            }
                          },
                          "id": 3883,
                          "nodeType": "IfStatement",
                          "src": "3897:200:21",
                          "trueBody": {
                            "expression": {
                              "hexValue": "43616e63656c6c6564204265666f72652044656c6976657279",
                              "id": 3872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3952:27:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8622a5f91cfc523e28e5e9f4a17a9780ca15fcc6c6fc45102dbc6e4bb67f57c8",
                                "typeString": "literal_string \"Cancelled Before Delivery\""
                              },
                              "value": "Cancelled Before Delivery"
                            },
                            "functionReturnParameters": 3838,
                            "id": 3873,
                            "nodeType": "Return",
                            "src": "3945:34:21"
                          }
                        },
                        "id": 3884,
                        "nodeType": "IfStatement",
                        "src": "3822:275:21",
                        "trueBody": {
                          "expression": {
                            "hexValue": "455448204465706f7369746564",
                            "id": 3866,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3867:15:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_de21685367b6c2e255e025758634c4eb0b357666e8359032b428e9d3b0f85795",
                              "typeString": "literal_string \"ETH Deposited\""
                            },
                            "value": "ETH Deposited"
                          },
                          "functionReturnParameters": 3838,
                          "id": 3867,
                          "nodeType": "Return",
                          "src": "3860:22:21"
                        }
                      },
                      "id": 3885,
                      "nodeType": "IfStatement",
                      "src": "3753:344:21",
                      "trueBody": {
                        "expression": {
                          "hexValue": "43616e63656c204e4654",
                          "id": 3860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3795:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_dfbc801f1bd3652cbaa4433340ada77f34dbe7dbe34f44a6bfdf6580ce7b22c5",
                            "typeString": "literal_string \"Cancel NFT\""
                          },
                          "value": "Cancel NFT"
                        },
                        "functionReturnParameters": 3838,
                        "id": 3861,
                        "nodeType": "Return",
                        "src": "3788:19:21"
                      }
                    },
                    "id": 3886,
                    "nodeType": "IfStatement",
                    "src": "3678:419:21",
                    "trueBody": {
                      "expression": {
                        "hexValue": "4e4654204465706f7369746564",
                        "id": 3854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3723:15:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b120a3a7eb48d3895d92c832081c1b36064e3ca820298eaf1fecb85e475e7835",
                          "typeString": "literal_string \"NFT Deposited\""
                        },
                        "value": "NFT Deposited"
                      },
                      "functionReturnParameters": 3838,
                      "id": 3855,
                      "nodeType": "Return",
                      "src": "3716:22:21"
                    }
                  },
                  "id": 3887,
                  "nodeType": "IfStatement",
                  "src": "3609:488:21",
                  "trueBody": {
                    "expression": {
                      "hexValue": "4e657720457363726f77",
                      "id": 3848,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "string",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3651:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_stringliteral_33a6ad7ff9d467b9638566af3fb3026b3d492ea43e165ed72c6c6d1211103650",
                        "typeString": "literal_string \"New Escrow\""
                      },
                      "value": "New Escrow"
                    },
                    "functionReturnParameters": 3838,
                    "id": 3849,
                    "nodeType": "Return",
                    "src": "3644:19:21"
                  }
                }
              ]
            },
            "functionSelector": "49958611",
            "id": 3889,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProjectState",
            "nameLocation": "3503:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3518:2:21"
            },
            "returnParameters": {
              "id": 3838,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3837,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3889,
                  "src": "3542:13:21",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3836,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3542:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3541:15:21"
            },
            "scope": 3890,
            "src": "3494:619:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3891,
        "src": "183:3932:21",
        "usedErrors": []
      }
    ],
    "src": "33:4084:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-10-21T16:37:33.371Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}