{
  "contractName": "NFTEscrow",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buyerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectState",
      "outputs": [
        {
          "internalType": "enum NFTEscrow.ProjectState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_NFTAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TokenID",
          "type": "uint256"
        }
      ],
      "name": "depositNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelAtNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "cancelBeforeDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAtNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"cancelBeforeDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_TokenID\",\"type\":\"uint256\"}],\"name\":\"depositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectState\",\"outputs\":[{\"internalType\":\"enum NFTEscrow.ProjectState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EscrowNFT.sol\":\"NFTEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/EscrowNFT.sol\":{\"keccak256\":\"0x16459293cc1cc456120342e5920b076f282eb5fb4cb25d46d2f9ebd185156a5e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f940f6d94ed3e62a75aadff5627332dab7e653f62db317a6a32c35e55e186b1\",\"dweb:/ipfs/QmUobjDLm8uJatBpEWRnro1K9t5K3wfVH9RCERDTG5hihT\"]}},\"version\":1}",
  "bytecode": "0x60806040526004805461ffff1916905534801561001b57600080fd5b5060008054336001600160a01b03199091161790556004805462ff0000191690556108a48061004b6000396000f3fe6080604052600436106100a75760003560e01c80635bf8633a116100645780635bf8633a146101935780635e10177b146101b3578063748807ab146101bb5780639b5b9b18146101e8578063a1ee418114610208578063f6326fb31461021d57600080fd5b806312065fe0146100ac578063150b7a02146100cc5780632f9fa7f614610111578063342901a7146101285780633d9b2ae61461013b57806344834aca14610173575b600080fd5b3480156100b857600080fd5b506040514781526020015b60405180910390f35b3480156100d857600080fd5b506100f86100e736600461071e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100c3565b34801561011d57600080fd5b50610126610225565b005b6101266101363660046107b9565b6102ea565b34801561014757600080fd5b5060005461015b906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b34801561017f57600080fd5b5060015461015b906001600160a01b031681565b34801561019f57600080fd5b5060025461015b906001600160a01b031681565b610126610460565b3480156101c757600080fd5b506004546101db9062010000900460ff1681565b6040516100c391906107f8565b3480156101f457600080fd5b50610126610203366004610820565b610560565b34801561021457600080fd5b50610126610631565b6101266106ae565b60018060045462010000900460ff166006811115610245576102456107e2565b1461024f57600080fd5b6000546001600160a01b0316331461026657600080fd5b600254600354604051632142170760e11b81526001600160a01b03909216916342842e0e9161029b913091339160040161084a565b600060405180830381600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b5050600480546002935090915062ff0000191662010000835b021790555050565b60038060045462010000900460ff16600681111561030a5761030a6107e2565b1461031457600080fd5b6001546001600160a01b031633148061033757506000546001600160a01b031633145b61034057600080fd5b6000546001600160a01b0316330361036a576004805461ff00191661010084151502179055610379565b6004805460ff19168315151790555b60045460ff610100909104161515600114801561039d575060045460ff1615156001145b1561045c57600254600054600354604051632142170760e11b81526001600160a01b03938416936342842e0e936103dd933093929091169160040161084a565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b50506001546040516001600160a01b0390911692504780156108fc029250906000818181858888f19350505050158015610449573d6000803e3d6000fd5b506004805462ff00001916620400001790555b5050565b60058060045462010000900460ff166006811115610480576104806107e2565b1461048a57600080fd5b6001546001600160a01b031633146104a157600080fd5b600254600154600354604051632142170760e11b81526001600160a01b03938416936342842e0e936104dc933093929091169160040161084a565b600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b5050600080546040516001600160a01b0390911693504780156108fc02935091818181858888f19350505050158015610547573d6000803e3d6000fd5b50600480546006919062ff0000191662010000836102e2565b60008060045462010000900460ff166006811115610580576105806107e2565b1461058a57600080fd5b6000546001600160a01b031633146105a157600080fd5b600280546001600160a01b0319166001600160a01b0385169081179091556003839055604051632142170760e11b81526342842e0e906105e99033903090879060040161084a565b600060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b50506004805462ff00001916620100001790555050505050565b60038060045462010000900460ff166006811115610651576106516107e2565b1461065b57600080fd5b6000546001600160a01b0316331461067257600080fd5b60045460ff1615801561068d5750600454610100900460ff16155b61069657600080fd5b600480546005919062ff0000191662010000836102e2565b60018060045462010000900460ff1660068111156106ce576106ce6107e2565b146106d857600080fd5b600180546001600160a01b03191633179055600480546003919062ff0000191662010000836102e2565b80356001600160a01b038116811461071957600080fd5b919050565b60008060008060006080868803121561073657600080fd5b61073f86610702565b945061074d60208701610702565b935060408601359250606086013567ffffffffffffffff8082111561077157600080fd5b818801915088601f83011261078557600080fd5b81358181111561079457600080fd5b8960208285010111156107a657600080fd5b9699959850939650602001949392505050565b6000602082840312156107cb57600080fd5b813580151581146107db57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016007831061081a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561083357600080fd5b61083c83610702565b946020939093013593505050565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea26469706673582212201aaa1c51e505ea75879fcdd9e40a881a672462523c296ee01c51b5e227e96f1964736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80635bf8633a116100645780635bf8633a146101935780635e10177b146101b3578063748807ab146101bb5780639b5b9b18146101e8578063a1ee418114610208578063f6326fb31461021d57600080fd5b806312065fe0146100ac578063150b7a02146100cc5780632f9fa7f614610111578063342901a7146101285780633d9b2ae61461013b57806344834aca14610173575b600080fd5b3480156100b857600080fd5b506040514781526020015b60405180910390f35b3480156100d857600080fd5b506100f86100e736600461071e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100c3565b34801561011d57600080fd5b50610126610225565b005b6101266101363660046107b9565b6102ea565b34801561014757600080fd5b5060005461015b906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b34801561017f57600080fd5b5060015461015b906001600160a01b031681565b34801561019f57600080fd5b5060025461015b906001600160a01b031681565b610126610460565b3480156101c757600080fd5b506004546101db9062010000900460ff1681565b6040516100c391906107f8565b3480156101f457600080fd5b50610126610203366004610820565b610560565b34801561021457600080fd5b50610126610631565b6101266106ae565b60018060045462010000900460ff166006811115610245576102456107e2565b1461024f57600080fd5b6000546001600160a01b0316331461026657600080fd5b600254600354604051632142170760e11b81526001600160a01b03909216916342842e0e9161029b913091339160040161084a565b600060405180830381600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b5050600480546002935090915062ff0000191662010000835b021790555050565b60038060045462010000900460ff16600681111561030a5761030a6107e2565b1461031457600080fd5b6001546001600160a01b031633148061033757506000546001600160a01b031633145b61034057600080fd5b6000546001600160a01b0316330361036a576004805461ff00191661010084151502179055610379565b6004805460ff19168315151790555b60045460ff610100909104161515600114801561039d575060045460ff1615156001145b1561045c57600254600054600354604051632142170760e11b81526001600160a01b03938416936342842e0e936103dd933093929091169160040161084a565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b50506001546040516001600160a01b0390911692504780156108fc029250906000818181858888f19350505050158015610449573d6000803e3d6000fd5b506004805462ff00001916620400001790555b5050565b60058060045462010000900460ff166006811115610480576104806107e2565b1461048a57600080fd5b6001546001600160a01b031633146104a157600080fd5b600254600154600354604051632142170760e11b81526001600160a01b03938416936342842e0e936104dc933093929091169160040161084a565b600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b5050600080546040516001600160a01b0390911693504780156108fc02935091818181858888f19350505050158015610547573d6000803e3d6000fd5b50600480546006919062ff0000191662010000836102e2565b60008060045462010000900460ff166006811115610580576105806107e2565b1461058a57600080fd5b6000546001600160a01b031633146105a157600080fd5b600280546001600160a01b0319166001600160a01b0385169081179091556003839055604051632142170760e11b81526342842e0e906105e99033903090879060040161084a565b600060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b50506004805462ff00001916620100001790555050505050565b60038060045462010000900460ff166006811115610651576106516107e2565b1461065b57600080fd5b6000546001600160a01b0316331461067257600080fd5b60045460ff1615801561068d5750600454610100900460ff16155b61069657600080fd5b600480546005919062ff0000191662010000836102e2565b60018060045462010000900460ff1660068111156106ce576106ce6107e2565b146106d857600080fd5b600180546001600160a01b03191633179055600480546003919062ff0000191662010000836102e2565b80356001600160a01b038116811461071957600080fd5b919050565b60008060008060006080868803121561073657600080fd5b61073f86610702565b945061074d60208701610702565b935060408601359250606086013567ffffffffffffffff8082111561077157600080fd5b818801915088601f83011261078557600080fd5b81358181111561079457600080fd5b8960208285010111156107a657600080fd5b9699959850939650602001949392505050565b6000602082840312156107cb57600080fd5b813580151581146107db57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016007831061081a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561083357600080fd5b61083c83610702565b946020939093013593505050565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea26469706673582212201aaa1c51e505ea75879fcdd9e40a881a672462523c296ee01c51b5e227e96f1964736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:143:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:10",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:10"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3610:10",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:10",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:10",
                "type": ""
              }
            ],
            "src": "14:177:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:10"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:10"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:10",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:10",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:10"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:10"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:10"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:10"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:10"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:10",
                "type": ""
              }
            ],
            "src": "196:173:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "514:668:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "561:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "570:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "573:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "563:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "563:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "563:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "535:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "544:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "531:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "531:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "556:3:10",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:33:10"
                  },
                  "nodeType": "YulIf",
                  "src": "524:53:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "586:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "615:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "596:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:48:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "667:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "678:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "644:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:38:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "691:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "718:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "729:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "701:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "691:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "742:46:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "773:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "784:2:10",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "756:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:32:10"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "746:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "797:28:10",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "807:18:10",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "801:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "852:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "861:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "864:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "854:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "854:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "854:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "840:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "848:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "837:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:14:10"
                  },
                  "nodeType": "YulIf",
                  "src": "834:34:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "877:32:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "891:9:10"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "902:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "887:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "887:22:10"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "881:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "957:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "966:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "969:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "959:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "959:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "959:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "936:2:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "940:4:10",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "932:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "932:13:10"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:10"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "928:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:27:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:35:10"
                  },
                  "nodeType": "YulIf",
                  "src": "918:55:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "982:30:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1009:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "996:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:16:10"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "986:6:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1039:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1048:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1051:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1041:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1041:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1041:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:10"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1035:2:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1024:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:14:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1021:34:10"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1105:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1114:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1117:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1107:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1107:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1078:2:10"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1082:6:10"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1074:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1074:15:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1091:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1070:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:24:10"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1096:7:10"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1067:2:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:37:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1064:57:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1130:21:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1144:2:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:11:10"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1160:16:10",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1170:6:10"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1160:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "448:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "459:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "471:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "479:6:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "487:6:10",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "495:6:10",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "503:6:10",
                "type": ""
              }
            ],
            "src": "374:808:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:103:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1296:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1308:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1319:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1304:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1304:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1296:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1338:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1353:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1365:3:10",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1370:10:10",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1361:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1361:20:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:33:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1331:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:52:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1331:52:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1255:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1266:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1277:4:10",
                "type": ""
              }
            ],
            "src": "1187:202:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1461:206:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1507:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1516:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1519:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1509:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1509:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1509:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1482:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1478:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1503:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1474:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1471:52:10"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1532:36:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1558:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1545:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1545:23:10"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1536:5:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1621:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1630:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1633:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1623:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1623:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1623:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1590:5:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1611:5:10"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:6:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1604:13:10"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1597:6:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1597:21:10"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1587:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1587:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1580:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:40:10"
                  },
                  "nodeType": "YulIf",
                  "src": "1577:60:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1646:15:10",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1656:5:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1646:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1427:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1438:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1450:6:10",
                "type": ""
              }
            ],
            "src": "1394:273:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1799:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1811:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1807:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1799:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1841:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1856:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1872:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1877:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1868:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1868:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1881:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1864:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1864:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1834:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1834:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1834:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1758:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1769:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1780:4:10",
                "type": ""
              }
            ],
            "src": "1672:219:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1997:102:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2007:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2019:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2030:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2015:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2007:4:10"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2049:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2064:6:10"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2080:3:10",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2085:1:10",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2076:3:10"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2076:11:10"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2089:1:10",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2072:3:10"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2072:19:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2060:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2060:32:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:51:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2042:51:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1966:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1977:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1988:4:10",
                "type": ""
              }
            ],
            "src": "1896:203:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2136:95:10",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2153:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:3:10",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2165:10:10",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2156:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2156:20:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:31:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:31:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2193:1:10",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2196:4:10",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2186:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:15:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2217:1:10",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2220:4:10",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2210:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2210:15:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2210:15:10"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2104:127:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2352:229:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2362:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:10",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2370:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2362:4:10"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2430:111:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2451:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2458:3:10",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2463:10:10",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2454:3:10"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2454:20:10"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2444:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2444:31:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2444:31:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2495:1:10",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2498:4:10",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2488:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2488:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2488:15:10"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2523:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2526:4:10",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2516:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2516:15:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2516:15:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2410:6:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2418:1:10",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2407:2:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2407:13:10"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2400:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:21:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2397:144:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2557:9:10"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2568:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2550:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2550:25:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2550:25:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ProjectState_$1620__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2321:9:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2332:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2343:4:10",
                "type": ""
              }
            ],
            "src": "2236:345:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:167:10",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2719:16:10",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2728:1:10",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2731:1:10",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2721:6:10"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2721:12:10"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2721:12:10"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2694:7:10"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2703:9:10"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2690:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2690:23:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2715:2:10",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2686:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:32:10"
                  },
                  "nodeType": "YulIf",
                  "src": "2683:52:10"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2744:39:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2773:9:10"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2754:18:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2754:29:10"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2744:6:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2792:42:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2819:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2830:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2815:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2815:18:10"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2802:12:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2802:32:10"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2792:6:10"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2631:9:10",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2642:7:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2654:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2662:6:10",
                "type": ""
              }
            ],
            "src": "2586:254:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3002:218:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3012:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3024:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3035:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3020:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3020:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3012:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3047:29:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3065:3:10",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3070:1:10",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3061:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3061:11:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3074:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3057:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3057:19:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3051:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3092:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3107:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3115:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3103:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3103:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3085:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3139:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3150:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3135:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3135:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3159:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3167:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3128:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3128:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3128:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3191:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3202:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3187:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3187:18:10"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3207:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3180:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3180:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2955:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2966:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2974:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2982:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2993:4:10",
                "type": ""
              }
            ],
            "src": "2845:375:10"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3390:218:10",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3400:26:10",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3412:9:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3423:2:10",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3408:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3408:18:10"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3400:4:10"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3435:29:10",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3453:3:10",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3458:1:10",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:11:10"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3462:1:10",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3445:3:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3445:19:10"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3439:2:10",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3480:9:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3495:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3503:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3491:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3473:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3473:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3473:34:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3527:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3538:2:10",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:18:10"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3547:6:10"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3555:2:10"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3543:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3543:15:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3516:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:43:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3516:43:10"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3579:9:10"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:2:10",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3575:3:10"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3575:18:10"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3595:6:10"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:10"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:34:10"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3568:34:10"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3343:9:10",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3354:6:10",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3362:6:10",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3370:6:10",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3381:4:10",
                "type": ""
              }
            ],
            "src": "3225:383:10"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ProjectState_$1620__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
      "id": 10,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "183:3151:9:-:0;;;499:24;;;-1:-1:-1;;529:25:9;;;599:112;;;;;;;;;-1:-1:-1;622:13:9;:35;;646:10;-1:-1:-1;;;;;;622:35:9;;;;;;667:12;:37;;-1:-1:-1;;667:37:9;;;183:3151;;;;;;",
  "deployedSourceMap": "183:3151:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3227:105;;;;;;;;;;-1:-1:-1;3227:105:9;;3304:21;160:25:10;;148:2;133:18;3227:105:9;;;;;;;;721:185;;;;;;;;;;-1:-1:-1;721:185:9;;;;;:::i;:::-;-1:-1:-1;;;721:185:9;;;;;;;;;;;-1:-1:-1;;;;;;1349:33:10;;;1331:52;;1319:2;1304:18;721:185:9;1187:202:10;1242:218:9;;;;;;;;;;;;;:::i;:::-;;1468:558;;;;;;:::i;:::-;;:::i;364:36::-;;;;;;;;;;-1:-1:-1;364:36:9;;;;-1:-1:-1;;;;;364:36:9;;;;;;-1:-1:-1;;;;;1852:32:10;;;1834:51;;1822:2;1807:18;364:36:9;1672:219:10;406:35:9;;;;;;;;;;-1:-1:-1;406:35:9;;;;-1:-1:-1;;;;;406:35:9;;;447:25;;;;;;;;;;-1:-1:-1;447:25:9;;;;-1:-1:-1;;;;;447:25:9;;;2404:291;;;:::i;560:32::-;;;;;;;;;;-1:-1:-1;560:32:9;;;;;;;;;;;;;;;;;;:::i;916:316::-;;;;;;;;;;-1:-1:-1;916:316:9;;;;;:::i;:::-;;:::i;2226:160::-;;;;;;;;;;;;;:::i;2036:180::-;;;:::i;1242:218::-;1287:25;;3189:12;;;;;;;:22;;;;;;;;:::i;:::-;;3181:31;;;;;;2828:13:::1;::::0;-1:-1:-1;;;;;2828:13:9::1;2814:10;:27;2806:36;;;::::0;::::1;;1342:10:::2;::::0;1398:7:::2;::::0;1335:71:::2;::::0;-1:-1:-1;;;1335:71:9;;-1:-1:-1;;;;;1342:10:9;;::::2;::::0;1335:35:::2;::::0;:71:::2;::::0;1379:4:::2;::::0;1386:10:::2;::::0;1335:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1416:12:9::2;:37:::0;;1431:22:::2;::::0;-1:-1:-1;1416:12:9;;-1:-1:-1;;;1416:37:9::2;::::0;1431:22;1416:37:::2;;;;;;1242:218:::0;:::o;1468:558::-;1533:25;;3189:12;;;;;;;:22;;;;;;;;:::i;:::-;;3181:31;;;;;;3075:12:::1;::::0;-1:-1:-1;;;;;3075:12:9::1;3061:10;:26;::::0;:57:::1;;-1:-1:-1::0;3105:13:9::1;::::0;-1:-1:-1;;;;;3105:13:9::1;3091:10;:27;3061:57;3053:66;;;::::0;::::1;;1610:13:::2;::::0;-1:-1:-1;;;;;1610:13:9::2;1596:10;:27:::0;1592:136:::2;;1638:12;:21:::0;;-1:-1:-1;;1638:21:9::2;;::::0;::::2;;;;::::0;;1592:136:::2;;;1697:11;:20:::0;;-1:-1:-1;;1697:20:9::2;::::0;::::2;;;::::0;;1592:136:::2;1750:12;::::0;::::2;;::::0;;::::2;;:20;;:12;:20;:43:::0;::::2;;;-1:-1:-1::0;1774:11:9::2;::::0;::::2;;:19;;:11:::0;:19:::2;1750:43;1746:274;;;1815:10;::::0;::::2;1859:13:::0;1874:7:::2;::::0;1808:74:::2;::::0;-1:-1:-1;;;1808:74:9;;-1:-1:-1;;;;;1815:10:9;;::::2;::::0;1808:35:::2;::::0;:74:::2;::::0;1852:4:::2;::::0;1859:13;;;::::2;::::0;1808:74:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1896:12:9::2;::::0;:44:::2;::::0;-1:-1:-1;;;;;1896:12:9;;::::2;::::0;-1:-1:-1;1918:21:9::2;1896:44:::0;::::2;;;::::0;-1:-1:-1;1918:21:9;1896:12:::2;:44:::0;:12;:44;1918:21;1896:12;:44;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;1969:35:9::2;1954:50:::0;;-1:-1:-1;;1954:50:9::2;::::0;::::2;::::0;;1746:274:::2;1468:558:::0;;:::o;2404:291::-;2461:30;;3189:12;;;;;;;:22;;;;;;;;:::i;:::-;;3181:31;;;;;;2901:12:::1;::::0;-1:-1:-1;;;;;2901:12:9::1;2887:10;:26;2879:35;;;::::0;::::1;;2520:10:::2;::::0;;2564:12;2578:7:::2;::::0;2513:73:::2;::::0;-1:-1:-1;;;2513:73:9;;-1:-1:-1;;;;;2520:10:9;;::::2;::::0;2513:35:::2;::::0;:73:::2;::::0;2557:4:::2;::::0;2564:12;;;::::2;::::0;2513:73:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;2596:13:9::2;::::0;;:45:::2;::::0;-1:-1:-1;;;;;2596:13:9;;::::2;::::0;-1:-1:-1;2619:21:9::2;2596:45:::0;::::2;;;::::0;-1:-1:-1;2619:21:9;2596:45;:13;:45;2619:21;2596:13;:45;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;2651:12:9::2;:37:::0;;2666:22:::2;::::0;2651:12;-1:-1:-1;;2651:37:9::2;::::0;2666:22;2651:37:::2;::::0;916:316;997:22;;3189:12;;;;;;;:22;;;;;;;;:::i;:::-;;3181:31;;;;;;2828:13:::1;::::0;-1:-1:-1;;;;;2828:13:9::1;2814:10;:27;2806:36;;;::::0;::::1;;1042:10:::2;:24:::0;;-1:-1:-1;;;;;;1042:24:9::2;-1:-1:-1::0;;;;;1042:24:9;::::2;::::0;;::::2;::::0;;;1076:7:::2;:18:::0;;;1104:71:::2;::::0;-1:-1:-1;;;1104:71:9;;:35:::2;::::0;:71:::2;::::0;1140:10:::2;::::0;1160:4:::2;::::0;1076:18;;1104:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1185:12:9::2;:40:::0;;-1:-1:-1;;1185:40:9::2;::::0;::::2;::::0;;-1:-1:-1;;;;;916:316:9:o;2226:160::-;2276:25;;3189:12;;;;;;;:22;;;;;;;;:::i;:::-;;3181:31;;;;;;2828:13:::1;::::0;-1:-1:-1;;;;;2828:13:9::1;2814:10;:27;2806:36;;;::::0;::::1;;2962:11:::2;::::0;::::2;;:20;::::0;::::2;:45;;-1:-1:-1::0;2986:12:9::2;::::0;::::2;::::0;::::2;;;:21;2962:45;2954:54;;;::::0;::::2;;2334:12:::3;:45:::0;;2349:30:::3;::::0;2334:12;-1:-1:-1;;2334:45:9::3;::::0;2349:30;2334:45:::3;::::0;2036:180;2088:25;;3189:12;;;;;;;:22;;;;;;;;:::i;:::-;;3181:31;;;;;;2125:12:::1;:34:::0;;-1:-1:-1;;;;;;2125:34:9::1;2148:10;2125:34;::::0;;2169:12:::1;:40:::0;;2184:25:::1;::::0;2169:12;-1:-1:-1;;2169:40:9::1;::::0;2184:25;2169:40:::1;::::0;196:173:10;264:20;;-1:-1:-1;;;;;313:31:10;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:808::-;471:6;479;487;495;503;556:3;544:9;535:7;531:23;527:33;524:53;;;573:1;570;563:12;524:53;596:29;615:9;596:29;:::i;:::-;586:39;;644:38;678:2;667:9;663:18;644:38;:::i;:::-;634:48;;729:2;718:9;714:18;701:32;691:42;;784:2;773:9;769:18;756:32;807:18;848:2;840:6;837:14;834:34;;;864:1;861;854:12;834:34;902:6;891:9;887:22;877:32;;947:7;940:4;936:2;932:13;928:27;918:55;;969:1;966;959:12;918:55;1009:2;996:16;1035:2;1027:6;1024:14;1021:34;;;1051:1;1048;1041:12;1021:34;1096:7;1091:2;1082:6;1078:2;1074:15;1070:24;1067:37;1064:57;;;1117:1;1114;1107:12;1064:57;374:808;;;;-1:-1:-1;374:808:10;;-1:-1:-1;1148:2:10;1140:11;;1170:6;374:808;-1:-1:-1;;;374:808:10:o;1394:273::-;1450:6;1503:2;1491:9;1482:7;1478:23;1474:32;1471:52;;;1519:1;1516;1509:12;1471:52;1558:9;1545:23;1611:5;1604:13;1597:21;1590:5;1587:32;1577:60;;1633:1;1630;1623:12;1577:60;1656:5;1394:273;-1:-1:-1;;;1394:273:10:o;2104:127::-;2165:10;2160:3;2156:20;2153:1;2146:31;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2236:345;2385:2;2370:18;;2418:1;2407:13;;2397:144;;2463:10;2458:3;2454:20;2451:1;2444:31;2498:4;2495:1;2488:15;2526:4;2523:1;2516:15;2397:144;2550:25;;;2236:345;:::o;2586:254::-;2654:6;2662;2715:2;2703:9;2694:7;2690:23;2686:32;2683:52;;;2731:1;2728;2721:12;2683:52;2754:29;2773:9;2754:29;:::i;:::-;2744:39;2830:2;2815:18;;;;2802:32;;-1:-1:-1;;;2586:254:10:o;2845:375::-;-1:-1:-1;;;;;3103:15:10;;;3085:34;;3155:15;;;;3150:2;3135:18;;3128:43;3202:2;3187:18;;3180:34;;;;3035:2;3020:18;;2845:375::o",
  "source": "//SPDX-License-Identifier: MIT\n \npragma solidity ^0.8.2;\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\n\ncontract NFTEscrow is IERC721Receiver {\n    \n    enum ProjectState {newEscrow, nftDeposited, cancelNFT, ethDeposited, canceledBeforeDelivery, deliveryInitiated, delivered}\n    \n    address payable public sellerAddress;\n    address payable public buyerAddress;\n    address public nftAddress;\n    uint256 tokenID;\n    bool buyerCancel = false;\n    bool sellerCancel = false;\n    ProjectState public projectState;\n\n    constructor(){\n        sellerAddress = payable(msg.sender);\n        projectState = ProjectState.newEscrow;\n    }\n    \n    function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {\n        return this.onERC721Received.selector;\n    }\n    \n    function depositNFT(address _NFTAddress, uint256 _TokenID) public inProjectState(ProjectState.newEscrow) onlySeller {\n        nftAddress = _NFTAddress;\n        tokenID = _TokenID;\n        ERC721(nftAddress).safeTransferFrom(msg.sender, address(this), tokenID);\n        projectState = ProjectState.nftDeposited;\n    }\n    \n    function cancelAtNFT() public inProjectState(ProjectState.nftDeposited) onlySeller {\n        ERC721(nftAddress).safeTransferFrom(address(this), msg.sender, tokenID);\n        projectState = ProjectState.cancelNFT;\n    }\n  \n    function cancelBeforeDelivery(bool _state) public inProjectState(ProjectState.ethDeposited) payable BuyerOrSeller {\n        if (msg.sender == sellerAddress){\n            sellerCancel = _state;\n        }\n        else{\n            buyerCancel = _state;\n        }\n        \n        if (sellerCancel == true && buyerCancel == true){\n            ERC721(nftAddress).safeTransferFrom(address(this), sellerAddress, tokenID);\n            buyerAddress.transfer(address(this).balance);\n            projectState = ProjectState.canceledBeforeDelivery;     \n        }\n    }\n    \n    function depositETH() public payable inProjectState(ProjectState.nftDeposited) {\n        buyerAddress = payable(msg.sender);\n        projectState = ProjectState.ethDeposited;\n    }\n    \n    function initiateDelivery() public inProjectState(ProjectState.ethDeposited) onlySeller noDispute {\n        projectState = ProjectState.deliveryInitiated;\n    }        \n    \n    function confirmDelivery() public payable inProjectState(ProjectState.deliveryInitiated) onlyBuyer {\n        ERC721(nftAddress).safeTransferFrom(address(this), buyerAddress, tokenID);\n        sellerAddress.transfer(address(this).balance);\n        projectState = ProjectState.delivered;\n    }\n        \n   \tmodifier condition(bool _condition) {\n\t\trequire(_condition);\n\t\t_;\n\t}\n\n\tmodifier onlySeller() {\n\t\trequire(msg.sender == sellerAddress);\n\t\t_;\n\t}\n\n\tmodifier onlyBuyer() {\n\t\trequire(msg.sender == buyerAddress);\n\t\t_;\n\t}\n\t\n\tmodifier noDispute(){\n\t    require(buyerCancel == false && sellerCancel == false);\n\t    _;\n\t}\n\t\n\tmodifier BuyerOrSeller() {\n\t\trequire(msg.sender == buyerAddress || msg.sender == sellerAddress);\n\t\t_;\n\t}\n\t\n\tmodifier inProjectState(ProjectState _state) {\n\t\trequire(projectState == _state);\n\t\t_;\n\t}\n\n    function getBalance() public view returns (uint256 balance) {\n        return address(this).balance;\n    }\n} ",
  "sourcePath": "/home/shubham/Desktop/Real-Estate-FNFT/blockchain/contracts/EscrowNFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/EscrowNFT.sol",
    "exportedSymbols": {
      "Address": [
        1322
      ],
      "Context": [
        1344
      ],
      "ERC165": [
        1594
      ],
      "ERC721": [
        866
      ],
      "IERC165": [
        1606
      ],
      "IERC721": [
        982
      ],
      "IERC721Metadata": [
        1027
      ],
      "IERC721Receiver": [
        1000
      ],
      "NFTEscrow": [
        1967
      ],
      "Strings": [
        1570
      ]
    },
    "id": 1968,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1608,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:9"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 1609,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1968,
        "sourceUnit": 867,
        "src": "57:57:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 1610,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1968,
        "sourceUnit": 1001,
        "src": "115:66:9",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 1611,
              "name": "IERC721Receiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1000,
              "src": "205:15:9"
            },
            "id": 1612,
            "nodeType": "InheritanceSpecifier",
            "src": "205:15:9"
          }
        ],
        "canonicalName": "NFTEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1967,
        "linearizedBaseContracts": [
          1967,
          1000
        ],
        "name": "NFTEscrow",
        "nameLocation": "192:9:9",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NFTEscrow.ProjectState",
            "id": 1620,
            "members": [
              {
                "id": 1613,
                "name": "newEscrow",
                "nameLocation": "251:9:9",
                "nodeType": "EnumValue",
                "src": "251:9:9"
              },
              {
                "id": 1614,
                "name": "nftDeposited",
                "nameLocation": "262:12:9",
                "nodeType": "EnumValue",
                "src": "262:12:9"
              },
              {
                "id": 1615,
                "name": "cancelNFT",
                "nameLocation": "276:9:9",
                "nodeType": "EnumValue",
                "src": "276:9:9"
              },
              {
                "id": 1616,
                "name": "ethDeposited",
                "nameLocation": "287:12:9",
                "nodeType": "EnumValue",
                "src": "287:12:9"
              },
              {
                "id": 1617,
                "name": "canceledBeforeDelivery",
                "nameLocation": "301:22:9",
                "nodeType": "EnumValue",
                "src": "301:22:9"
              },
              {
                "id": 1618,
                "name": "deliveryInitiated",
                "nameLocation": "325:17:9",
                "nodeType": "EnumValue",
                "src": "325:17:9"
              },
              {
                "id": 1619,
                "name": "delivered",
                "nameLocation": "344:9:9",
                "nodeType": "EnumValue",
                "src": "344:9:9"
              }
            ],
            "name": "ProjectState",
            "nameLocation": "237:12:9",
            "nodeType": "EnumDefinition",
            "src": "232:122:9"
          },
          {
            "constant": false,
            "functionSelector": "3d9b2ae6",
            "id": 1622,
            "mutability": "mutable",
            "name": "sellerAddress",
            "nameLocation": "387:13:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "364:36:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1621,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "364:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44834aca",
            "id": 1624,
            "mutability": "mutable",
            "name": "buyerAddress",
            "nameLocation": "429:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "406:35:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1623,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "406:15:9",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 1626,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "462:10:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "447:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 1625,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "447:7:9",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1628,
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "486:7:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "478:15:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1627,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "478:7:9",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1631,
            "mutability": "mutable",
            "name": "buyerCancel",
            "nameLocation": "504:11:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "499:24:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1629,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "499:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1630,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "518:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 1634,
            "mutability": "mutable",
            "name": "sellerCancel",
            "nameLocation": "534:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "529:25:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 1632,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "529:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 1633,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "549:5:9",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 1637,
            "mutability": "mutable",
            "name": "projectState",
            "nameLocation": "580:12:9",
            "nodeType": "VariableDeclaration",
            "scope": 1967,
            "src": "560:32:9",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$1620",
              "typeString": "enum NFTEscrow.ProjectState"
            },
            "typeName": {
              "id": 1636,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 1635,
                "name": "ProjectState",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1620,
                "src": "560:12:9"
              },
              "referencedDeclaration": 1620,
              "src": "560:12:9",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$1620",
                "typeString": "enum NFTEscrow.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1653,
              "nodeType": "Block",
              "src": "612:99:9",
              "statements": [
                {
                  "expression": {
                    "id": 1646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1640,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "622:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1643,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "646:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1644,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "646:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1642,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "638:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "638:8:9",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1645,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "638:19:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "622:35:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1647,
                  "nodeType": "ExpressionStatement",
                  "src": "622:35:9"
                },
                {
                  "expression": {
                    "id": 1651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1648,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "667:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1649,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "682:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 1650,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "newEscrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1613,
                      "src": "682:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "667:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 1652,
                  "nodeType": "ExpressionStatement",
                  "src": "667:37:9"
                }
              ]
            },
            "id": 1654,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:2:9"
            },
            "returnParameters": {
              "id": 1639,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "612:0:9"
            },
            "scope": 1967,
            "src": "599:112:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              999
            ],
            "body": {
              "id": 1672,
              "nodeType": "Block",
              "src": "852:54:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 1668,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "869:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                          "typeString": "contract NFTEscrow"
                        }
                      },
                      "id": 1669,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1673,
                      "src": "869:21:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 1670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "869:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 1667,
                  "id": 1671,
                  "nodeType": "Return",
                  "src": "862:37:9"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 1673,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "730:16:9",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 1664,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "826:8:9"
            },
            "parameters": {
              "id": 1663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1656,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "756:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1673,
                  "src": "748:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1655,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "748:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1658,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "774:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1673,
                  "src": "766:12:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1657,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "766:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1660,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "788:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1673,
                  "src": "780:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1659,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1662,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "812:4:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1673,
                  "src": "797:19:9",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 1661,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:5:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "746:72:9"
            },
            "returnParameters": {
              "id": 1667,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1666,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1673,
                  "src": "844:6:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 1665,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "844:6:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "843:8:9"
            },
            "scope": 1967,
            "src": "721:185:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1712,
              "nodeType": "Block",
              "src": "1032:200:9",
              "statements": [
                {
                  "expression": {
                    "id": 1688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1686,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1626,
                      "src": "1042:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1687,
                      "name": "_NFTAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1675,
                      "src": "1055:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1042:24:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1689,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:24:9"
                },
                {
                  "expression": {
                    "id": 1692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1690,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1628,
                      "src": "1076:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1691,
                      "name": "_TokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1677,
                      "src": "1086:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1076:18:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1693,
                  "nodeType": "ExpressionStatement",
                  "src": "1076:18:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1698,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1140:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1699,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1140:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1702,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1160:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 1701,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1152:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1700,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1152:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1703,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1152:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1704,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "1167:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1695,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "1111:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1694,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "1104:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$866_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1696,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1104:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$866",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1697,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 355,
                      "src": "1104:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1104:71:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1706,
                  "nodeType": "ExpressionStatement",
                  "src": "1104:71:9"
                },
                {
                  "expression": {
                    "id": 1710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1707,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "1185:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1708,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "1200:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 1709,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "nftDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1614,
                      "src": "1200:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "1185:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 1711,
                  "nodeType": "ExpressionStatement",
                  "src": "1185:40:9"
                }
              ]
            },
            "functionSelector": "9b5b9b18",
            "id": 1713,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1680,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "997:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 1681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "newEscrow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1613,
                    "src": "997:22:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 1682,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1679,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "982:14:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "982:38:9"
              },
              {
                "id": 1684,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1683,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1900,
                  "src": "1021:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1021:10:9"
              }
            ],
            "name": "depositNFT",
            "nameLocation": "925:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1675,
                  "mutability": "mutable",
                  "name": "_NFTAddress",
                  "nameLocation": "944:11:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1713,
                  "src": "936:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "936:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1677,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "965:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1713,
                  "src": "957:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "957:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "935:39:9"
            },
            "returnParameters": {
              "id": 1685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1032:0:9"
            },
            "scope": 1967,
            "src": "916:316:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1740,
              "nodeType": "Block",
              "src": "1325:135:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1728,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1379:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 1727,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1371:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1726,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1371:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1729,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1371:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1730,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1386:3:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1731,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1386:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1732,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "1398:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1723,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "1342:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1722,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "1335:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$866_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1335:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$866",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1725,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 355,
                      "src": "1335:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1335:71:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1734,
                  "nodeType": "ExpressionStatement",
                  "src": "1335:71:9"
                },
                {
                  "expression": {
                    "id": 1738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1735,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "1416:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1736,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "1431:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 1737,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "cancelNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1615,
                      "src": "1431:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "1416:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 1739,
                  "nodeType": "ExpressionStatement",
                  "src": "1416:37:9"
                }
              ]
            },
            "functionSelector": "2f9fa7f6",
            "id": 1741,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1716,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "1287:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 1717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1614,
                    "src": "1287:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 1718,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1715,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "1272:14:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1272:41:9"
              },
              {
                "id": 1720,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1719,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1900,
                  "src": "1314:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1314:10:9"
              }
            ],
            "name": "cancelAtNFT",
            "nameLocation": "1251:11:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1262:2:9"
            },
            "returnParameters": {
              "id": 1721,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1325:0:9"
            },
            "scope": 1967,
            "src": "1242:218:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1803,
              "nodeType": "Block",
              "src": "1582:444:9",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 1755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 1752,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1596:3:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 1753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1596:10:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1754,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1622,
                      "src": "1610:13:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1596:27:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1765,
                    "nodeType": "Block",
                    "src": "1683:45:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1761,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "1697:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1762,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1743,
                            "src": "1711:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1697:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1764,
                        "nodeType": "ExpressionStatement",
                        "src": "1697:20:9"
                      }
                    ]
                  },
                  "id": 1766,
                  "nodeType": "IfStatement",
                  "src": "1592:136:9",
                  "trueBody": {
                    "id": 1760,
                    "nodeType": "Block",
                    "src": "1624:46:9",
                    "statements": [
                      {
                        "expression": {
                          "id": 1758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1756,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1634,
                            "src": "1638:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1757,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1743,
                            "src": "1653:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1638:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1759,
                        "nodeType": "ExpressionStatement",
                        "src": "1638:21:9"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 1773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1767,
                        "name": "sellerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1634,
                        "src": "1750:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 1768,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1766:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1750:20:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 1772,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1770,
                        "name": "buyerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1631,
                        "src": "1774:11:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 1771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1789:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1774:19:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1750:43:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1802,
                  "nodeType": "IfStatement",
                  "src": "1746:274:9",
                  "trueBody": {
                    "id": 1801,
                    "nodeType": "Block",
                    "src": "1794:226:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1780,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1852:4:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                                    "typeString": "contract NFTEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                                    "typeString": "contract NFTEscrow"
                                  }
                                ],
                                "id": 1779,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1844:7:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1778,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1844:7:9",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1781,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1844:13:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1782,
                              "name": "sellerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1622,
                              "src": "1859:13:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 1783,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1628,
                              "src": "1874:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1775,
                                  "name": "nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1626,
                                  "src": "1815:10:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 1774,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 866,
                                "src": "1808:6:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$866_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 1776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1808:18:9",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$866",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 1777,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 355,
                            "src": "1808:35:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 1784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1808:74:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1785,
                        "nodeType": "ExpressionStatement",
                        "src": "1808:74:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 1791,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1926:4:9",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                                      "typeString": "contract NFTEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                                      "typeString": "contract NFTEscrow"
                                    }
                                  ],
                                  "id": 1790,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1918:7:9",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1789,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1918:7:9",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1792,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1918:13:9",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 1793,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "1918:21:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 1786,
                              "name": "buyerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1624,
                              "src": "1896:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 1788,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1896:21:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 1794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1896:44:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1795,
                        "nodeType": "ExpressionStatement",
                        "src": "1896:44:9"
                      },
                      {
                        "expression": {
                          "id": 1799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1796,
                            "name": "projectState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1637,
                            "src": "1954:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$1620",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 1797,
                              "name": "ProjectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1620,
                              "src": "1969:12:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                                "typeString": "type(enum NFTEscrow.ProjectState)"
                              }
                            },
                            "id": 1798,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "canceledBeforeDelivery",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1617,
                            "src": "1969:35:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$1620",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "src": "1954:50:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$1620",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "id": 1800,
                        "nodeType": "ExpressionStatement",
                        "src": "1954:50:9"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "342901a7",
            "id": 1804,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1746,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "1533:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 1747,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1616,
                    "src": "1533:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 1748,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1745,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "1518:14:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1518:41:9"
              },
              {
                "id": 1750,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1749,
                  "name": "BuyerOrSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1941,
                  "src": "1568:13:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "1568:13:9"
              }
            ],
            "name": "cancelBeforeDelivery",
            "nameLocation": "1477:20:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1744,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1743,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1503:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1804,
                  "src": "1498:11:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1742,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1498:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1497:13:9"
            },
            "returnParameters": {
              "id": 1751,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1582:0:9"
            },
            "scope": 1967,
            "src": "1468:558:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1824,
              "nodeType": "Block",
              "src": "2115:101:9",
              "statements": [
                {
                  "expression": {
                    "id": 1817,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1811,
                      "name": "buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1624,
                      "src": "2125:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1814,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2148:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1815,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2148:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2140:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1812,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2140:8:9",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1816,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2140:19:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2125:34:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1818,
                  "nodeType": "ExpressionStatement",
                  "src": "2125:34:9"
                },
                {
                  "expression": {
                    "id": 1822,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1819,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "2169:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1820,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2184:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 1821,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ethDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1616,
                      "src": "2184:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2169:40:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 1823,
                  "nodeType": "ExpressionStatement",
                  "src": "2169:40:9"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "id": 1825,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1807,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "2088:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 1808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1614,
                    "src": "2088:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 1809,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1806,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "2073:14:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2073:41:9"
              }
            ],
            "name": "depositETH",
            "nameLocation": "2045:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2055:2:9"
            },
            "returnParameters": {
              "id": 1810,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2115:0:9"
            },
            "scope": 1967,
            "src": "2036:180:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1841,
              "nodeType": "Block",
              "src": "2324:62:9",
              "statements": [
                {
                  "expression": {
                    "id": 1839,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1836,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "2334:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1837,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2349:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 1838,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "deliveryInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1618,
                      "src": "2349:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2334:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 1840,
                  "nodeType": "ExpressionStatement",
                  "src": "2334:45:9"
                }
              ]
            },
            "functionSelector": "a1ee4181",
            "id": 1842,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1828,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "2276:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 1829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1616,
                    "src": "2276:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 1830,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1827,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "2261:14:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2261:41:9"
              },
              {
                "id": 1832,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1831,
                  "name": "onlySeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1900,
                  "src": "2303:10:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2303:10:9"
              },
              {
                "id": 1834,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1833,
                  "name": "noDispute",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1925,
                  "src": "2314:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2314:9:9"
              }
            ],
            "name": "initiateDelivery",
            "nameLocation": "2235:16:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1826,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2251:2:9"
            },
            "returnParameters": {
              "id": 1835,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2324:0:9"
            },
            "scope": 1967,
            "src": "2226:160:9",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1878,
              "nodeType": "Block",
              "src": "2503:192:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1857,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2557:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 1856,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2549:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1855,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2549:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2549:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1859,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1624,
                        "src": "2564:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 1860,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1628,
                        "src": "2578:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1852,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1626,
                            "src": "2520:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1851,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 866,
                          "src": "2513:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$866_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 1853,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2513:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$866",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 1854,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 355,
                      "src": "2513:35:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 1861,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2513:73:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1862,
                  "nodeType": "ExpressionStatement",
                  "src": "2513:73:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1868,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2627:4:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                                "typeString": "contract NFTEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                                "typeString": "contract NFTEscrow"
                              }
                            ],
                            "id": 1867,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2619:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1866,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2619:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1869,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2619:13:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2619:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1863,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1622,
                        "src": "2596:13:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1865,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2596:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2596:45:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1872,
                  "nodeType": "ExpressionStatement",
                  "src": "2596:45:9"
                },
                {
                  "expression": {
                    "id": 1876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1873,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1637,
                      "src": "2651:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 1874,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1620,
                        "src": "2666:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 1875,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "delivered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1619,
                      "src": "2666:22:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$1620",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2651:37:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 1877,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:37:9"
                }
              ]
            },
            "functionSelector": "5e10177b",
            "id": 1879,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 1845,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1620,
                      "src": "2461:12:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$1620_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 1846,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "deliveryInitiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 1618,
                    "src": "2461:30:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 1847,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1844,
                  "name": "inProjectState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1954,
                  "src": "2446:14:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2446:46:9"
              },
              {
                "id": 1849,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1848,
                  "name": "onlyBuyer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1911,
                  "src": "2493:9:9"
                },
                "nodeType": "ModifierInvocation",
                "src": "2493:9:9"
              }
            ],
            "name": "confirmDelivery",
            "nameLocation": "2413:15:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2428:2:9"
            },
            "returnParameters": {
              "id": 1850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2503:0:9"
            },
            "scope": 1967,
            "src": "2404:291:9",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1888,
              "nodeType": "Block",
              "src": "2745:32:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1884,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1881,
                        "src": "2757:10:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1883,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2749:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2749:19:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1886,
                  "nodeType": "ExpressionStatement",
                  "src": "2749:19:9"
                },
                {
                  "id": 1887,
                  "nodeType": "PlaceholderStatement",
                  "src": "2772:1:9"
                }
              ]
            },
            "id": 1889,
            "name": "condition",
            "nameLocation": "2718:9:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1882,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1881,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nameLocation": "2733:10:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1889,
                  "src": "2728:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1880,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2728:4:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2727:17:9"
            },
            "src": "2709:68:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1899,
              "nodeType": "Block",
              "src": "2802:49:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1892,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2814:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1893,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2814:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1894,
                          "name": "sellerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1622,
                          "src": "2828:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2814:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1891,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2806:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2806:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1897,
                  "nodeType": "ExpressionStatement",
                  "src": "2806:36:9"
                },
                {
                  "id": 1898,
                  "nodeType": "PlaceholderStatement",
                  "src": "2846:1:9"
                }
              ]
            },
            "id": 1900,
            "name": "onlySeller",
            "nameLocation": "2789:10:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2799:2:9"
            },
            "src": "2780:71:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1910,
              "nodeType": "Block",
              "src": "2875:48:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1906,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1903,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2887:3:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1904,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2887:10:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1905,
                          "name": "buyerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1624,
                          "src": "2901:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2887:26:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1902,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2879:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2879:35:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1908,
                  "nodeType": "ExpressionStatement",
                  "src": "2879:35:9"
                },
                {
                  "id": 1909,
                  "nodeType": "PlaceholderStatement",
                  "src": "2918:1:9"
                }
              ]
            },
            "id": 1911,
            "name": "onlyBuyer",
            "nameLocation": "2863:9:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1901,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2872:2:9"
            },
            "src": "2854:69:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1924,
              "nodeType": "Block",
              "src": "2947:73:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1914,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1631,
                            "src": "2962:11:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 1915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2977:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2962:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1917,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1634,
                            "src": "2986:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 1918,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3002:5:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "2986:21:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2962:45:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1913,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2954:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2954:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1922,
                  "nodeType": "ExpressionStatement",
                  "src": "2954:54:9"
                },
                {
                  "id": 1923,
                  "nodeType": "PlaceholderStatement",
                  "src": "3015:1:9"
                }
              ]
            },
            "id": 1925,
            "name": "noDispute",
            "nameLocation": "2936:9:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1912,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2945:2:9"
            },
            "src": "2927:93:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1940,
              "nodeType": "Block",
              "src": "3049:79:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1931,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1928,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3061:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3061:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1930,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1624,
                            "src": "3075:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3061:26:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 1935,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 1932,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3091:3:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1933,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3091:10:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1934,
                            "name": "sellerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1622,
                            "src": "3105:13:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3091:27:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3061:57:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1927,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3053:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3053:66:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1938,
                  "nodeType": "ExpressionStatement",
                  "src": "3053:66:9"
                },
                {
                  "id": 1939,
                  "nodeType": "PlaceholderStatement",
                  "src": "3123:1:9"
                }
              ]
            },
            "id": 1941,
            "name": "BuyerOrSeller",
            "nameLocation": "3033:13:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3046:2:9"
            },
            "src": "3024:104:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1953,
              "nodeType": "Block",
              "src": "3177:44:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$1620",
                          "typeString": "enum NFTEscrow.ProjectState"
                        },
                        "id": 1949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1947,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1637,
                          "src": "3189:12:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$1620",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1948,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1944,
                          "src": "3205:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$1620",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "src": "3189:22:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1946,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3181:7:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3181:31:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1951,
                  "nodeType": "ExpressionStatement",
                  "src": "3181:31:9"
                },
                {
                  "id": 1952,
                  "nodeType": "PlaceholderStatement",
                  "src": "3216:1:9"
                }
              ]
            },
            "id": 1954,
            "name": "inProjectState",
            "nameLocation": "3141:14:9",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1945,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1944,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "3169:6:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1954,
                  "src": "3156:19:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$1620",
                    "typeString": "enum NFTEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 1943,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 1942,
                      "name": "ProjectState",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1620,
                      "src": "3156:12:9"
                    },
                    "referencedDeclaration": 1620,
                    "src": "3156:12:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$1620",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3155:21:9"
            },
            "src": "3132:89:9",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1965,
              "nodeType": "Block",
              "src": "3287:45:9",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1961,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3312:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                            "typeString": "contract NFTEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTEscrow_$1967",
                            "typeString": "contract NFTEscrow"
                          }
                        ],
                        "id": 1960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3304:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 1959,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3304:7:9",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1962,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3304:13:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 1963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3304:21:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1958,
                  "id": 1964,
                  "nodeType": "Return",
                  "src": "3297:28:9"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 1966,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "3236:10:9",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3246:2:9"
            },
            "returnParameters": {
              "id": 1958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1957,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3278:7:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "3270:15:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1956,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3270:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3269:17:9"
            },
            "scope": 1967,
            "src": "3227:105:9",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1968,
        "src": "183:3151:9",
        "usedErrors": []
      }
    ],
    "src": "33:3302:9"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-07-20T09:55:26.838Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}