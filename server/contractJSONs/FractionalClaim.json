{
  "contractName": "FractionalClaim",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimState",
      "outputs": [
        {
          "internalType": "enum FractionalClaim.ClaimState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "funds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"funded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimState\",\"outputs\":[{\"internalType\":\"enum FractionalClaim.ClaimState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"funds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FractionalClaim.sol\":\"FractionalClaim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/FractionalClaim.sol\":{\"keccak256\":\"0x083c4f39e349df62d7922227d56a30994ea98b5edc99f70eb54ca6b7e9a4dad5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://496054a093ff9fbbf8377e9c2b896ea5ff9fa2c98926092171b1471c4d447205\",\"dweb:/ipfs/QmUaQeeFRbNefEW1GpimpbYCKP1rAtPMYVU5hFzr1k8dE6\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516107f03803806107f083398101604081905261002f9161015f565b6040516331a9108f60e11b81526004810182905282903390839082906001600160a01b03851690636352211e90602401602060405180830381865afa15801561007c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a0919061018b565b6001600160a01b0316146100fa5760405162461bcd60e51b815260206004820152601b60248201527f43616c6c6572206973206e6f74206f776e6572206f66204e46542e0000000000604482015260640160405180910390fd5b600180546001600160a01b0387166001600160a01b03199182161790915560008054909116331781556002805460ff60a01b1916600160a01b83021790555050505050506101ad565b80516001600160a01b038116811461015a57600080fd5b919050565b6000806040838503121561017257600080fd5b61017b83610143565b9150602083015190509250929050565b60006020828403121561019d57600080fd5b6101a682610143565b9392505050565b610634806101bc6000396000f3fe60806040526004361061007b5760003560e01c80639a7258091161004e5780639a725809146101165780639d76ea5814610144578063aad3ec9614610164578063c89f2ce41461017757600080fd5b8063047fc9aa1461008057806323024408146100a95780635bf8633a146100be5780638f84aa09146100f6575b600080fd5b34801561008c57600080fd5b5061009660045481565b6040519081526020015b60405180910390f35b6100bc6100b736600461051e565b61018d565b005b3480156100ca57600080fd5b506001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561010257600080fd5b506000546100de906001600160a01b031681565b34801561012257600080fd5b5060025461013790600160a01b900460ff1681565b6040516100a0919061054f565b34801561015057600080fd5b506002546100de906001600160a01b031681565b6100bc610172366004610577565b6102ff565b34801561018357600080fd5b5061009660035481565b60008060028054600160a01b900460ff16908111156101ae576101ae610539565b146101f65760405162461bcd60e51b81526020600482015260136024820152722737ba1034b71031b630b4b69039ba30ba329760691b60448201526064015b60405180910390fd5b6000546001600160a01b031633146102475760405162461bcd60e51b815260206004820152601460248201527321b0b63632b91034b9903737ba1037bbb732b91760611b60448201526064016101ed565b34600355600280546001600160a01b0384166001600160a81b03199091168117600160a01b17909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa1580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf91906105a1565b6004556040517ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a90600090a15050565b60025482906001600160a01b0380831691161461035e5760405162461bcd60e51b815260206004820152601e60248201527f496e636f727265637420746f6b656e204964206f7220416464726573732e000060448201526064016101ed565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d591906105ba565b50604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b50506004543392506108fc91506104449085906104ef565b6040518115909202916000818181858888f1935050505015801561046c573d6000803e3d6000fd5b50826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf91906105a1565b6000036104ea576002805460ff60a01b1916600160a11b1790555b505050565b60006104fb82846105dc565b9392505050565b80356001600160a01b038116811461051957600080fd5b919050565b60006020828403121561053057600080fd5b6104fb82610502565b634e487b7160e01b600052602160045260246000fd5b602081016003831061057157634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561058a57600080fd5b61059383610502565b946020939093013593505050565b6000602082840312156105b357600080fd5b5051919050565b6000602082840312156105cc57600080fd5b815180151581146104fb57600080fd5b6000826105f957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122038969ca4874735f2483618397a4a876de2dfcb5b1ebb5029d6d4d8198459f41764736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639a7258091161004e5780639a725809146101165780639d76ea5814610144578063aad3ec9614610164578063c89f2ce41461017757600080fd5b8063047fc9aa1461008057806323024408146100a95780635bf8633a146100be5780638f84aa09146100f6575b600080fd5b34801561008c57600080fd5b5061009660045481565b6040519081526020015b60405180910390f35b6100bc6100b736600461051e565b61018d565b005b3480156100ca57600080fd5b506001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561010257600080fd5b506000546100de906001600160a01b031681565b34801561012257600080fd5b5060025461013790600160a01b900460ff1681565b6040516100a0919061054f565b34801561015057600080fd5b506002546100de906001600160a01b031681565b6100bc610172366004610577565b6102ff565b34801561018357600080fd5b5061009660035481565b60008060028054600160a01b900460ff16908111156101ae576101ae610539565b146101f65760405162461bcd60e51b81526020600482015260136024820152722737ba1034b71031b630b4b69039ba30ba329760691b60448201526064015b60405180910390fd5b6000546001600160a01b031633146102475760405162461bcd60e51b815260206004820152601460248201527321b0b63632b91034b9903737ba1037bbb732b91760611b60448201526064016101ed565b34600355600280546001600160a01b0384166001600160a81b03199091168117600160a01b17909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa1580156102ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102cf91906105a1565b6004556040517ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a90600090a15050565b60025482906001600160a01b0380831691161461035e5760405162461bcd60e51b815260206004820152601e60248201527f496e636f727265637420746f6b656e204964206f7220416464726573732e000060448201526064016101ed565b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156103b1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103d591906105ba565b50604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561041857600080fd5b505af115801561042c573d6000803e3d6000fd5b50506004543392506108fc91506104449085906104ef565b6040518115909202916000818181858888f1935050505015801561046c573d6000803e3d6000fd5b50826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156104ab573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104cf91906105a1565b6000036104ea576002805460ff60a01b1916600160a11b1790555b505050565b60006104fb82846105dc565b9392505050565b80356001600160a01b038116811461051957600080fd5b919050565b60006020828403121561053057600080fd5b6104fb82610502565b634e487b7160e01b600052602160045260246000fd5b602081016003831061057157634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561058a57600080fd5b61059383610502565b946020939093013593505050565b6000602082840312156105b357600080fd5b5051919050565b6000602082840312156105cc57600080fd5b815180151581146104fb57600080fd5b6000826105f957634e487b7160e01b600052601260045260246000fd5b50049056fea264697066735822122038969ca4874735f2483618397a4a876de2dfcb5b1ebb5029d6d4d8198459f41764736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1350:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:25"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:25",
                "type": ""
              }
            ],
            "src": "14:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:171:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:35:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "444:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "455:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "440:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "440:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "434:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:25:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:25",
                "type": ""
              }
            ],
            "src": "196:269:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "589:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "581:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "623:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "634:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "616:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "616:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "540:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "551:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "562:4:25",
                "type": ""
              }
            ],
            "src": "470:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:127:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "779:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "788:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "791:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "781:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "781:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "754:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "763:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "750:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "750:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "775:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "746:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "743:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:50:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "844:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "814:29:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:40:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "699:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "710:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "722:6:25",
                "type": ""
              }
            ],
            "src": "652:208:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1039:177:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1056:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1067:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1049:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1049:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1049:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1090:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1101:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1086:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1086:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1106:2:25",
                        "type": "",
                        "value": "27"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1129:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1140:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1125:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1125:18:25"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e6572206f66204e46542e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1145:29:25",
                        "type": "",
                        "value": "Caller is not owner of NFT."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1118:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1118:57:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1118:57:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1184:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1196:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1207:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1192:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1192:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1184:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_71c7b06f5a28f6d64dd66c5a97e4550b504de5955d2ec431227eac4090482c43__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1016:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1030:4:25",
                "type": ""
              }
            ],
            "src": "865:351:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1253:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1270:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1277:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1282:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1273:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1273:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1263:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1263:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1263:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1310:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1313:4:25",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1303:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1303:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1303:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1334:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1337:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1327:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1327:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1327:15:25"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "1221:127:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_71c7b06f5a28f6d64dd66c5a97e4550b504de5955d2ec431227eac4090482c43__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Caller is not owner of NFT.\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3862:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:25",
                "type": ""
              }
            ],
            "src": "14:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:25"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:25",
                "type": ""
              }
            ],
            "src": "196:173:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "444:116:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "490:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "499:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "502:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "492:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "492:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "492:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "465:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "474:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "461:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "486:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "457:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "454:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "515:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "544:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "525:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "515:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "410:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "421:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "433:6:25",
                "type": ""
              }
            ],
            "src": "374:186:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "688:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "699:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "684:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "676:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "718:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "733:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "749:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "754:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "745:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "745:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "758:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "741:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "741:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "729:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "729:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "711:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "711:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "635:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "646:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "657:4:25",
                "type": ""
              }
            ],
            "src": "565:203:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "942:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "957:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "973:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "978:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "969:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "969:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "982:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "965:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "965:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "935:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "935:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "859:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "870:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "881:4:25",
                "type": ""
              }
            ],
            "src": "773:219:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1029:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1046:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1053:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1058:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1039:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1089:4:25",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1113:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1103:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1103:15:25"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "997:127:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:229:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1253:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1265:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1261:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1253:4:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1321:111:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1342:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1349:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1354:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1345:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1345:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1335:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1335:31:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1335:31:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:4:25",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1414:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1417:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1407:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1407:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1407:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1301:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:1:25",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1298:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:21:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1288:144:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1448:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1459:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1441:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1441:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ClaimState_$3909__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1212:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1234:4:25",
                "type": ""
              }
            ],
            "src": "1129:343:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1564:167:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1610:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1622:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1612:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1612:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1612:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1585:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1594:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1581:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1581:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1606:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1574:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1635:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1664:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1645:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1635:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1683:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1710:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1721:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1706:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1706:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1693:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1693:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1683:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1522:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1533:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1545:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1553:6:25",
                "type": ""
              }
            ],
            "src": "1477:254:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1910:169:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1927:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1938:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1920:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1920:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1920:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1961:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1972:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1957:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1957:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1977:2:25",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1950:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1950:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1950:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2000:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2011:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1996:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1996:18:25"
                      },
                      {
                        "hexValue": "4e6f7420696e20636c61696d2073746174652e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2016:21:25",
                        "type": "",
                        "value": "Not in claim state."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1989:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1989:49:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1989:49:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2047:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2059:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2070:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2055:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2055:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2047:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4227ebbd736b12fd507b0c438b29aea0d067cdb2544141802ac5ce2b19acfcbe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1887:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1901:4:25",
                "type": ""
              }
            ],
            "src": "1736:343:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2258:170:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2275:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2286:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2268:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2268:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2268:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2309:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2320:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2305:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2305:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2325:2:25",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2298:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2298:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2298:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2348:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2359:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2344:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2344:18:25"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e65722e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2364:22:25",
                        "type": "",
                        "value": "Caller is not owner."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2337:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2337:50:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2337:50:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2396:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2408:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2419:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2404:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2404:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2396:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35c03606b31477fecff3404f588f42019ab5a2c39642ee301aa4874ad09fdbe9__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2235:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2249:4:25",
                "type": ""
              }
            ],
            "src": "2084:344:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2514:103:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2560:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2569:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2572:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2562:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2562:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2562:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2535:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2544:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2531:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2531:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2556:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2527:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2524:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2585:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2601:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2595:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2595:16:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2585:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2480:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2491:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2503:6:25",
                "type": ""
              }
            ],
            "src": "2433:184:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2796:180:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2813:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2824:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2806:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2806:21:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2806:21:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2847:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2858:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2843:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2843:18:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2863:2:25",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2836:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2836:30:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2836:30:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2886:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2897:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2882:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2882:18:25"
                      },
                      {
                        "hexValue": "496e636f727265637420746f6b656e204964206f7220416464726573732e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2902:32:25",
                        "type": "",
                        "value": "Incorrect token Id or Address."
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2875:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2875:60:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2875:60:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2944:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2956:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2967:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2952:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2952:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2944:4:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_8ca68740dd4bc8ba8601e64596c949af4d6ce8902010037eb5de0f2b223fb186__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2773:9:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2787:4:25",
                "type": ""
              }
            ],
            "src": "2622:354:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3138:218:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3148:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3160:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3171:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3156:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3156:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3148:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3183:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3201:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3206:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3197:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3197:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3210:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3193:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3193:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3187:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3228:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3243:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3251:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3239:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3239:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3221:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3221:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3221:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3275:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3286:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3271:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3271:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3295:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3303:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3291:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3291:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3264:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3264:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3264:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3327:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3338:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3323:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3323:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3343:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3316:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3316:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3316:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3091:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3102:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3110:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3118:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3129:4:25",
                "type": ""
              }
            ],
            "src": "2981:375:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3439:199:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3485:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3494:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3497:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3487:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3487:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3487:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3460:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3469:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3456:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3456:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3481:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3452:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3452:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3449:52:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3510:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3529:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3523:5:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3523:16:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3514:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3592:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3601:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3604:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3594:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3594:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3594:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3561:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3582:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3575:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3575:13:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3568:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3568:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3558:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3558:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3551:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3551:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3548:60:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3617:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3627:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3617:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3405:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3416:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3428:6:25",
                "type": ""
              }
            ],
            "src": "3361:277:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3689:171:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3720:111:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3741:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3748:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3753:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "3744:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3744:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3734:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3734:31:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3734:31:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3785:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3788:4:25",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "3778:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3778:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3778:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3813:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3816:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3806:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3806:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3806:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3709:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3702:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3702:9:25"
                  },
                  "nodeType": "YulIf",
                  "src": "3699:132:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3840:14:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3849:1:25"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3852:1:25"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "3845:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3845:9:25"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "3840:1:25"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3674:1:25",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3677:1:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "3683:1:25",
                "type": ""
              }
            ],
            "src": "3643:217:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ClaimState_$3909__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_4227ebbd736b12fd507b0c438b29aea0d067cdb2544141802ac5ce2b19acfcbe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Not in claim state.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35c03606b31477fecff3404f588f42019ab5a2c39642ee301aa4874ad09fdbe9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Caller is not owner.\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_8ca68740dd4bc8ba8601e64596c949af4d6ce8902010037eb5de0f2b223fb186__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"Incorrect token Id or Address.\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "349:2346:22:-:0;;;1331:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;876:37;;-1:-1:-1;;;876:37:22;;;;;616:25:25;;;1395:11:22;;1408:10;;1420:8;;1408:10;;-1:-1:-1;;;;;876:27:22;;;;;589:18:25;;876:37:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;876:54:22;;868:93;;;;-1:-1:-1;;;868:93:22;;1067:2:25;868:93:22;;;1049:21:25;1106:2;1086:18;;;1079:30;1145:29;1125:18;;;1118:57;1192:18;;868:93:22;;;;;;;;1444:10:::1;:24:::0;;-1:-1:-1;;;;;1444:24:22;::::1;-1:-1:-1::0;;;;;;1444:24:22;;::::1;;::::0;;;:10:::1;1478:34:::0;;;;::::1;1501:10;1478:34;::::0;;1522:10:::1;:33:::0;;-1:-1:-1;;;;1522:33:22::1;-1:-1:-1::0;;;1444:10:22;1522:33:::1;;;;;1331:231:::0;;;;;349:2346;;14:177:25;93:13;;-1:-1:-1;;;;;135:31:25;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:269::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;455:2;444:9;440:18;434:25;424:35;;196:269;;;;;:::o;652:208::-;722:6;775:2;763:9;754:7;750:23;746:32;743:52;;;791:1;788;781:12;743:52;814:40;844:9;814:40;:::i;:::-;804:50;652:208;-1:-1:-1;;;652:208:25:o;1221:127::-;349:2346:22;;;;;;",
  "deployedSourceMap": "349:2346:22:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:21;;;;;;;;;;;;;;;;;;;160:25:25;;;148:2;133:18;630:21:22;;;;;;;;1568:538;;;;;;:::i;:::-;;:::i;:::-;;455:25;;;;;;;;;;-1:-1:-1;455:25:22;;;;-1:-1:-1;;;;;455:25:22;;;;;;-1:-1:-1;;;;;729:32:25;;;711:51;;699:2;684:18;455:25:22;565:203:25;414:35:22;;;;;;;;;;-1:-1:-1;414:35:22;;;;-1:-1:-1;;;;;414:35:22;;;570:28;;;;;;;;;;-1:-1:-1;570:28:22;;;;-1:-1:-1;;;570:28:22;;;;;;;;;;;;;:::i;486:27::-;;;;;;;;;;-1:-1:-1;486:27:22;;;;-1:-1:-1;;;;;486:27:22;;;2112:581;;;;;;:::i;:::-;;:::i;604:20::-;;;;;;;;;;;;;;;;1568:538;1626:20;;1133:10;;;-1:-1:-1;;;1133:10:22;;;;;:20;;;;;;;:::i;:::-;;1125:51;;;;-1:-1:-1;;;1125:51:22;;1938:2:25;1125:51:22;;;1920:21:25;1977:2;1957:18;;;1950:30;-1:-1:-1;;;1996:18:25;;;1989:49;2055:18;;1125:51:22;;;;;;;;;1029:12:::1;::::0;-1:-1:-1;;;;;1029:12:22::1;1015:10;:26;1007:58;;;::::0;-1:-1:-1;;;1007:58:22;;2286:2:25;1007:58:22::1;::::0;::::1;2268:21:25::0;2325:2;2305:18;;;2298:30;-1:-1:-1;;;2344:18:25;;;2337:50;2404:18;;1007:58:22::1;2084:344:25::0;1007:58:22::1;1680:9:::2;1672:5;:17:::0;1788:12:::2;:21:::0;;-1:-1:-1;;;;;1788:21:22;::::2;-1:-1:-1::0;;;;;;1892:33:22;;;;;-1:-1:-1;;;1892:33:22::2;::::0;;;2002:27:::2;::::0;;-1:-1:-1;;;2002:27:22;;;;:25:::2;::::0;:27:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;1788:21;2002:27:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1993:6;:36:::0;2091:8:::2;::::0;::::2;::::0;;;::::2;1568:538:::0;;:::o;2112:581::-;1261:12;;2188:6;;-1:-1:-1;;;;;1251:22:22;;;1261:12;;1251:22;1243:64;;;;-1:-1:-1;;;1243:64:22;;2824:2:25;1243:64:22;;;2806:21:25;2863:2;2843:18;;;2836:30;2902:32;2882:18;;;2875:60;2952:18;;1243:64:22;2622:354:25;1243:64:22;2210:62:::1;::::0;-1:-1:-1;;;2210:62:22;;2237:10:::1;2210:62;::::0;::::1;3221:34:25::0;2257:4:22::1;3271:18:25::0;;;3264:43;3323:18;;;3316:34;;;-1:-1:-1;;;;;2210:26:22;::::1;::::0;::::1;::::0;3156:18:25;;2210:62:22::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2324:36:22::1;::::0;-1:-1:-1;;;2324:36:22;;::::1;::::0;::::1;160:25:25::0;;;-1:-1:-1;;;;;2324:26:22;::::1;::::0;::::1;::::0;133:18:25;;2324:36:22::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2477:6:22::1;::::0;2442:10:::1;::::0;-1:-1:-1;2434:51:22::1;::::0;-1:-1:-1;2463:21:22::1;::::0;2464:7;;2463:13:::1;:21::i;:::-;2434:51;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2605:6;-1:-1:-1::0;;;;;2599:25:22::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2630:1;2599:32:::0;2595:92:::1;;2659:17;2646:30:::0;;-1:-1:-1;;;;2646:30:22::1;-1:-1:-1::0;;;2646:30:22::1;::::0;;2595:92:::1;2112:581:::0;;;:::o;3850:96:20:-;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;3850:96;-1:-1:-1;;;3850:96:20:o;196:173:25:-;264:20;;-1:-1:-1;;;;;313:31:25;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;997:127::-;1058:10;1053:3;1049:20;1046:1;1039:31;1089:4;1086:1;1079:15;1113:4;1110:1;1103:15;1129:343;1276:2;1261:18;;1309:1;1298:13;;1288:144;;1354:10;1349:3;1345:20;1342:1;1335:31;1389:4;1386:1;1379:15;1417:4;1414:1;1407:15;1288:144;1441:25;;;1129:343;:::o;1477:254::-;1545:6;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;1721:2;1706:18;;;;1693:32;;-1:-1:-1;;;1477:254:25:o;2433:184::-;2503:6;2556:2;2544:9;2535:7;2531:23;2527:32;2524:52;;;2572:1;2569;2562:12;2524:52;-1:-1:-1;2595:16:25;;2433:184;-1:-1:-1;2433:184:25:o;3361:277::-;3428:6;3481:2;3469:9;3460:7;3456:23;3452:32;3449:52;;;3497:1;3494;3487:12;3449:52;3529:9;3523:16;3582:5;3575:13;3568:21;3561:5;3558:32;3548:60;;3604:1;3601;3594:12;3643:217;3683:1;3709;3699:132;;3753:10;3748:3;3744:20;3741:1;3734:31;3788:4;3785:1;3778:15;3816:4;3813:1;3806:15;3699:132;-1:-1:-1;3845:9:25;;3643:217::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\"; // Used for Division operation of integers\n\ncontract FractionalClaim {\n\n    using SafeMath for uint256;\n\n    address payable public ownerAddress;\n    address public nftAddress;\n    address public tokenAddress;\n    enum ClaimState {initiated, accepting, closed}\n    ClaimState public claimState;\n    uint256 public funds;\n    uint256 public supply;\n\n    event funded();\n\n    //this claims contract should only be allowed if the guy who started it owns this NFT token\n    modifier isOwnerOfNFT(address _nftAddress, address _ownerAddress, uint256 _tokenID){\n        require(ERC721(_nftAddress).ownerOf(_tokenID) == _ownerAddress,\"Caller is not owner of NFT.\");\n        _;\n    }\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == ownerAddress,\"Caller is not owner.\");\n\t\t_;\n\t}\n\n    modifier inClaimState(ClaimState _state) {\n\t\trequire(claimState == _state,\"Not in claim state.\");\n\t\t_;\n\t}\n\n    modifier correctToken(address _token)\n    {\n        require(_token == tokenAddress,\"Incorrect token Id or Address.\");\n        _;\n    }\n\n    constructor(address _nftAddress, uint256 _tokenID) isOwnerOfNFT(_nftAddress, msg.sender, _tokenID)\n    {\n        nftAddress = _nftAddress;\n        ownerAddress = payable(msg.sender);\n        claimState = ClaimState.initiated;\n    }\n\n    function fund(address _token) public payable inClaimState(ClaimState.initiated) onlyOwner\n    {\n        funds = msg.value;                                                //amount added to allow claims to be made\n        tokenAddress = _token;                                            //address of acceptable token\n        claimState = ClaimState.accepting;                                //set to accepting status\n\n        supply = ERC20(_token).totalSupply();    //find out how many tokens are out there\n  \n        emit funded();\n    }\n\n    function claim(address _token, uint256 _amount) public payable correctToken(_token)\n    {\n        ERC20(_token).transferFrom(msg.sender, address(this), _amount); //collect the token back, not working yet\n        ERC20Burnable(_token).burn( _amount);                                   //claimed, so burn this token\n        payable(msg.sender).transfer((_amount).div(supply));                    //send the ETH to the claimant\n\n        //ok, fully claimed. Close this contract\n        if (ERC20(_token).totalSupply() == 0){\n            claimState = ClaimState.closed;\n        }\n    }\n}",
  "sourcePath": "/home/shubham/Desktop/Real-Estate-FNFT/blockchain/contracts/FractionalClaim.sol",
  "ast": {
    "absolutePath": "project:/contracts/FractionalClaim.sol",
    "exportedSymbols": {
      "Address": [
        2800
      ],
      "Context": [
        2822
      ],
      "ERC165": [
        3146
      ],
      "ERC20": [
        806
      ],
      "ERC20Burnable": [
        928
      ],
      "ERC721": [
        1820
      ],
      "FractionalClaim": [
        4106
      ],
      "IERC165": [
        3158
      ],
      "IERC20": [
        884
      ],
      "IERC20Metadata": [
        953
      ],
      "IERC721": [
        1936
      ],
      "IERC721Metadata": [
        2505
      ],
      "IERC721Receiver": [
        1954
      ],
      "SafeMath": [
        3470
      ],
      "Strings": [
        3122
      ]
    },
    "id": 4107,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3892,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:22"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3893,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4107,
        "sourceUnit": 1821,
        "src": "58:57:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 3894,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4107,
        "sourceUnit": 807,
        "src": "116:55:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 3895,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4107,
        "sourceUnit": 929,
        "src": "172:74:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 3896,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 4107,
        "sourceUnit": 3471,
        "src": "247:57:22",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FractionalClaim",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 4106,
        "linearizedBaseContracts": [
          4106
        ],
        "name": "FractionalClaim",
        "nameLocation": "358:15:22",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 3899,
            "libraryName": {
              "id": 3897,
              "name": "SafeMath",
              "nameLocations": [
                "387:8:22"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 3470,
              "src": "387:8:22"
            },
            "nodeType": "UsingForDirective",
            "src": "381:27:22",
            "typeName": {
              "id": 3898,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "400:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8f84aa09",
            "id": 3901,
            "mutability": "mutable",
            "name": "ownerAddress",
            "nameLocation": "437:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 4106,
            "src": "414:35:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3900,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "414:15:22",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 3903,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "470:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 4106,
            "src": "455:25:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3902,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 3905,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "501:12:22",
            "nodeType": "VariableDeclaration",
            "scope": 4106,
            "src": "486:27:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3904,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:22",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalClaim.ClaimState",
            "id": 3909,
            "members": [
              {
                "id": 3906,
                "name": "initiated",
                "nameLocation": "536:9:22",
                "nodeType": "EnumValue",
                "src": "536:9:22"
              },
              {
                "id": 3907,
                "name": "accepting",
                "nameLocation": "547:9:22",
                "nodeType": "EnumValue",
                "src": "547:9:22"
              },
              {
                "id": 3908,
                "name": "closed",
                "nameLocation": "558:6:22",
                "nodeType": "EnumValue",
                "src": "558:6:22"
              }
            ],
            "name": "ClaimState",
            "nameLocation": "524:10:22",
            "nodeType": "EnumDefinition",
            "src": "519:46:22"
          },
          {
            "constant": false,
            "functionSelector": "9a725809",
            "id": 3912,
            "mutability": "mutable",
            "name": "claimState",
            "nameLocation": "588:10:22",
            "nodeType": "VariableDeclaration",
            "scope": 4106,
            "src": "570:28:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ClaimState_$3909",
              "typeString": "enum FractionalClaim.ClaimState"
            },
            "typeName": {
              "id": 3911,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3910,
                "name": "ClaimState",
                "nameLocations": [
                  "570:10:22"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3909,
                "src": "570:10:22"
              },
              "referencedDeclaration": 3909,
              "src": "570:10:22",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ClaimState_$3909",
                "typeString": "enum FractionalClaim.ClaimState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c89f2ce4",
            "id": 3914,
            "mutability": "mutable",
            "name": "funds",
            "nameLocation": "619:5:22",
            "nodeType": "VariableDeclaration",
            "scope": 4106,
            "src": "604:20:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3913,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "604:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "047fc9aa",
            "id": 3916,
            "mutability": "mutable",
            "name": "supply",
            "nameLocation": "645:6:22",
            "nodeType": "VariableDeclaration",
            "scope": 4106,
            "src": "630:21:22",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3915,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:22",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "f3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a",
            "id": 3918,
            "name": "funded",
            "nameLocation": "664:6:22",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3917,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:2:22"
            },
            "src": "658:15:22"
          },
          {
            "body": {
              "id": 3939,
              "nodeType": "Block",
              "src": "858:121:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 3931,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3924,
                              "src": "904:8:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3928,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3920,
                                  "src": "883:11:22",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3927,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "876:6:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 3929,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "876:19:22",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1820",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 3930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "896:7:22",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1099,
                            "src": "876:27:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 3932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "876:37:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3933,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3922,
                          "src": "917:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "876:54:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e6572206f66204e46542e",
                        "id": 3935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "931:29:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_71c7b06f5a28f6d64dd66c5a97e4550b504de5955d2ec431227eac4090482c43",
                          "typeString": "literal_string \"Caller is not owner of NFT.\""
                        },
                        "value": "Caller is not owner of NFT."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_71c7b06f5a28f6d64dd66c5a97e4550b504de5955d2ec431227eac4090482c43",
                          "typeString": "literal_string \"Caller is not owner of NFT.\""
                        }
                      ],
                      "id": 3926,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "868:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:93:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3937,
                  "nodeType": "ExpressionStatement",
                  "src": "868:93:22"
                },
                {
                  "id": 3938,
                  "nodeType": "PlaceholderStatement",
                  "src": "971:1:22"
                }
              ]
            },
            "id": 3940,
            "name": "isOwnerOfNFT",
            "nameLocation": "784:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3925,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3920,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "805:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3940,
                  "src": "797:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3919,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3922,
                  "mutability": "mutable",
                  "name": "_ownerAddress",
                  "nameLocation": "826:13:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3940,
                  "src": "818:21:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3924,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "849:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3940,
                  "src": "841:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3923,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:62:22"
            },
            "src": "775:204:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3951,
              "nodeType": "Block",
              "src": "1003:71:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3943,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1015:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1019:6:22",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1015:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3945,
                          "name": "ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3901,
                          "src": "1029:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1015:26:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206f776e65722e",
                        "id": 3947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1042:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35c03606b31477fecff3404f588f42019ab5a2c39642ee301aa4874ad09fdbe9",
                          "typeString": "literal_string \"Caller is not owner.\""
                        },
                        "value": "Caller is not owner."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35c03606b31477fecff3404f588f42019ab5a2c39642ee301aa4874ad09fdbe9",
                          "typeString": "literal_string \"Caller is not owner.\""
                        }
                      ],
                      "id": 3942,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1007:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:58:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3949,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:58:22"
                },
                {
                  "id": 3950,
                  "nodeType": "PlaceholderStatement",
                  "src": "1069:1:22"
                }
              ]
            },
            "id": 3952,
            "name": "onlyOwner",
            "nameLocation": "991:9:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3941,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1000:2:22"
            },
            "src": "982:92:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3965,
              "nodeType": "Block",
              "src": "1121:64:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ClaimState_$3909",
                          "typeString": "enum FractionalClaim.ClaimState"
                        },
                        "id": 3960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3958,
                          "name": "claimState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3912,
                          "src": "1133:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$3909",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3959,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3955,
                          "src": "1147:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$3909",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "src": "1133:20:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420696e20636c61696d2073746174652e",
                        "id": 3961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1154:21:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4227ebbd736b12fd507b0c438b29aea0d067cdb2544141802ac5ce2b19acfcbe",
                          "typeString": "literal_string \"Not in claim state.\""
                        },
                        "value": "Not in claim state."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4227ebbd736b12fd507b0c438b29aea0d067cdb2544141802ac5ce2b19acfcbe",
                          "typeString": "literal_string \"Not in claim state.\""
                        }
                      ],
                      "id": 3957,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1125:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1125:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3963,
                  "nodeType": "ExpressionStatement",
                  "src": "1125:51:22"
                },
                {
                  "id": 3964,
                  "nodeType": "PlaceholderStatement",
                  "src": "1180:1:22"
                }
              ]
            },
            "id": 3966,
            "name": "inClaimState",
            "nameLocation": "1089:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3956,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3955,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1113:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3966,
                  "src": "1102:17:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ClaimState_$3909",
                    "typeString": "enum FractionalClaim.ClaimState"
                  },
                  "typeName": {
                    "id": 3954,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3953,
                      "name": "ClaimState",
                      "nameLocations": [
                        "1102:10:22"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3909,
                      "src": "1102:10:22"
                    },
                    "referencedDeclaration": 3909,
                    "src": "1102:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3909",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1101:19:22"
            },
            "src": "1080:105:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3978,
              "nodeType": "Block",
              "src": "1233:92:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3971,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3968,
                          "src": "1251:6:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3972,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3905,
                          "src": "1261:12:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1251:22:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e636f727265637420746f6b656e204964206f7220416464726573732e",
                        "id": 3974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1274:32:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8ca68740dd4bc8ba8601e64596c949af4d6ce8902010037eb5de0f2b223fb186",
                          "typeString": "literal_string \"Incorrect token Id or Address.\""
                        },
                        "value": "Incorrect token Id or Address."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8ca68740dd4bc8ba8601e64596c949af4d6ce8902010037eb5de0f2b223fb186",
                          "typeString": "literal_string \"Incorrect token Id or Address.\""
                        }
                      ],
                      "id": 3970,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1243:7:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1243:64:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3976,
                  "nodeType": "ExpressionStatement",
                  "src": "1243:64:22"
                },
                {
                  "id": 3977,
                  "nodeType": "PlaceholderStatement",
                  "src": "1317:1:22"
                }
              ]
            },
            "id": 3979,
            "name": "correctToken",
            "nameLocation": "1200:12:22",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3968,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1221:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 3979,
                  "src": "1213:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3967,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1213:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1212:16:22"
            },
            "src": "1191:134:22",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 4009,
              "nodeType": "Block",
              "src": "1434:128:22",
              "statements": [
                {
                  "expression": {
                    "id": 3994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3992,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3903,
                      "src": "1444:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3993,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3981,
                      "src": "1457:11:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1444:24:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3995,
                  "nodeType": "ExpressionStatement",
                  "src": "1444:24:22"
                },
                {
                  "expression": {
                    "id": 4002,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3996,
                      "name": "ownerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3901,
                      "src": "1478:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3999,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1501:3:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 4000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1505:6:22",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1501:10:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1493:8:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3997,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1493:8:22",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 4001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1493:19:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1478:34:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 4003,
                  "nodeType": "ExpressionStatement",
                  "src": "1478:34:22"
                },
                {
                  "expression": {
                    "id": 4007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4004,
                      "name": "claimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3912,
                      "src": "1522:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3909",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4005,
                        "name": "ClaimState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "1535:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ClaimState_$3909_$",
                          "typeString": "type(enum FractionalClaim.ClaimState)"
                        }
                      },
                      "id": 4006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1546:9:22",
                      "memberName": "initiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3906,
                      "src": "1535:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3909",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "src": "1522:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3909",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "id": 4008,
                  "nodeType": "ExpressionStatement",
                  "src": "1522:33:22"
                }
              ]
            },
            "id": 4010,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 3986,
                    "name": "_nftAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3981,
                    "src": "1395:11:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 3987,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1408:3:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 3988,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1412:6:22",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1408:10:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 3989,
                    "name": "_tokenID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 3983,
                    "src": "1420:8:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 3990,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3985,
                  "name": "isOwnerOfNFT",
                  "nameLocations": [
                    "1382:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3940,
                  "src": "1382:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1382:47:22"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3984,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3981,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "1351:11:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4010,
                  "src": "1343:19:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3980,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1343:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3983,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1372:8:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4010,
                  "src": "1364:16:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3982,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1364:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1342:39:22"
            },
            "returnParameters": {
              "id": 3991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1434:0:22"
            },
            "scope": 4106,
            "src": "1331:231:22",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4046,
              "nodeType": "Block",
              "src": "1662:444:22",
              "statements": [
                {
                  "expression": {
                    "id": 4024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4021,
                      "name": "funds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3914,
                      "src": "1672:5:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4022,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1680:3:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 4023,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1684:5:22",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1680:9:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1672:17:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4025,
                  "nodeType": "ExpressionStatement",
                  "src": "1672:17:22"
                },
                {
                  "expression": {
                    "id": 4028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4026,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3905,
                      "src": "1788:12:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 4027,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4012,
                      "src": "1803:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1788:21:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 4029,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:21:22"
                },
                {
                  "expression": {
                    "id": 4033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4030,
                      "name": "claimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3912,
                      "src": "1892:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3909",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 4031,
                        "name": "ClaimState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3909,
                        "src": "1905:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ClaimState_$3909_$",
                          "typeString": "type(enum FractionalClaim.ClaimState)"
                        }
                      },
                      "id": 4032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1916:9:22",
                      "memberName": "accepting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3907,
                      "src": "1905:20:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$3909",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "src": "1892:33:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3909",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "id": 4034,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:33:22"
                },
                {
                  "expression": {
                    "id": 4041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 4035,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3916,
                      "src": "1993:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 4037,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4012,
                              "src": "2008:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4036,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "2002:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$806_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 4038,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2002:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$806",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 4039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2016:11:22",
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 305,
                        "src": "2002:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2002:27:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1993:36:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 4042,
                  "nodeType": "ExpressionStatement",
                  "src": "1993:36:22"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 4043,
                      "name": "funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3918,
                      "src": "2091:6:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 4044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2091:8:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4045,
                  "nodeType": "EmitStatement",
                  "src": "2086:13:22"
                }
              ]
            },
            "functionSelector": "23024408",
            "id": 4047,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 4015,
                      "name": "ClaimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3909,
                      "src": "1626:10:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ClaimState_$3909_$",
                        "typeString": "type(enum FractionalClaim.ClaimState)"
                      }
                    },
                    "id": 4016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1637:9:22",
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3906,
                    "src": "1626:20:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$3909",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  }
                ],
                "id": 4017,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4014,
                  "name": "inClaimState",
                  "nameLocations": [
                    "1613:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3966,
                  "src": "1613:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1613:34:22"
              },
              {
                "id": 4019,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4018,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1648:9:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3952,
                  "src": "1648:9:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "1648:9:22"
              }
            ],
            "name": "fund",
            "nameLocation": "1577:4:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4013,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4012,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1590:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4047,
                  "src": "1582:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4011,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:16:22"
            },
            "returnParameters": {
              "id": 4020,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1662:0:22"
            },
            "scope": 4106,
            "src": "1568:538:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 4104,
              "nodeType": "Block",
              "src": "2200:493:22",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 4061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2237:3:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 4062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2241:6:22",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2237:10:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 4065,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2257:4:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalClaim_$4106",
                              "typeString": "contract FractionalClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalClaim_$4106",
                              "typeString": "contract FractionalClaim"
                            }
                          ],
                          "id": 4064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2249:7:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 4063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2249:7:22",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2249:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 4067,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4051,
                        "src": "2264:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4058,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4049,
                            "src": "2216:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4057,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 806,
                          "src": "2210:5:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$806_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 4059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2210:13:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$806",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 4060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2224:12:22",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 420,
                      "src": "2210:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 4068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2210:62:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4069,
                  "nodeType": "ExpressionStatement",
                  "src": "2210:62:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 4074,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4051,
                        "src": "2352:7:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 4071,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4049,
                            "src": "2338:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4070,
                          "name": "ERC20Burnable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 928,
                          "src": "2324:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$928_$",
                            "typeString": "type(contract ERC20Burnable)"
                          }
                        },
                        "id": 4072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2324:21:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$928",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 4073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2346:4:22",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 906,
                      "src": "2324:26:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 4075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2324:36:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4076,
                  "nodeType": "ExpressionStatement",
                  "src": "2324:36:22"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 4086,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3916,
                            "src": "2477:6:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "id": 4083,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4051,
                                "src": "2464:7:22",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 4084,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2463:9:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 4085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2473:3:22",
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3379,
                          "src": "2463:13:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 4087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2463:21:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 4079,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2442:3:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 4080,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2446:6:22",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2442:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 4078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2434:8:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 4077,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2434:8:22",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 4081,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2434:19:22",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 4082,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2454:8:22",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2434:28:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 4088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2434:51:22",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 4089,
                  "nodeType": "ExpressionStatement",
                  "src": "2434:51:22"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 4096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 4091,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4049,
                              "src": "2605:6:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 4090,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 806,
                            "src": "2599:5:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$806_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 4092,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2599:13:22",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$806",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 4093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2613:11:22",
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 305,
                        "src": "2599:25:22",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 4094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2599:27:22",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 4095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2630:1:22",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2599:32:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 4103,
                  "nodeType": "IfStatement",
                  "src": "2595:92:22",
                  "trueBody": {
                    "id": 4102,
                    "nodeType": "Block",
                    "src": "2632:55:22",
                    "statements": [
                      {
                        "expression": {
                          "id": 4100,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 4097,
                            "name": "claimState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3912,
                            "src": "2646:10:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimState_$3909",
                              "typeString": "enum FractionalClaim.ClaimState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 4098,
                              "name": "ClaimState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3909,
                              "src": "2659:10:22",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ClaimState_$3909_$",
                                "typeString": "type(enum FractionalClaim.ClaimState)"
                              }
                            },
                            "id": 4099,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2670:6:22",
                            "memberName": "closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3908,
                            "src": "2659:17:22",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimState_$3909",
                              "typeString": "enum FractionalClaim.ClaimState"
                            }
                          },
                          "src": "2646:30:22",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$3909",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "id": 4101,
                        "nodeType": "ExpressionStatement",
                        "src": "2646:30:22"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "aad3ec96",
            "id": 4105,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 4054,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 4049,
                    "src": "2188:6:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 4055,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 4053,
                  "name": "correctToken",
                  "nameLocations": [
                    "2175:12:22"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3979,
                  "src": "2175:12:22"
                },
                "nodeType": "ModifierInvocation",
                "src": "2175:20:22"
              }
            ],
            "name": "claim",
            "nameLocation": "2121:5:22",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 4052,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 4049,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2135:6:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4105,
                  "src": "2127:14:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 4048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2127:7:22",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 4051,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2151:7:22",
                  "nodeType": "VariableDeclaration",
                  "scope": 4105,
                  "src": "2143:15:22",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 4050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2143:7:22",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2126:33:22"
            },
            "returnParameters": {
              "id": 4056,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2200:0:22"
            },
            "scope": 4106,
            "src": "2112:581:22",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 4107,
        "src": "349:2346:22",
        "usedErrors": []
      }
    ],
    "src": "33:2662:22"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-10-21T16:37:33.376Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}