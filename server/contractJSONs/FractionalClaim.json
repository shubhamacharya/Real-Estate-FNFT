{
  "contractName": "FractionalClaim",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nftAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_tokenID",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "claimState",
      "outputs": [
        {
          "internalType": "enum FractionalClaim.ClaimState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "funds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "ownerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "supply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"funded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimState\",\"outputs\":[{\"internalType\":\"enum FractionalClaim.ClaimState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"funds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"supply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/FractionalClaim.sol\":\"FractionalClaim\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x0d19410453cda55960a818e02bd7c18952a5c8fe7a3036e81f0d599f34487a7b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c0f62d3d5bef22b5ca00cc3903e7de6152cb68d2d22401a463f373cda54c00f\",\"dweb:/ipfs/QmSfzjZux7LC7NW2f7rjCXTHeFMUCWERqDkhpCTBy7kxTe\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"keccak256\":\"0x0f633a0223d9a1dcccfcf38a64c9de0874dfcbfac0c6941ccf074d63a2ce0e1e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://864a40efcffdf408044c332a5aa38ec5618ed7b4eecb8f65faf45671bd6cdc65\",\"dweb:/ipfs/QmQJquTMtc6fgm5JQzGdsGpA2fqBe3MHWEdt2qzaLySMdN\"]},\"project:/contracts/FractionalClaim.sol\":{\"keccak256\":\"0x8f8bb78470d531484ca6190c86f6f17adce5edc1f937a1c171565a2adb03ddfb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5d332cc5f9621d97599a439a936e74ea4b24658fc78078f649b00973f20edbf\",\"dweb:/ipfs/QmPadmb9MaAQRC8mPMnJnyATvMJPZVVax1erXCBcMRzpSp\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506040516106ee3803806106ee83398101604081905261002f91610118565b6040516331a9108f60e11b81526004810182905282903390839082906001600160a01b03851690636352211e90602401602060405180830381865afa15801561007c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100a09190610144565b6001600160a01b0316146100b357600080fd5b600180546001600160a01b0387166001600160a01b03199182161790915560008054909116331781556002805460ff60a01b1916600160a01b8302179055505050505050610166565b80516001600160a01b038116811461011357600080fd5b919050565b6000806040838503121561012b57600080fd5b610134836100fc565b9150602083015190509250929050565b60006020828403121561015657600080fd5b61015f826100fc565b9392505050565b610579806101756000396000f3fe60806040526004361061007b5760003560e01c80639a7258091161004e5780639a725809146101165780639d76ea5814610144578063aad3ec9614610164578063c89f2ce41461017757600080fd5b8063047fc9aa1461008057806323024408146100a95780635bf8633a146100be5780638f84aa09146100f6575b600080fd5b34801561008c57600080fd5b5061009660045481565b6040519081526020015b60405180910390f35b6100bc6100b7366004610463565b61018d565b005b3480156100ca57600080fd5b506001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561010257600080fd5b506000546100de906001600160a01b031681565b34801561012257600080fd5b5060025461013790600160a01b900460ff1681565b6040516100a09190610494565b34801561015057600080fd5b506002546100de906001600160a01b031681565b6100bc6101723660046104bc565b610287565b34801561018357600080fd5b5061009660035481565b60008060028054600160a01b900460ff16908111156101ae576101ae61047e565b146101b857600080fd5b6000546001600160a01b031633146101cf57600080fd5b34600355600280546001600160a01b0384166001600160a81b03199091168117600160a01b17909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025791906104e6565b6004556040517ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a90600090a15050565b60025482906001600160a01b038083169116146102a357600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906104ff565b50604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b50506004543392506108fc9150610389908590610434565b6040518115909202916000818181858888f193505050501580156103b1573d6000803e3d6000fd5b50826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906104e6565b60000361042f576002805460ff60a01b1916600160a11b1790555b505050565b60006104408284610521565b9392505050565b80356001600160a01b038116811461045e57600080fd5b919050565b60006020828403121561047557600080fd5b61044082610447565b634e487b7160e01b600052602160045260246000fd5b60208101600383106104b657634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156104cf57600080fd5b6104d883610447565b946020939093013593505050565b6000602082840312156104f857600080fd5b5051919050565b60006020828403121561051157600080fd5b8151801515811461044057600080fd5b60008261053e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220dc16a418e1fe165ca338e894773178a9588ba76cfc2da87ec3992478974d656d64736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80639a7258091161004e5780639a725809146101165780639d76ea5814610144578063aad3ec9614610164578063c89f2ce41461017757600080fd5b8063047fc9aa1461008057806323024408146100a95780635bf8633a146100be5780638f84aa09146100f6575b600080fd5b34801561008c57600080fd5b5061009660045481565b6040519081526020015b60405180910390f35b6100bc6100b7366004610463565b61018d565b005b3480156100ca57600080fd5b506001546100de906001600160a01b031681565b6040516001600160a01b0390911681526020016100a0565b34801561010257600080fd5b506000546100de906001600160a01b031681565b34801561012257600080fd5b5060025461013790600160a01b900460ff1681565b6040516100a09190610494565b34801561015057600080fd5b506002546100de906001600160a01b031681565b6100bc6101723660046104bc565b610287565b34801561018357600080fd5b5061009660035481565b60008060028054600160a01b900460ff16908111156101ae576101ae61047e565b146101b857600080fd5b6000546001600160a01b031633146101cf57600080fd5b34600355600280546001600160a01b0384166001600160a81b03199091168117600160a01b17909155604080516318160ddd60e01b815290516318160ddd916004808201926020929091908290030181865afa158015610233573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025791906104e6565b6004556040517ff3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a90600090a15050565b60025482906001600160a01b038083169116146102a357600080fd5b6040516323b872dd60e01b8152336004820152306024820152604481018390526001600160a01b038416906323b872dd906064016020604051808303816000875af11580156102f6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061031a91906104ff565b50604051630852cd8d60e31b8152600481018390526001600160a01b038416906342966c6890602401600060405180830381600087803b15801561035d57600080fd5b505af1158015610371573d6000803e3d6000fd5b50506004543392506108fc9150610389908590610434565b6040518115909202916000818181858888f193505050501580156103b1573d6000803e3d6000fd5b50826001600160a01b03166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906104e6565b60000361042f576002805460ff60a01b1916600160a11b1790555b505050565b60006104408284610521565b9392505050565b80356001600160a01b038116811461045e57600080fd5b919050565b60006020828403121561047557600080fd5b61044082610447565b634e487b7160e01b600052602160045260246000fd5b60208101600383106104b657634e487b7160e01b600052602160045260246000fd5b91905290565b600080604083850312156104cf57600080fd5b6104d883610447565b946020939093013593505050565b6000602082840312156104f857600080fd5b5051919050565b60006020828403121561051157600080fd5b8151801515811461044057600080fd5b60008261053e57634e487b7160e01b600052601260045260246000fd5b50049056fea2646970667358221220dc16a418e1fe165ca338e894773178a9588ba76cfc2da87ec3992478974d656d64736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:994:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:17"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:17",
                "type": ""
              }
            ],
            "src": "14:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:171:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:35:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "444:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "455:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "440:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "440:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "434:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:25:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:17",
                "type": ""
              }
            ],
            "src": "196:269:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "571:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "581:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "593:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "604:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "589:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "589:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "581:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "623:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "634:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "616:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "616:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "540:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "551:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "562:4:17",
                "type": ""
              }
            ],
            "src": "470:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "733:127:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "779:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "788:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "791:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "781:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "781:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "754:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "763:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "750:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "750:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "775:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "746:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "746:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "743:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "804:50:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "844:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "814:29:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "814:40:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "804:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "699:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "710:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "722:6:17",
                "type": ""
              }
            ],
            "src": "652:208:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "897:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "914:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "921:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "926:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "917:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "917:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "907:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "907:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "907:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "954:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "957:4:17",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "947:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "947:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "947:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "978:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "981:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "971:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "971:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "971:15:17"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "865:127:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2806:17",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:17",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:17",
                "type": ""
              }
            ],
            "src": "14:177:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:17"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:17"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:17",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:17",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:17"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:17"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:17"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:17"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:17"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:17",
                "type": ""
              }
            ],
            "src": "196:173:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "444:116:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "490:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "499:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "502:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "492:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "492:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "492:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "465:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "474:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "461:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "486:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "457:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "457:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "454:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "515:39:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "544:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "525:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "525:29:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "515:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "410:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "421:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "433:6:17",
                "type": ""
              }
            ],
            "src": "374:186:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "666:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "676:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "688:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "699:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "684:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "684:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "676:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "718:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "733:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "749:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "754:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "745:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "745:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "758:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "741:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "741:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "729:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "729:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "711:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "711:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "711:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "635:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "646:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "657:4:17",
                "type": ""
              }
            ],
            "src": "565:203:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "890:102:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "900:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "912:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "923:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "908:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "908:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "900:4:17"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "942:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "957:6:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "973:3:17",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "978:1:17",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "969:3:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "969:11:17"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "982:1:17",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "965:3:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "965:19:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "953:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "953:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "935:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "935:51:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "935:51:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "859:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "870:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "881:4:17",
                "type": ""
              }
            ],
            "src": "773:219:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1029:95:17",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1046:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1053:3:17",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1058:10:17",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1049:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1049:20:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1039:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1039:31:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1039:31:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1086:1:17",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1089:4:17",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1079:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1079:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1079:15:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1110:1:17",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1113:4:17",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1103:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1103:15:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1103:15:17"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "997:127:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1243:229:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1253:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1265:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1276:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1261:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1261:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1253:4:17"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1321:111:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1342:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1349:3:17",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1354:10:17",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1345:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1345:20:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1335:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1335:31:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1335:31:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1386:1:17",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1389:4:17",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1379:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1379:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1379:15:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1414:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1417:4:17",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1407:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1407:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1407:15:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1301:6:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1309:1:17",
                            "type": "",
                            "value": "3"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1298:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1298:13:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1291:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1291:21:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1288:144:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1448:9:17"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1459:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1441:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1441:25:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1441:25:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ClaimState_$2783__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1212:9:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1223:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1234:4:17",
                "type": ""
              }
            ],
            "src": "1129:343:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1564:167:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1610:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1619:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1622:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1612:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1612:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1612:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1585:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1594:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1581:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1581:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1606:2:17",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1577:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1577:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1574:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1635:39:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1664:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "1645:18:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1645:29:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1635:6:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1683:42:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1710:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1721:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1706:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1706:18:17"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1693:12:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1693:32:17"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1683:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1522:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1533:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1545:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1553:6:17",
                "type": ""
              }
            ],
            "src": "1477:254:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1817:103:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1863:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1872:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1875:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1865:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1865:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1865:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1838:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1847:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1834:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1834:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1859:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1830:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1830:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "1827:52:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1888:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1904:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1898:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1898:16:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1888:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1783:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1794:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1806:6:17",
                "type": ""
              }
            ],
            "src": "1736:184:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2082:218:17",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2092:26:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2104:9:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2115:2:17",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2100:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2100:18:17"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2092:4:17"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2127:29:17",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2145:3:17",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2150:1:17",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2141:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2141:11:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2154:1:17",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2137:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2137:19:17"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2131:2:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2172:9:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2187:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2195:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2183:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2183:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2165:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2165:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2165:34:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2219:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2230:2:17",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2215:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2215:18:17"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2239:6:17"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2247:2:17"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2235:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2235:15:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2208:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2208:43:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2208:43:17"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2271:9:17"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2282:2:17",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2267:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2267:18:17"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "2287:6:17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2260:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2260:34:17"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2260:34:17"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2035:9:17",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2046:6:17",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2054:6:17",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2062:6:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2073:4:17",
                "type": ""
              }
            ],
            "src": "1925:375:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2383:199:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2429:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2438:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2441:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2431:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2431:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2431:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2404:7:17"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2413:9:17"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2400:3:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2400:23:17"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2425:2:17",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2396:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2396:32:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2393:52:17"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2454:29:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2473:9:17"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2467:5:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2467:16:17"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2458:5:17",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2536:16:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2545:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2548:1:17",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2538:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2538:12:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2538:12:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2505:5:17"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2526:5:17"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2519:6:17"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2519:13:17"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2512:6:17"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2512:21:17"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2502:2:17"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2502:32:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2495:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2495:40:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2492:60:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2561:15:17",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2571:5:17"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2561:6:17"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2349:9:17",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2360:7:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2372:6:17",
                "type": ""
              }
            ],
            "src": "2305:277:17"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2633:171:17",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2664:111:17",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2685:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2692:3:17",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2697:10:17",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2688:3:17"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2688:20:17"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2678:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2678:31:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2678:31:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2729:1:17",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2732:4:17",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2722:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2722:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2722:15:17"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2757:1:17",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2760:4:17",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2750:6:17"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2750:15:17"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2750:15:17"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2653:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2646:6:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2646:9:17"
                  },
                  "nodeType": "YulIf",
                  "src": "2643:132:17"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2784:14:17",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2793:1:17"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2796:1:17"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2789:3:17"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2789:9:17"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2784:1:17"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2618:1:17",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2621:1:17",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2627:1:17",
                "type": ""
              }
            ],
            "src": "2587:217:17"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ClaimState_$2783__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 3))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n}",
      "id": 17,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "349:2238:15:-:0;;;1223:231;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;876:37;;-1:-1:-1;;;876:37:15;;;;;616:25:17;;;1287:11:15;;1300:10;;1312:8;;1300:10;;-1:-1:-1;;;;;876:27:15;;;;;589:18:17;;876:37:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;876:54:15;;868:63;;;;;;1336:10:::1;:24:::0;;-1:-1:-1;;;;;1336:24:15;::::1;-1:-1:-1::0;;;;;;1336:24:15;;::::1;;::::0;;;:10:::1;1370:34:::0;;;;::::1;1393:10;1370:34;::::0;;1414:10:::1;:33:::0;;-1:-1:-1;;;;1414:33:15::1;-1:-1:-1::0;;;1336:10:15;1414:33:::1;;;;;1223:231:::0;;;;;349:2238;;14:177:17;93:13;;-1:-1:-1;;;;;135:31:17;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:269::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;455:2;444:9;440:18;434:25;424:35;;196:269;;;;;:::o;652:208::-;722:6;775:2;763:9;754:7;750:23;746:32;743:52;;;791:1;788;781:12;743:52;814:40;844:9;814:40;:::i;:::-;804:50;652:208;-1:-1:-1;;;652:208:17:o;865:127::-;349:2238:15;;;;;;",
  "deployedSourceMap": "349:2238:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;630:21;;;;;;;;;;;;;;;;;;;160:25:17;;;148:2;133:18;630:21:15;;;;;;;;1460:538;;;;;;:::i;:::-;;:::i;:::-;;455:25;;;;;;;;;;-1:-1:-1;455:25:15;;;;-1:-1:-1;;;;;455:25:15;;;;;;-1:-1:-1;;;;;729:32:17;;;711:51;;699:2;684:18;455:25:15;565:203:17;414:35:15;;;;;;;;;;-1:-1:-1;414:35:15;;;;-1:-1:-1;;;;;414:35:15;;;570:28;;;;;;;;;;-1:-1:-1;570:28:15;;;;-1:-1:-1;;;570:28:15;;;;;;;;;;;;;:::i;486:27::-;;;;;;;;;;-1:-1:-1;486:27:15;;;;-1:-1:-1;;;;;486:27:15;;;2004:581;;;;;;:::i;:::-;;:::i;604:20::-;;;;;;;;;;;;;;;;1460:538;1518:20;;1080:10;;;-1:-1:-1;;;1080:10:15;;;;;:20;;;;;;;:::i;:::-;;1072:29;;;;;;999:12:::1;::::0;-1:-1:-1;;;;;999:12:15::1;985:10;:26;977:35;;;::::0;::::1;;1572:9:::2;1564:5;:17:::0;1680:12:::2;:21:::0;;-1:-1:-1;;;;;1680:21:15;::::2;-1:-1:-1::0;;;;;;1784:33:15;;;;;-1:-1:-1;;;1784:33:15::2;::::0;;;1894:27:::2;::::0;;-1:-1:-1;;;1894:27:15;;;;:25:::2;::::0;:27:::2;::::0;;::::2;::::0;::::2;::::0;;;;;;;;;1680:21;1894:27:::2;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1885:6;:36:::0;1983:8:::2;::::0;::::2;::::0;;;::::2;1460:538:::0;;:::o;2004:581::-;1186:12;;2080:6;;-1:-1:-1;;;;;1176:22:15;;;1186:12;;1176:22;1168:31;;;;;;2102:62:::1;::::0;-1:-1:-1;;;2102:62:15;;2129:10:::1;2102:62;::::0;::::1;2165:34:17::0;2149:4:15::1;2215:18:17::0;;;2208:43;2267:18;;;2260:34;;;-1:-1:-1;;;;;2102:26:15;::::1;::::0;::::1;::::0;2100:18:17;;2102:62:15::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;2216:36:15::1;::::0;-1:-1:-1;;;2216:36:15;;::::1;::::0;::::1;160:25:17::0;;;-1:-1:-1;;;;;2216:26:15;::::1;::::0;::::1;::::0;133:18:17;;2216:36:15::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;2369:6:15::1;::::0;2334:10:::1;::::0;-1:-1:-1;2326:51:15::1;::::0;-1:-1:-1;2355:21:15::1;::::0;2356:7;;2355:13:::1;:21::i;:::-;2326:51;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;2497:6;-1:-1:-1::0;;;;;2491:25:15::1;;:27;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2522:1;2491:32:::0;2487:92:::1;;2551:17;2538:30:::0;;-1:-1:-1;;;;2538:30:15::1;-1:-1:-1::0;;;2538:30:15::1;::::0;;2487:92:::1;2004:581:::0;;;:::o;3850:96:14:-;3908:7;3934:5;3938:1;3934;:5;:::i;:::-;3927:12;3850:96;-1:-1:-1;;;3850:96:14:o;196:173:17:-;264:20;;-1:-1:-1;;;;;313:31:17;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:186::-;433:6;486:2;474:9;465:7;461:23;457:32;454:52;;;502:1;499;492:12;454:52;525:29;544:9;525:29;:::i;997:127::-;1058:10;1053:3;1049:20;1046:1;1039:31;1089:4;1086:1;1079:15;1113:4;1110:1;1103:15;1129:343;1276:2;1261:18;;1309:1;1298:13;;1288:144;;1354:10;1349:3;1345:20;1342:1;1335:31;1389:4;1386:1;1379:15;1417:4;1414:1;1407:15;1288:144;1441:25;;;1129:343;:::o;1477:254::-;1545:6;1553;1606:2;1594:9;1585:7;1581:23;1577:32;1574:52;;;1622:1;1619;1612:12;1574:52;1645:29;1664:9;1645:29;:::i;:::-;1635:39;1721:2;1706:18;;;;1693:32;;-1:-1:-1;;;1477:254:17:o;1736:184::-;1806:6;1859:2;1847:9;1838:7;1834:23;1830:32;1827:52;;;1875:1;1872;1865:12;1827:52;-1:-1:-1;1898:16:17;;1736:184;-1:-1:-1;1736:184:17:o;2305:277::-;2372:6;2425:2;2413:9;2404:7;2400:23;2396:32;2393:52;;;2441:1;2438;2431:12;2393:52;2473:9;2467:16;2526:5;2519:13;2512:21;2505:5;2502:32;2492:60;;2548:1;2545;2538:12;2587:217;2627:1;2653;2643:132;;2697:10;2692:3;2688:20;2685:1;2678:31;2732:4;2729:1;2722:15;2760:4;2757:1;2750:15;2643:132;-1:-1:-1;2789:9:17;;2587:217::o",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.2;\n\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/utils/math/SafeMath.sol\"; // Used for Division operation of integers\n\ncontract FractionalClaim {\n\n    using SafeMath for uint256;\n\n    address payable public ownerAddress;\n    address public nftAddress;\n    address public tokenAddress;\n    enum ClaimState {initiated, accepting, closed}\n    ClaimState public claimState;\n    uint256 public funds;\n    uint256 public supply;\n\n    event funded();\n\n    //this claims contract should only be allowed if the guy who started it owns this NFT token\n    modifier isOwnerOfNFT(address _nftAddress, address _ownerAddress, uint256 _tokenID){\n        require(ERC721(_nftAddress).ownerOf(_tokenID) == _ownerAddress);\n        _;\n    }\n\n\tmodifier onlyOwner() {\n\t\trequire(msg.sender == ownerAddress);\n\t\t_;\n\t}\n\n    modifier inClaimState(ClaimState _state) {\n\t\trequire(claimState == _state);\n\t\t_;\n\t}\n\n    modifier correctToken(address _token)\n    {\n        require(_token == tokenAddress);\n        _;\n    }\n\n    constructor(address _nftAddress, uint256 _tokenID) isOwnerOfNFT(_nftAddress, msg.sender, _tokenID)\n    {\n        nftAddress = _nftAddress;\n        ownerAddress = payable(msg.sender);\n        claimState = ClaimState.initiated;\n    }\n\n    function fund(address _token) public payable inClaimState(ClaimState.initiated) onlyOwner\n    {\n        funds = msg.value;                                                //amount added to allow claims to be made\n        tokenAddress = _token;                                            //address of acceptable token\n        claimState = ClaimState.accepting;                                //set to accepting status\n\n        supply = ERC20(_token).totalSupply();    //find out how many tokens are out there\n  \n        emit funded();\n    }\n\n    function claim(address _token, uint256 _amount) public payable correctToken(_token)\n    {\n        ERC20(_token).transferFrom(msg.sender, address(this), _amount); //collect the token back, not working yet\n        ERC20Burnable(_token).burn( _amount);                                   //claimed, so burn this token\n        payable(msg.sender).transfer((_amount).div(supply));                    //send the ETH to the claimant\n\n        //ok, fully claimed. Close this contract\n        if (ERC20(_token).totalSupply() == 0){\n            claimState = ClaimState.closed;\n        }\n    }\n}",
  "sourcePath": "/home/shubham/Desktop/Real-Estate-FNFT/blockchain/contracts/FractionalClaim.sol",
  "ast": {
    "absolutePath": "project:/contracts/FractionalClaim.sol",
    "exportedSymbols": {
      "Address": [
        2168
      ],
      "Context": [
        2190
      ],
      "ERC165": [
        2440
      ],
      "ERC20": [
        698
      ],
      "ERC20Burnable": [
        820
      ],
      "ERC721": [
        1712
      ],
      "FractionalClaim": [
        2976
      ],
      "IERC165": [
        2452
      ],
      "IERC20": [
        776
      ],
      "IERC20Metadata": [
        845
      ],
      "IERC721": [
        1828
      ],
      "IERC721Metadata": [
        1873
      ],
      "IERC721Receiver": [
        1846
      ],
      "SafeMath": [
        2764
      ],
      "Strings": [
        2416
      ]
    },
    "id": 2977,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2766,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:15"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 2767,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2977,
        "sourceUnit": 1713,
        "src": "58:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 2768,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2977,
        "sourceUnit": 699,
        "src": "116:55:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
        "id": 2769,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2977,
        "sourceUnit": 821,
        "src": "172:74:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "file": "@openzeppelin/contracts/utils/math/SafeMath.sol",
        "id": 2770,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 2977,
        "sourceUnit": 2765,
        "src": "247:57:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FractionalClaim",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 2976,
        "linearizedBaseContracts": [
          2976
        ],
        "name": "FractionalClaim",
        "nameLocation": "358:15:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "global": false,
            "id": 2773,
            "libraryName": {
              "id": 2771,
              "name": "SafeMath",
              "nameLocations": [
                "387:8:15"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2764,
              "src": "387:8:15"
            },
            "nodeType": "UsingForDirective",
            "src": "381:27:15",
            "typeName": {
              "id": 2772,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "400:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "8f84aa09",
            "id": 2775,
            "mutability": "mutable",
            "name": "ownerAddress",
            "nameLocation": "437:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 2976,
            "src": "414:35:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 2774,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "414:15:15",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 2777,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "470:10:15",
            "nodeType": "VariableDeclaration",
            "scope": 2976,
            "src": "455:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2776,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "455:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9d76ea58",
            "id": 2779,
            "mutability": "mutable",
            "name": "tokenAddress",
            "nameLocation": "501:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 2976,
            "src": "486:27:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2778,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "486:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "canonicalName": "FractionalClaim.ClaimState",
            "id": 2783,
            "members": [
              {
                "id": 2780,
                "name": "initiated",
                "nameLocation": "536:9:15",
                "nodeType": "EnumValue",
                "src": "536:9:15"
              },
              {
                "id": 2781,
                "name": "accepting",
                "nameLocation": "547:9:15",
                "nodeType": "EnumValue",
                "src": "547:9:15"
              },
              {
                "id": 2782,
                "name": "closed",
                "nameLocation": "558:6:15",
                "nodeType": "EnumValue",
                "src": "558:6:15"
              }
            ],
            "name": "ClaimState",
            "nameLocation": "524:10:15",
            "nodeType": "EnumDefinition",
            "src": "519:46:15"
          },
          {
            "constant": false,
            "functionSelector": "9a725809",
            "id": 2786,
            "mutability": "mutable",
            "name": "claimState",
            "nameLocation": "588:10:15",
            "nodeType": "VariableDeclaration",
            "scope": 2976,
            "src": "570:28:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ClaimState_$2783",
              "typeString": "enum FractionalClaim.ClaimState"
            },
            "typeName": {
              "id": 2785,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 2784,
                "name": "ClaimState",
                "nameLocations": [
                  "570:10:15"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 2783,
                "src": "570:10:15"
              },
              "referencedDeclaration": 2783,
              "src": "570:10:15",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ClaimState_$2783",
                "typeString": "enum FractionalClaim.ClaimState"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c89f2ce4",
            "id": 2788,
            "mutability": "mutable",
            "name": "funds",
            "nameLocation": "619:5:15",
            "nodeType": "VariableDeclaration",
            "scope": 2976,
            "src": "604:20:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2787,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "604:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "047fc9aa",
            "id": 2790,
            "mutability": "mutable",
            "name": "supply",
            "nameLocation": "645:6:15",
            "nodeType": "VariableDeclaration",
            "scope": 2976,
            "src": "630:21:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 2789,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "630:7:15",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "f3a504f28a34fdf555994a3bdfd3dc29f822e8684a9ef01001afb738cc3cdd0a",
            "id": 2792,
            "name": "funded",
            "nameLocation": "664:6:15",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 2791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "670:2:15"
            },
            "src": "658:15:15"
          },
          {
            "body": {
              "id": 2812,
              "nodeType": "Block",
              "src": "858:91:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2808,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 2805,
                              "name": "_tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2798,
                              "src": "904:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 2802,
                                  "name": "_nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2794,
                                  "src": "883:11:15",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 2801,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1712,
                                "src": "876:6:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1712_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 2803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "876:19:15",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1712",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 2804,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "896:7:15",
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 991,
                            "src": "876:27:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 2806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "876:37:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2807,
                          "name": "_ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2796,
                          "src": "917:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "876:54:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2800,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "868:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "868:63:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2810,
                  "nodeType": "ExpressionStatement",
                  "src": "868:63:15"
                },
                {
                  "id": 2811,
                  "nodeType": "PlaceholderStatement",
                  "src": "941:1:15"
                }
              ]
            },
            "id": 2813,
            "name": "isOwnerOfNFT",
            "nameLocation": "784:12:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2799,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2794,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "805:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2813,
                  "src": "797:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2793,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "797:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2796,
                  "mutability": "mutable",
                  "name": "_ownerAddress",
                  "nameLocation": "826:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2813,
                  "src": "818:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "818:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2798,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "849:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2813,
                  "src": "841:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "841:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "796:62:15"
            },
            "src": "775:174:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2823,
              "nodeType": "Block",
              "src": "973:48:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 2816,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "985:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "989:6:15",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "985:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2818,
                          "name": "ownerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2775,
                          "src": "999:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "985:26:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2815,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "977:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "977:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2821,
                  "nodeType": "ExpressionStatement",
                  "src": "977:35:15"
                },
                {
                  "id": 2822,
                  "nodeType": "PlaceholderStatement",
                  "src": "1016:1:15"
                }
              ]
            },
            "id": 2824,
            "name": "onlyOwner",
            "nameLocation": "961:9:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2814,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "970:2:15"
            },
            "src": "952:69:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2836,
              "nodeType": "Block",
              "src": "1068:42:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ClaimState_$2783",
                          "typeString": "enum FractionalClaim.ClaimState"
                        },
                        "id": 2832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2830,
                          "name": "claimState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2786,
                          "src": "1080:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$2783",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2831,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2827,
                          "src": "1094:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$2783",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "src": "1080:20:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2829,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1072:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1072:29:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2834,
                  "nodeType": "ExpressionStatement",
                  "src": "1072:29:15"
                },
                {
                  "id": 2835,
                  "nodeType": "PlaceholderStatement",
                  "src": "1105:1:15"
                }
              ]
            },
            "id": 2837,
            "name": "inClaimState",
            "nameLocation": "1036:12:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2828,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2827,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1060:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2837,
                  "src": "1049:17:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ClaimState_$2783",
                    "typeString": "enum FractionalClaim.ClaimState"
                  },
                  "typeName": {
                    "id": 2826,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 2825,
                      "name": "ClaimState",
                      "nameLocations": [
                        "1049:10:15"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 2783,
                      "src": "1049:10:15"
                    },
                    "referencedDeclaration": 2783,
                    "src": "1049:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$2783",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1048:19:15"
            },
            "src": "1027:83:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2848,
              "nodeType": "Block",
              "src": "1158:59:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 2844,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 2842,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2839,
                          "src": "1176:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 2843,
                          "name": "tokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2779,
                          "src": "1186:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1176:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 2841,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1168:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 2845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1168:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2846,
                  "nodeType": "ExpressionStatement",
                  "src": "1168:31:15"
                },
                {
                  "id": 2847,
                  "nodeType": "PlaceholderStatement",
                  "src": "1209:1:15"
                }
              ]
            },
            "id": 2849,
            "name": "correctToken",
            "nameLocation": "1125:12:15",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2839,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1146:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2849,
                  "src": "1138:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1138:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1137:16:15"
            },
            "src": "1116:101:15",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 2879,
              "nodeType": "Block",
              "src": "1326:128:15",
              "statements": [
                {
                  "expression": {
                    "id": 2864,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2862,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2777,
                      "src": "1336:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2863,
                      "name": "_nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2851,
                      "src": "1349:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1336:24:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2865,
                  "nodeType": "ExpressionStatement",
                  "src": "1336:24:15"
                },
                {
                  "expression": {
                    "id": 2872,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2866,
                      "name": "ownerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2775,
                      "src": "1370:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 2869,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1393:3:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 2870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1397:6:15",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1393:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1385:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 2867,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1385:8:15",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 2871,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1385:19:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1370:34:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 2873,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:34:15"
                },
                {
                  "expression": {
                    "id": 2877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2874,
                      "name": "claimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2786,
                      "src": "1414:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$2783",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2875,
                        "name": "ClaimState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "1427:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ClaimState_$2783_$",
                          "typeString": "type(enum FractionalClaim.ClaimState)"
                        }
                      },
                      "id": 2876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1438:9:15",
                      "memberName": "initiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2780,
                      "src": "1427:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$2783",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "src": "1414:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$2783",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "id": 2878,
                  "nodeType": "ExpressionStatement",
                  "src": "1414:33:15"
                }
              ]
            },
            "id": 2880,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2856,
                    "name": "_nftAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2851,
                    "src": "1287:11:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "expression": {
                      "id": 2857,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967281,
                      "src": "1300:3:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 2858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "1304:6:15",
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "1300:10:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "id": 2859,
                    "name": "_tokenID",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2853,
                    "src": "1312:8:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 2860,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2855,
                  "name": "isOwnerOfNFT",
                  "nameLocations": [
                    "1274:12:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2813,
                  "src": "1274:12:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1274:47:15"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2854,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2851,
                  "mutability": "mutable",
                  "name": "_nftAddress",
                  "nameLocation": "1243:11:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2880,
                  "src": "1235:19:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2850,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1235:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2853,
                  "mutability": "mutable",
                  "name": "_tokenID",
                  "nameLocation": "1264:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2880,
                  "src": "1256:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2852,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1256:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1234:39:15"
            },
            "returnParameters": {
              "id": 2861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1326:0:15"
            },
            "scope": 2976,
            "src": "1223:231:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2916,
              "nodeType": "Block",
              "src": "1554:444:15",
              "statements": [
                {
                  "expression": {
                    "id": 2894,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2891,
                      "name": "funds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2788,
                      "src": "1564:5:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2892,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1572:3:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 2893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1576:5:15",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1572:9:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1564:17:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2895,
                  "nodeType": "ExpressionStatement",
                  "src": "1564:17:15"
                },
                {
                  "expression": {
                    "id": 2898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2896,
                      "name": "tokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2779,
                      "src": "1680:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 2897,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2882,
                      "src": "1695:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1680:21:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 2899,
                  "nodeType": "ExpressionStatement",
                  "src": "1680:21:15"
                },
                {
                  "expression": {
                    "id": 2903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2900,
                      "name": "claimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2786,
                      "src": "1784:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$2783",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 2901,
                        "name": "ClaimState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2783,
                        "src": "1797:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ClaimState_$2783_$",
                          "typeString": "type(enum FractionalClaim.ClaimState)"
                        }
                      },
                      "id": 2902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1808:9:15",
                      "memberName": "accepting",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 2781,
                      "src": "1797:20:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ClaimState_$2783",
                        "typeString": "enum FractionalClaim.ClaimState"
                      }
                    },
                    "src": "1784:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$2783",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  },
                  "id": 2904,
                  "nodeType": "ExpressionStatement",
                  "src": "1784:33:15"
                },
                {
                  "expression": {
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 2905,
                      "name": "supply",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2790,
                      "src": "1885:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2907,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2882,
                              "src": "1900:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2906,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "1894:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$698_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 2908,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1894:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$698",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1908:11:15",
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 197,
                        "src": "1894:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 2910,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1894:27:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1885:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "1885:36:15"
                },
                {
                  "eventCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 2913,
                      "name": "funded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2792,
                      "src": "1983:6:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 2914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1983:8:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2915,
                  "nodeType": "EmitStatement",
                  "src": "1978:13:15"
                }
              ]
            },
            "functionSelector": "23024408",
            "id": 2917,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 2885,
                      "name": "ClaimState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2783,
                      "src": "1518:10:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ClaimState_$2783_$",
                        "typeString": "type(enum FractionalClaim.ClaimState)"
                      }
                    },
                    "id": 2886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1529:9:15",
                    "memberName": "initiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 2780,
                    "src": "1518:20:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ClaimState_$2783",
                      "typeString": "enum FractionalClaim.ClaimState"
                    }
                  }
                ],
                "id": 2887,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2884,
                  "name": "inClaimState",
                  "nameLocations": [
                    "1505:12:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2837,
                  "src": "1505:12:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1505:34:15"
              },
              {
                "id": 2889,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2888,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "1540:9:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2824,
                  "src": "1540:9:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "1540:9:15"
              }
            ],
            "name": "fund",
            "nameLocation": "1469:4:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2883,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2882,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1482:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2917,
                  "src": "1474:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2881,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1474:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1473:16:15"
            },
            "returnParameters": {
              "id": 2890,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1554:0:15"
            },
            "scope": 2976,
            "src": "1460:538:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2974,
              "nodeType": "Block",
              "src": "2092:493:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 2931,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2129:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2133:6:15",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2129:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 2935,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2149:4:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_FractionalClaim_$2976",
                              "typeString": "contract FractionalClaim"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_FractionalClaim_$2976",
                              "typeString": "contract FractionalClaim"
                            }
                          ],
                          "id": 2934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2141:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2933,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2141:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2141:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 2937,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2921,
                        "src": "2156:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2928,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "2108:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2927,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 698,
                          "src": "2102:5:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$698_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 2929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2102:13:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$698",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 2930,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2116:12:15",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 312,
                      "src": "2102:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 2938,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2102:62:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2939,
                  "nodeType": "ExpressionStatement",
                  "src": "2102:62:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 2944,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2921,
                        "src": "2244:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 2941,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2919,
                            "src": "2230:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2940,
                          "name": "ERC20Burnable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 820,
                          "src": "2216:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20Burnable_$820_$",
                            "typeString": "type(contract ERC20Burnable)"
                          }
                        },
                        "id": 2942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2216:21:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Burnable_$820",
                          "typeString": "contract ERC20Burnable"
                        }
                      },
                      "id": 2943,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2238:4:15",
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 798,
                      "src": "2216:26:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2216:36:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2946,
                  "nodeType": "ExpressionStatement",
                  "src": "2216:36:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 2956,
                            "name": "supply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2790,
                            "src": "2369:6:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "components": [
                              {
                                "id": 2953,
                                "name": "_amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2921,
                                "src": "2356:7:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 2954,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2355:9:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2365:3:15",
                          "memberName": "div",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2673,
                          "src": "2355:13:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2355:21:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 2949,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2334:3:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 2950,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2338:6:15",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2334:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2326:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 2947,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2326:8:15",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 2951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2326:19:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 2952,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2346:8:15",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2326:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 2958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2326:51:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2959,
                  "nodeType": "ExpressionStatement",
                  "src": "2326:51:15"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 2966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "expression": {
                          "arguments": [
                            {
                              "id": 2961,
                              "name": "_token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2919,
                              "src": "2497:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 2960,
                            "name": "ERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 698,
                            "src": "2491:5:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ERC20_$698_$",
                              "typeString": "type(contract ERC20)"
                            }
                          },
                          "id": 2962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2491:13:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20_$698",
                            "typeString": "contract ERC20"
                          }
                        },
                        "id": 2963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2505:11:15",
                        "memberName": "totalSupply",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 197,
                        "src": "2491:25:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                          "typeString": "function () view external returns (uint256)"
                        }
                      },
                      "id": 2964,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2491:27:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 2965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2522:1:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2491:32:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 2973,
                  "nodeType": "IfStatement",
                  "src": "2487:92:15",
                  "trueBody": {
                    "id": 2972,
                    "nodeType": "Block",
                    "src": "2524:55:15",
                    "statements": [
                      {
                        "expression": {
                          "id": 2970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2967,
                            "name": "claimState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2786,
                            "src": "2538:10:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimState_$2783",
                              "typeString": "enum FractionalClaim.ClaimState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2968,
                              "name": "ClaimState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2783,
                              "src": "2551:10:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ClaimState_$2783_$",
                                "typeString": "type(enum FractionalClaim.ClaimState)"
                              }
                            },
                            "id": 2969,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2562:6:15",
                            "memberName": "closed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2782,
                            "src": "2551:17:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ClaimState_$2783",
                              "typeString": "enum FractionalClaim.ClaimState"
                            }
                          },
                          "src": "2538:30:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ClaimState_$2783",
                            "typeString": "enum FractionalClaim.ClaimState"
                          }
                        },
                        "id": 2971,
                        "nodeType": "ExpressionStatement",
                        "src": "2538:30:15"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "aad3ec96",
            "id": 2975,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 2924,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2919,
                    "src": "2080:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 2925,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 2923,
                  "name": "correctToken",
                  "nameLocations": [
                    "2067:12:15"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 2849,
                  "src": "2067:12:15"
                },
                "nodeType": "ModifierInvocation",
                "src": "2067:20:15"
              }
            ],
            "name": "claim",
            "nameLocation": "2013:5:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2919,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2027:6:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2975,
                  "src": "2019:14:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2918,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2019:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 2921,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2043:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 2975,
                  "src": "2035:15:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2035:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2018:33:15"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2092:0:15"
            },
            "scope": 2976,
            "src": "2004:581:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 2977,
        "src": "349:2238:15",
        "usedErrors": []
      }
    ],
    "src": "33:2554:15"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-18T17:31:48.837Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}