{
  "contractName": "NFTEscrow",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "buyerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nftAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "projectState",
      "outputs": [
        {
          "internalType": "enum NFTEscrow.ProjectState",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "sellerAddress",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_NFTAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_TokenID",
          "type": "uint256"
        }
      ],
      "name": "depositNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cancelAtNFT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_state",
          "type": "bool"
        }
      ],
      "name": "cancelBeforeDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initiateDelivery",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "confirmDelivery",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"buyerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cancelAtNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_state\",\"type\":\"bool\"}],\"name\":\"cancelBeforeDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"confirmDelivery\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_NFTAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_TokenID\",\"type\":\"uint256\"}],\"name\":\"depositNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initiateDelivery\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"projectState\",\"outputs\":[{\"internalType\":\"enum NFTEscrow.ProjectState\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sellerAddress\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/EscrowNFT.sol\":\"NFTEscrow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x0b606994df12f0ce35f6d2f6dcdde7e55e6899cdef7e00f180980caa81e3844e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4c827c981a552d1c76c96060e92f56b52bc20c6f9b4dbf911fe99ddbfb41f2ea\",\"dweb:/ipfs/QmW8xvJdzHrr8Ry34C7viBsgG2b8T1mL4BQWJ5CdfD9JLB\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0xa82b58eca1ee256be466e536706850163d2ec7821945abd6b4778cfb3bee37da\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e75cf83beb757b8855791088546b8337e9d4684e169400c20d44a515353b708\",\"dweb:/ipfs/QmYvPafLfoquiDMEj7CKHtvbgHu7TJNPSVPSCjrtjV8HjV\"]},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x75b829ff2f26c14355d1cba20e16fe7b29ca58eb5fef665ede48bc0f9c6c74b9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a0a107160525724f9e1bbbab031defc2f298296dd9e331f16a6f7130cec32146\",\"dweb:/ipfs/QmemujxSd7gX8A9M8UwmNbz4Ms3U9FG9QfudUgxwvTmPWf\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"project:/contracts/EscrowNFT.sol\":{\"keccak256\":\"0xd354ccc2ed813b8ea8f7ff9f0624e4263ccb2f3efea5113f1ccbf7e154303472\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0edc1c72a80aa1bf8e8954697f1fc0687fef852e679cd914fbf11a74717f92dd\",\"dweb:/ipfs/QmXTcHpMMnjXXm3nXcWruT9c2QPK9HVb7ZSX1R96r6ZGCy\"]}},\"version\":1}",
  "bytecode": "0x60806040526004805461ffff1916905534801561001b57600080fd5b5060008054336001600160a01b03199091161790556004805462ff0000191690556108a48061004b6000396000f3fe6080604052600436106100a75760003560e01c80635bf8633a116100645780635bf8633a146101935780635e10177b146101b3578063748807ab146101bb5780639b5b9b18146101e8578063a1ee418114610208578063f6326fb31461021d57600080fd5b806312065fe0146100ac578063150b7a02146100cc5780632f9fa7f614610111578063342901a7146101285780633d9b2ae61461013b57806344834aca14610173575b600080fd5b3480156100b857600080fd5b506040514781526020015b60405180910390f35b3480156100d857600080fd5b506100f86100e736600461071e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100c3565b34801561011d57600080fd5b50610126610225565b005b6101266101363660046107b9565b6102ea565b34801561014757600080fd5b5060005461015b906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b34801561017f57600080fd5b5060015461015b906001600160a01b031681565b34801561019f57600080fd5b5060025461015b906001600160a01b031681565b610126610460565b3480156101c757600080fd5b506004546101db9062010000900460ff1681565b6040516100c391906107f8565b3480156101f457600080fd5b50610126610203366004610820565b610560565b34801561021457600080fd5b50610126610631565b6101266106ae565b60018060045462010000900460ff166006811115610245576102456107e2565b1461024f57600080fd5b6000546001600160a01b0316331461026657600080fd5b600254600354604051632142170760e11b81526001600160a01b03909216916342842e0e9161029b913091339160040161084a565b600060405180830381600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b5050600480546002935090915062ff0000191662010000835b021790555050565b60038060045462010000900460ff16600681111561030a5761030a6107e2565b1461031457600080fd5b6001546001600160a01b031633148061033757506000546001600160a01b031633145b61034057600080fd5b6000546001600160a01b0316330361036a576004805461ff00191661010084151502179055610379565b6004805460ff19168315151790555b60045460ff610100909104161515600114801561039d575060045460ff1615156001145b1561045c57600254600054600354604051632142170760e11b81526001600160a01b03938416936342842e0e936103dd933093929091169160040161084a565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b50506001546040516001600160a01b0390911692504780156108fc029250906000818181858888f19350505050158015610449573d6000803e3d6000fd5b506004805462ff00001916620400001790555b5050565b60058060045462010000900460ff166006811115610480576104806107e2565b1461048a57600080fd5b6001546001600160a01b031633146104a157600080fd5b600254600154600354604051632142170760e11b81526001600160a01b03938416936342842e0e936104dc933093929091169160040161084a565b600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b5050600080546040516001600160a01b0390911693504780156108fc02935091818181858888f19350505050158015610547573d6000803e3d6000fd5b50600480546006919062ff0000191662010000836102e2565b60008060045462010000900460ff166006811115610580576105806107e2565b1461058a57600080fd5b6000546001600160a01b031633146105a157600080fd5b600280546001600160a01b0319166001600160a01b0385169081179091556003839055604051632142170760e11b81526342842e0e906105e99033903090879060040161084a565b600060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b50506004805462ff00001916620100001790555050505050565b60038060045462010000900460ff166006811115610651576106516107e2565b1461065b57600080fd5b6000546001600160a01b0316331461067257600080fd5b60045460ff1615801561068d5750600454610100900460ff16155b61069657600080fd5b600480546005919062ff0000191662010000836102e2565b60018060045462010000900460ff1660068111156106ce576106ce6107e2565b146106d857600080fd5b600180546001600160a01b03191633179055600480546003919062ff0000191662010000836102e2565b80356001600160a01b038116811461071957600080fd5b919050565b60008060008060006080868803121561073657600080fd5b61073f86610702565b945061074d60208701610702565b935060408601359250606086013567ffffffffffffffff8082111561077157600080fd5b818801915088601f83011261078557600080fd5b81358181111561079457600080fd5b8960208285010111156107a657600080fd5b9699959850939650602001949392505050565b6000602082840312156107cb57600080fd5b813580151581146107db57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016007831061081a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561083357600080fd5b61083c83610702565b946020939093013593505050565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea2646970667358221220f7799f7c038f97b4b0ab4139e57432b5fd3ebb9d98d03d837c18c628e75d869364736f6c63430008110033",
  "deployedBytecode": "0x6080604052600436106100a75760003560e01c80635bf8633a116100645780635bf8633a146101935780635e10177b146101b3578063748807ab146101bb5780639b5b9b18146101e8578063a1ee418114610208578063f6326fb31461021d57600080fd5b806312065fe0146100ac578063150b7a02146100cc5780632f9fa7f614610111578063342901a7146101285780633d9b2ae61461013b57806344834aca14610173575b600080fd5b3480156100b857600080fd5b506040514781526020015b60405180910390f35b3480156100d857600080fd5b506100f86100e736600461071e565b630a85bd0160e11b95945050505050565b6040516001600160e01b031990911681526020016100c3565b34801561011d57600080fd5b50610126610225565b005b6101266101363660046107b9565b6102ea565b34801561014757600080fd5b5060005461015b906001600160a01b031681565b6040516001600160a01b0390911681526020016100c3565b34801561017f57600080fd5b5060015461015b906001600160a01b031681565b34801561019f57600080fd5b5060025461015b906001600160a01b031681565b610126610460565b3480156101c757600080fd5b506004546101db9062010000900460ff1681565b6040516100c391906107f8565b3480156101f457600080fd5b50610126610203366004610820565b610560565b34801561021457600080fd5b50610126610631565b6101266106ae565b60018060045462010000900460ff166006811115610245576102456107e2565b1461024f57600080fd5b6000546001600160a01b0316331461026657600080fd5b600254600354604051632142170760e11b81526001600160a01b03909216916342842e0e9161029b913091339160040161084a565b600060405180830381600087803b1580156102b557600080fd5b505af11580156102c9573d6000803e3d6000fd5b5050600480546002935090915062ff0000191662010000835b021790555050565b60038060045462010000900460ff16600681111561030a5761030a6107e2565b1461031457600080fd5b6001546001600160a01b031633148061033757506000546001600160a01b031633145b61034057600080fd5b6000546001600160a01b0316330361036a576004805461ff00191661010084151502179055610379565b6004805460ff19168315151790555b60045460ff610100909104161515600114801561039d575060045460ff1615156001145b1561045c57600254600054600354604051632142170760e11b81526001600160a01b03938416936342842e0e936103dd933093929091169160040161084a565b600060405180830381600087803b1580156103f757600080fd5b505af115801561040b573d6000803e3d6000fd5b50506001546040516001600160a01b0390911692504780156108fc029250906000818181858888f19350505050158015610449573d6000803e3d6000fd5b506004805462ff00001916620400001790555b5050565b60058060045462010000900460ff166006811115610480576104806107e2565b1461048a57600080fd5b6001546001600160a01b031633146104a157600080fd5b600254600154600354604051632142170760e11b81526001600160a01b03938416936342842e0e936104dc933093929091169160040161084a565b600060405180830381600087803b1580156104f657600080fd5b505af115801561050a573d6000803e3d6000fd5b5050600080546040516001600160a01b0390911693504780156108fc02935091818181858888f19350505050158015610547573d6000803e3d6000fd5b50600480546006919062ff0000191662010000836102e2565b60008060045462010000900460ff166006811115610580576105806107e2565b1461058a57600080fd5b6000546001600160a01b031633146105a157600080fd5b600280546001600160a01b0319166001600160a01b0385169081179091556003839055604051632142170760e11b81526342842e0e906105e99033903090879060040161084a565b600060405180830381600087803b15801561060357600080fd5b505af1158015610617573d6000803e3d6000fd5b50506004805462ff00001916620100001790555050505050565b60038060045462010000900460ff166006811115610651576106516107e2565b1461065b57600080fd5b6000546001600160a01b0316331461067257600080fd5b60045460ff1615801561068d5750600454610100900460ff16155b61069657600080fd5b600480546005919062ff0000191662010000836102e2565b60018060045462010000900460ff1660068111156106ce576106ce6107e2565b146106d857600080fd5b600180546001600160a01b03191633179055600480546003919062ff0000191662010000836102e2565b80356001600160a01b038116811461071957600080fd5b919050565b60008060008060006080868803121561073657600080fd5b61073f86610702565b945061074d60208701610702565b935060408601359250606086013567ffffffffffffffff8082111561077157600080fd5b818801915088601f83011261078557600080fd5b81358181111561079457600080fd5b8960208285010111156107a657600080fd5b9699959850939650602001949392505050565b6000602082840312156107cb57600080fd5b813580151581146107db57600080fd5b9392505050565b634e487b7160e01b600052602160045260246000fd5b602081016007831061081a57634e487b7160e01b600052602160045260246000fd5b91905290565b6000806040838503121561083357600080fd5b61083c83610702565b946020939093013593505050565b6001600160a01b03938416815291909216602082015260408101919091526060019056fea2646970667358221220f7799f7c038f97b4b0ab4139e57432b5fd3ebb9d98d03d837c18c628e75d869364736f6c63430008110033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:143:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "46:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "63:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "70:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "75:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "66:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "66:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "56:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "56:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "56:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "103:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "106:4:25",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "96:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "96:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "96:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "127:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "130:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "120:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "120:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "120:15:25"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "14:127:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3610:25",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:25",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:25",
                "type": ""
              }
            ],
            "src": "14:177:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "245:124:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "255:29:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "277:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "264:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "264:20:25"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "255:5:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "347:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "356:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "359:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "349:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "349:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "349:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "306:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "317:5:25"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "332:3:25",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "337:1:25",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "328:3:25"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "328:11:25"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "341:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "324:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "324:19:25"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "313:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "313:31:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "303:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "303:42:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "296:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "296:50:25"
                  },
                  "nodeType": "YulIf",
                  "src": "293:70:25"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "224:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "235:5:25",
                "type": ""
              }
            ],
            "src": "196:173:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "514:668:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "561:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "570:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "573:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "563:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "563:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "563:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "535:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "544:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "531:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "531:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "556:3:25",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "527:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "527:33:25"
                  },
                  "nodeType": "YulIf",
                  "src": "524:53:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "586:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "615:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "596:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "596:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "586:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "634:48:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "667:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "678:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "663:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "663:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "644:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:38:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "634:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "691:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "718:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "729:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "714:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "714:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "701:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "701:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "691:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "742:46:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "773:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "784:2:25",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "769:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "769:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "756:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "756:32:25"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "746:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "797:28:25",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "807:18:25",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "801:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "852:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "861:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "864:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "854:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "854:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "854:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "840:6:25"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "848:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "837:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "837:14:25"
                  },
                  "nodeType": "YulIf",
                  "src": "834:34:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "877:32:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "891:9:25"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "902:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "887:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "887:22:25"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "881:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "957:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "966:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "969:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "959:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "959:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "959:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "936:2:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "940:4:25",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "932:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "932:13:25"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "947:7:25"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "928:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "928:27:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "921:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "921:35:25"
                  },
                  "nodeType": "YulIf",
                  "src": "918:55:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "982:30:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1009:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "996:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "996:16:25"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "986:6:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1039:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1048:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1051:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1041:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1041:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1041:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1027:6:25"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1035:2:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1024:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1024:14:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1021:34:25"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1105:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1114:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1117:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1107:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1107:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1078:2:25"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "1082:6:25"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1074:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1074:15:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1091:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1070:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1070:24:25"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1096:7:25"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1067:2:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1067:37:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1064:57:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1130:21:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1144:2:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1148:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1140:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1140:11:25"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "1130:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1160:16:25",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "1170:6:25"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "1160:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "448:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "459:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "471:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "479:6:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "487:6:25",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "495:6:25",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "503:6:25",
                "type": ""
              }
            ],
            "src": "374:808:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1286:103:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1296:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1308:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1319:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1304:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1304:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1296:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1338:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1353:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1365:3:25",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1370:10:25",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1361:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1361:20:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1349:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1349:33:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1331:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1331:52:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1331:52:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1255:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1266:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1277:4:25",
                "type": ""
              }
            ],
            "src": "1187:202:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1461:206:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1507:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1516:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1519:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1509:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1509:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1509:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1482:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1478:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1478:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1503:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1474:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1474:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1471:52:25"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1532:36:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1558:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1545:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1545:23:25"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1536:5:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1621:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1630:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1633:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1623:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1623:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1623:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1590:5:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1611:5:25"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1604:6:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1604:13:25"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1597:6:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1597:21:25"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1587:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1587:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1580:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1580:40:25"
                  },
                  "nodeType": "YulIf",
                  "src": "1577:60:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1646:15:25",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1656:5:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1646:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1427:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1438:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1450:6:25",
                "type": ""
              }
            ],
            "src": "1394:273:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1789:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1799:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1811:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1807:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1807:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1799:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1841:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1856:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1872:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1877:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1868:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1868:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1881:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1864:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1864:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1834:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1834:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1834:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1758:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1769:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1780:4:25",
                "type": ""
              }
            ],
            "src": "1672:219:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1997:102:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2007:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2019:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2030:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2015:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2015:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2007:4:25"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2049:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2064:6:25"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2080:3:25",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2085:1:25",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2076:3:25"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2076:11:25"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2089:1:25",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2072:3:25"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2072:19:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2060:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2060:32:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2042:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2042:51:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2042:51:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1966:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1977:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1988:4:25",
                "type": ""
              }
            ],
            "src": "1896:203:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2136:95:25",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2153:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2160:3:25",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2165:10:25",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2156:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2156:20:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2146:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2146:31:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2146:31:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2193:1:25",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2196:4:25",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2186:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2186:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2186:15:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2217:1:25",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2220:4:25",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2210:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2210:15:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2210:15:25"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "2104:127:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2352:229:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2362:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2374:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2385:2:25",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2370:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2370:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2362:4:25"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2430:111:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2451:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2458:3:25",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2463:10:25",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2454:3:25"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2454:20:25"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2444:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2444:31:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2444:31:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2495:1:25",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2498:4:25",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2488:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2488:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2488:15:25"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2523:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2526:4:25",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2516:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2516:15:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2516:15:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2410:6:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2418:1:25",
                            "type": "",
                            "value": "7"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "2407:2:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2407:13:25"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2400:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2400:21:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2397:144:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2557:9:25"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2568:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2550:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2550:25:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2550:25:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_ProjectState_$3484__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2321:9:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2332:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2343:4:25",
                "type": ""
              }
            ],
            "src": "2236:345:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2673:167:25",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2719:16:25",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2728:1:25",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2731:1:25",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2721:6:25"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2721:12:25"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2721:12:25"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2694:7:25"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2703:9:25"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2690:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2690:23:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2715:2:25",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2686:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2686:32:25"
                  },
                  "nodeType": "YulIf",
                  "src": "2683:52:25"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2744:39:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2773:9:25"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2754:18:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2754:29:25"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2744:6:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2792:42:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2819:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2830:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2815:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2815:18:25"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2802:12:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2802:32:25"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2792:6:25"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2631:9:25",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2642:7:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2654:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2662:6:25",
                "type": ""
              }
            ],
            "src": "2586:254:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3002:218:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3012:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3024:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3035:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3020:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3020:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3012:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3047:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3065:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3070:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3061:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3061:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3074:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3057:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3057:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3051:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3092:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3107:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3115:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3103:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3103:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3085:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3085:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3085:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3139:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3150:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3135:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3135:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3159:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3167:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3128:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3128:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3128:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3191:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3202:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3187:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3187:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3207:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3180:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3180:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3180:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2955:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2966:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2974:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2982:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2993:4:25",
                "type": ""
              }
            ],
            "src": "2845:375:25"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3390:218:25",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3400:26:25",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3412:9:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3423:2:25",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3408:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3408:18:25"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3400:4:25"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3435:29:25",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3453:3:25",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3458:1:25",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3449:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3449:11:25"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3462:1:25",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3445:3:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3445:19:25"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3439:2:25",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3480:9:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3495:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3503:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3491:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3491:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3473:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3473:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3473:34:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3527:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3538:2:25",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3523:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3523:18:25"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3547:6:25"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3555:2:25"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3543:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3543:15:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3516:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:43:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3516:43:25"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3579:9:25"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3590:2:25",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3575:3:25"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3575:18:25"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3595:6:25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3568:6:25"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3568:34:25"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3568:34:25"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3343:9:25",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3354:6:25",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3362:6:25",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3370:6:25",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3381:4:25",
                "type": ""
              }
            ],
            "src": "3225:383:25"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_2, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_bool(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_ProjectState_$3484__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 7))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_payable_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n}",
      "id": 25,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "189:3247:21:-:0;;;513:24;;;-1:-1:-1;;544:25:21;;;617:115;;;;;;;;;-1:-1:-1;641:13:21;:35;;665:10;-1:-1:-1;;;;;;641:35:21;;;;;;687:12;:37;;-1:-1:-1;;687:37:21;;;189:3247;;;;;;",
  "deployedSourceMap": "189:3247:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:107;;;;;;;;;;-1:-1:-1;3326:107:21;;3404:21;160:25:25;;148:2;133:18;3326:107:21;;;;;;;;744:187;;;;;;;;;;-1:-1:-1;744:187:21;;;;;:::i;:::-;-1:-1:-1;;;744:187:21;;;;;;;;;;;-1:-1:-1;;;;;;1349:33:25;;;1331:52;;1319:2;1304:18;744:187:21;1187:202:25;1276:221:21;;;;;;;;;;;;;:::i;:::-;;1507:571;;;;;;:::i;:::-;;:::i;374:36::-;;;;;;;;;;-1:-1:-1;374:36:21;;;;-1:-1:-1;;;;;374:36:21;;;;;;-1:-1:-1;;;;;1852:32:25;;;1834:51;;1822:2;1807:18;374:36:21;1672:219:25;417:35:21;;;;;;;;;;-1:-1:-1;417:35:21;;;;-1:-1:-1;;;;;417:35:21;;;459:25;;;;;;;;;;-1:-1:-1;459:25:21;;;;-1:-1:-1;;;;;459:25:21;;;2467:295;;;:::i;576:32::-;;;;;;;;;;-1:-1:-1;576:32:21;;;;;;;;;;;;;;;;;;:::i;943:321::-;;;;;;;;;;-1:-1:-1;943:321:21;;;;;:::i;:::-;;:::i;2285:162::-;;;;;;;;;;;;;:::i;2090:183::-;;;:::i;1276:221::-;1321:25;;3284:12;;;;;;;:22;;;;;;;;:::i;:::-;;3276:31;;;;;;2903:13:::1;::::0;-1:-1:-1;;;;;2903:13:21::1;2889:10;:27;2881:36;;;::::0;::::1;;1377:10:::2;::::0;1433:7:::2;::::0;1370:71:::2;::::0;-1:-1:-1;;;1370:71:21;;-1:-1:-1;;;;;1377:10:21;;::::2;::::0;1370:35:::2;::::0;:71:::2;::::0;1414:4:::2;::::0;1421:10:::2;::::0;1370:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1452:12:21::2;:37:::0;;1467:22:::2;::::0;-1:-1:-1;1452:12:21;;-1:-1:-1;;;1452:37:21::2;::::0;1467:22;1452:37:::2;;;;;;1276:221:::0;:::o;1507:571::-;1572:25;;3284:12;;;;;;;:22;;;;;;;;:::i;:::-;;3276:31;;;;;;3165:12:::1;::::0;-1:-1:-1;;;;;3165:12:21::1;3151:10;:26;::::0;:57:::1;;-1:-1:-1::0;3195:13:21::1;::::0;-1:-1:-1;;;;;3195:13:21::1;3181:10;:27;3151:57;3143:66;;;::::0;::::1;;1650:13:::2;::::0;-1:-1:-1;;;;;1650:13:21::2;1636:10;:27:::0;1632:141:::2;;1679:12;:21:::0;;-1:-1:-1;;1679:21:21::2;;::::0;::::2;;;;::::0;;1632:141:::2;;;1741:11;:20:::0;;-1:-1:-1;;1741:20:21::2;::::0;::::2;;;::::0;;1632:141:::2;1797:12;::::0;::::2;;::::0;;::::2;;:20;;:12;:20;:43:::0;::::2;;;-1:-1:-1::0;1821:11:21::2;::::0;::::2;;:19;;:11:::0;:19:::2;1797:43;1793:278;;;1863:10;::::0;::::2;1907:13:::0;1922:7:::2;::::0;1856:74:::2;::::0;-1:-1:-1;;;1856:74:21;;-1:-1:-1;;;;;1863:10:21;;::::2;::::0;1856:35:::2;::::0;:74:::2;::::0;1900:4:::2;::::0;1907:13;;;::::2;::::0;1856:74:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1945:12:21::2;::::0;:44:::2;::::0;-1:-1:-1;;;;;1945:12:21;;::::2;::::0;-1:-1:-1;1967:21:21::2;1945:44:::0;::::2;;;::::0;-1:-1:-1;1967:21:21;1945:12:::2;:44:::0;:12;:44;1967:21;1945:12;:44;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;2019:35:21::2;2004:50:::0;;-1:-1:-1;;2004:50:21::2;::::0;::::2;::::0;;1793:278:::2;1507:571:::0;;:::o;2467:295::-;2524:30;;3284:12;;;;;;;:22;;;;;;;;:::i;:::-;;3276:31;;;;;;2981:12:::1;::::0;-1:-1:-1;;;;;2981:12:21::1;2967:10;:26;2959:35;;;::::0;::::1;;2584:10:::2;::::0;;2628:12;2642:7:::2;::::0;2577:73:::2;::::0;-1:-1:-1;;;2577:73:21;;-1:-1:-1;;;;;2584:10:21;;::::2;::::0;2577:35:::2;::::0;:73:::2;::::0;2621:4:::2;::::0;2628:12;;;::::2;::::0;2577:73:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;2661:13:21::2;::::0;;:45:::2;::::0;-1:-1:-1;;;;;2661:13:21;;::::2;::::0;-1:-1:-1;2684:21:21::2;2661:45:::0;::::2;;;::::0;-1:-1:-1;2684:21:21;2661:45;:13;:45;2684:21;2661:13;:45;::::2;;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;2717:12:21::2;:37:::0;;2732:22:::2;::::0;2717:12;-1:-1:-1;;2717:37:21::2;::::0;2732:22;2717:37:::2;::::0;943:321;1024:22;;3284:12;;;;;;;:22;;;;;;;;:::i;:::-;;3276:31;;;;;;2903:13:::1;::::0;-1:-1:-1;;;;;2903:13:21::1;2889:10;:27;2881:36;;;::::0;::::1;;1070:10:::2;:24:::0;;-1:-1:-1;;;;;;1070:24:21::2;-1:-1:-1::0;;;;;1070:24:21;::::2;::::0;;::::2;::::0;;;1105:7:::2;:18:::0;;;1134:71:::2;::::0;-1:-1:-1;;;1134:71:21;;:35:::2;::::0;:71:::2;::::0;1170:10:::2;::::0;1190:4:::2;::::0;1105:18;;1134:71:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1216:12:21::2;:40:::0;;-1:-1:-1;;1216:40:21::2;::::0;::::2;::::0;;-1:-1:-1;;;;;943:321:21:o;2285:162::-;2335:25;;3284:12;;;;;;;:22;;;;;;;;:::i;:::-;;3276:31;;;;;;2903:13:::1;::::0;-1:-1:-1;;;;;2903:13:21::1;2889:10;:27;2881:36;;;::::0;::::1;;3047:11:::2;::::0;::::2;;:20;::::0;::::2;:45;;-1:-1:-1::0;3071:12:21::2;::::0;::::2;::::0;::::2;;;:21;3047:45;3039:54;;;::::0;::::2;;2394:12:::3;:45:::0;;2409:30:::3;::::0;2394:12;-1:-1:-1;;2394:45:21::3;::::0;2409:30;2394:45:::3;::::0;2090:183;2142:25;;3284:12;;;;;;;:22;;;;;;;;:::i;:::-;;3276:31;;;;;;2180:12:::1;:34:::0;;-1:-1:-1;;;;;;2180:34:21::1;2203:10;2180:34;::::0;;2225:12:::1;:40:::0;;2240:25:::1;::::0;2225:12;-1:-1:-1;;2225:40:21::1;::::0;2240:25;2225:40:::1;::::0;196:173:25;264:20;;-1:-1:-1;;;;;313:31:25;;303:42;;293:70;;359:1;356;349:12;293:70;196:173;;;:::o;374:808::-;471:6;479;487;495;503;556:3;544:9;535:7;531:23;527:33;524:53;;;573:1;570;563:12;524:53;596:29;615:9;596:29;:::i;:::-;586:39;;644:38;678:2;667:9;663:18;644:38;:::i;:::-;634:48;;729:2;718:9;714:18;701:32;691:42;;784:2;773:9;769:18;756:32;807:18;848:2;840:6;837:14;834:34;;;864:1;861;854:12;834:34;902:6;891:9;887:22;877:32;;947:7;940:4;936:2;932:13;928:27;918:55;;969:1;966;959:12;918:55;1009:2;996:16;1035:2;1027:6;1024:14;1021:34;;;1051:1;1048;1041:12;1021:34;1096:7;1091:2;1082:6;1078:2;1074:15;1070:24;1067:37;1064:57;;;1117:1;1114;1107:12;1064:57;374:808;;;;-1:-1:-1;374:808:25;;-1:-1:-1;1148:2:25;1140:11;;1170:6;374:808;-1:-1:-1;;;374:808:25:o;1394:273::-;1450:6;1503:2;1491:9;1482:7;1478:23;1474:32;1471:52;;;1519:1;1516;1509:12;1471:52;1558:9;1545:23;1611:5;1604:13;1597:21;1590:5;1587:32;1577:60;;1633:1;1630;1623:12;1577:60;1656:5;1394:273;-1:-1:-1;;;1394:273:25:o;2104:127::-;2165:10;2160:3;2156:20;2153:1;2146:31;2196:4;2193:1;2186:15;2220:4;2217:1;2210:15;2236:345;2385:2;2370:18;;2418:1;2407:13;;2397:144;;2463:10;2458:3;2454:20;2451:1;2444:31;2498:4;2495:1;2488:15;2526:4;2523:1;2516:15;2397:144;2550:25;;;2236:345;:::o;2586:254::-;2654:6;2662;2715:2;2703:9;2694:7;2690:23;2686:32;2683:52;;;2731:1;2728;2721:12;2683:52;2754:29;2773:9;2754:29;:::i;:::-;2744:39;2830:2;2815:18;;;;2802:32;;-1:-1:-1;;;2586:254:25:o;2845:375::-;-1:-1:-1;;;;;3103:15:25;;;3085:34;;3155:15;;;;3150:2;3135:18;;3128:43;3202:2;3187:18;;3180:34;;;;3035:2;3020:18;;2845:375::o",
  "source": "//SPDX-License-Identifier: MIT\r\n \r\npragma solidity ^0.8.2;\r\nimport \"@openzeppelin/contracts/token/ERC721/ERC721.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\ncontract NFTEscrow is IERC721Receiver {\r\n    \r\n    enum ProjectState {newEscrow, nftDeposited, cancelNFT, ethDeposited, canceledBeforeDelivery, deliveryInitiated, delivered}\r\n    \r\n    address payable public sellerAddress;\r\n    address payable public buyerAddress;\r\n    address public nftAddress;\r\n    uint256 tokenID;\r\n    bool buyerCancel = false;\r\n    bool sellerCancel = false;\r\n    ProjectState public projectState;\r\n\r\n    constructor(){\r\n        sellerAddress = payable(msg.sender);\r\n        projectState = ProjectState.newEscrow;\r\n    }\r\n    \r\n    function onERC721Received( address operator, address from, uint256 tokenId, bytes calldata data ) public override returns (bytes4) {\r\n        return this.onERC721Received.selector;\r\n    }\r\n    \r\n    function depositNFT(address _NFTAddress, uint256 _TokenID) public inProjectState(ProjectState.newEscrow) onlySeller {\r\n        nftAddress = _NFTAddress;\r\n        tokenID = _TokenID;\r\n        ERC721(nftAddress).safeTransferFrom(msg.sender, address(this), tokenID);\r\n        projectState = ProjectState.nftDeposited;\r\n    }\r\n    \r\n    function cancelAtNFT() public inProjectState(ProjectState.nftDeposited) onlySeller {\r\n        ERC721(nftAddress).safeTransferFrom(address(this), msg.sender, tokenID);\r\n        projectState = ProjectState.cancelNFT;\r\n    }\r\n  \r\n    function cancelBeforeDelivery(bool _state) public inProjectState(ProjectState.ethDeposited) payable BuyerOrSeller {\r\n        if (msg.sender == sellerAddress){\r\n            sellerCancel = _state;\r\n        }\r\n        else{\r\n            buyerCancel = _state;\r\n        }\r\n        \r\n        if (sellerCancel == true && buyerCancel == true){\r\n            ERC721(nftAddress).safeTransferFrom(address(this), sellerAddress, tokenID);\r\n            buyerAddress.transfer(address(this).balance);\r\n            projectState = ProjectState.canceledBeforeDelivery;     \r\n        }\r\n    }\r\n    \r\n    function depositETH() public payable inProjectState(ProjectState.nftDeposited) {\r\n        buyerAddress = payable(msg.sender);\r\n        projectState = ProjectState.ethDeposited;\r\n    }\r\n    \r\n    function initiateDelivery() public inProjectState(ProjectState.ethDeposited) onlySeller noDispute {\r\n        projectState = ProjectState.deliveryInitiated;\r\n    }        \r\n    \r\n    function confirmDelivery() public payable inProjectState(ProjectState.deliveryInitiated) onlyBuyer {\r\n        ERC721(nftAddress).safeTransferFrom(address(this), buyerAddress, tokenID);\r\n        sellerAddress.transfer(address(this).balance);\r\n        projectState = ProjectState.delivered;\r\n    }\r\n        \r\n   \tmodifier condition(bool _condition) {\r\n\t\trequire(_condition);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlySeller() {\r\n\t\trequire(msg.sender == sellerAddress);\r\n\t\t_;\r\n\t}\r\n\r\n\tmodifier onlyBuyer() {\r\n\t\trequire(msg.sender == buyerAddress);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier noDispute(){\r\n\t    require(buyerCancel == false && sellerCancel == false);\r\n\t    _;\r\n\t}\r\n\t\r\n\tmodifier BuyerOrSeller() {\r\n\t\trequire(msg.sender == buyerAddress || msg.sender == sellerAddress);\r\n\t\t_;\r\n\t}\r\n\t\r\n\tmodifier inProjectState(ProjectState _state) {\r\n\t\trequire(projectState == _state);\r\n\t\t_;\r\n\t}\r\n\r\n    function getBalance() public view returns (uint256 balance) {\r\n        return address(this).balance;\r\n    }\r\n} \r\n",
  "sourcePath": "/home/shubham/Desktop/Real-Estate-FNFT/blockchain/contracts/EscrowNFT.sol",
  "ast": {
    "absolutePath": "project:/contracts/EscrowNFT.sol",
    "exportedSymbols": {
      "Address": [
        2800
      ],
      "Context": [
        2822
      ],
      "ERC165": [
        3146
      ],
      "ERC721": [
        1820
      ],
      "IERC165": [
        3158
      ],
      "IERC721": [
        1936
      ],
      "IERC721Metadata": [
        2505
      ],
      "IERC721Receiver": [
        1954
      ],
      "NFTEscrow": [
        3831
      ],
      "Strings": [
        3122
      ]
    },
    "id": 3832,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3472,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".2"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:23:21"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "file": "@openzeppelin/contracts/token/ERC721/ERC721.sol",
        "id": 3473,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3832,
        "sourceUnit": 1821,
        "src": "60:57:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "file": "@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
        "id": 3474,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 3832,
        "sourceUnit": 1955,
        "src": "119:66:21",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 3475,
              "name": "IERC721Receiver",
              "nameLocations": [
                "211:15:21"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1954,
              "src": "211:15:21"
            },
            "id": 3476,
            "nodeType": "InheritanceSpecifier",
            "src": "211:15:21"
          }
        ],
        "canonicalName": "NFTEscrow",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 3831,
        "linearizedBaseContracts": [
          3831,
          1954
        ],
        "name": "NFTEscrow",
        "nameLocation": "198:9:21",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "NFTEscrow.ProjectState",
            "id": 3484,
            "members": [
              {
                "id": 3477,
                "name": "newEscrow",
                "nameLocation": "259:9:21",
                "nodeType": "EnumValue",
                "src": "259:9:21"
              },
              {
                "id": 3478,
                "name": "nftDeposited",
                "nameLocation": "270:12:21",
                "nodeType": "EnumValue",
                "src": "270:12:21"
              },
              {
                "id": 3479,
                "name": "cancelNFT",
                "nameLocation": "284:9:21",
                "nodeType": "EnumValue",
                "src": "284:9:21"
              },
              {
                "id": 3480,
                "name": "ethDeposited",
                "nameLocation": "295:12:21",
                "nodeType": "EnumValue",
                "src": "295:12:21"
              },
              {
                "id": 3481,
                "name": "canceledBeforeDelivery",
                "nameLocation": "309:22:21",
                "nodeType": "EnumValue",
                "src": "309:22:21"
              },
              {
                "id": 3482,
                "name": "deliveryInitiated",
                "nameLocation": "333:17:21",
                "nodeType": "EnumValue",
                "src": "333:17:21"
              },
              {
                "id": 3483,
                "name": "delivered",
                "nameLocation": "352:9:21",
                "nodeType": "EnumValue",
                "src": "352:9:21"
              }
            ],
            "name": "ProjectState",
            "nameLocation": "245:12:21",
            "nodeType": "EnumDefinition",
            "src": "240:122:21"
          },
          {
            "constant": false,
            "functionSelector": "3d9b2ae6",
            "id": 3486,
            "mutability": "mutable",
            "name": "sellerAddress",
            "nameLocation": "397:13:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "374:36:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3485,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "374:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "44834aca",
            "id": 3488,
            "mutability": "mutable",
            "name": "buyerAddress",
            "nameLocation": "440:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "417:35:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 3487,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "417:15:21",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5bf8633a",
            "id": 3490,
            "mutability": "mutable",
            "name": "nftAddress",
            "nameLocation": "474:10:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "459:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 3489,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "459:7:21",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3492,
            "mutability": "mutable",
            "name": "tokenID",
            "nameLocation": "499:7:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "491:15:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3491,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "491:7:21",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3495,
            "mutability": "mutable",
            "name": "buyerCancel",
            "nameLocation": "518:11:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "513:24:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3493,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "513:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3494,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "532:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 3498,
            "mutability": "mutable",
            "name": "sellerCancel",
            "nameLocation": "549:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "544:25:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 3496,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "544:4:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": {
              "hexValue": "66616c7365",
              "id": 3497,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "bool",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "564:5:21",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              },
              "value": "false"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "748807ab",
            "id": 3501,
            "mutability": "mutable",
            "name": "projectState",
            "nameLocation": "596:12:21",
            "nodeType": "VariableDeclaration",
            "scope": 3831,
            "src": "576:32:21",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_ProjectState_$3484",
              "typeString": "enum NFTEscrow.ProjectState"
            },
            "typeName": {
              "id": 3500,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 3499,
                "name": "ProjectState",
                "nameLocations": [
                  "576:12:21"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3484,
                "src": "576:12:21"
              },
              "referencedDeclaration": 3484,
              "src": "576:12:21",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_ProjectState_$3484",
                "typeString": "enum NFTEscrow.ProjectState"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 3517,
              "nodeType": "Block",
              "src": "630:102:21",
              "statements": [
                {
                  "expression": {
                    "id": 3510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3504,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "641:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3507,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "665:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "669:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "665:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "657:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3505,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "657:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3509,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "657:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "641:35:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3511,
                  "nodeType": "ExpressionStatement",
                  "src": "641:35:21"
                },
                {
                  "expression": {
                    "id": 3515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3512,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "687:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3513,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "702:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "715:9:21",
                      "memberName": "newEscrow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3477,
                      "src": "702:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "687:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3516,
                  "nodeType": "ExpressionStatement",
                  "src": "687:37:21"
                }
              ]
            },
            "id": 3518,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "628:2:21"
            },
            "returnParameters": {
              "id": 3503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "630:0:21"
            },
            "scope": 3831,
            "src": "617:115:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1953
            ],
            "body": {
              "id": 3536,
              "nodeType": "Block",
              "src": "875:56:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "expression": {
                        "id": 3532,
                        "name": "this",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967268,
                        "src": "893:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                          "typeString": "contract NFTEscrow"
                        }
                      },
                      "id": 3533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "898:16:21",
                      "memberName": "onERC721Received",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3537,
                      "src": "893:21:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                        "typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
                      }
                    },
                    "id": 3534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "915:8:21",
                    "memberName": "selector",
                    "nodeType": "MemberAccess",
                    "src": "893:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 3531,
                  "id": 3535,
                  "nodeType": "Return",
                  "src": "886:37:21"
                }
              ]
            },
            "functionSelector": "150b7a02",
            "id": 3537,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onERC721Received",
            "nameLocation": "753:16:21",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 3528,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "849:8:21"
            },
            "parameters": {
              "id": 3527,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3520,
                  "mutability": "mutable",
                  "name": "operator",
                  "nameLocation": "779:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "771:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3519,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "771:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3522,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "797:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "789:12:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "789:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3524,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "811:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "803:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3523,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "803:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3526,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "835:4:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "820:19:21",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 3525,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:5:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "769:72:21"
            },
            "returnParameters": {
              "id": 3531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3530,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 3537,
                  "src": "867:6:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 3529,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "867:6:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "866:8:21"
            },
            "scope": 3831,
            "src": "744:187:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3576,
              "nodeType": "Block",
              "src": "1059:205:21",
              "statements": [
                {
                  "expression": {
                    "id": 3552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3550,
                      "name": "nftAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3490,
                      "src": "1070:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3551,
                      "name": "_NFTAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3539,
                      "src": "1083:11:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1070:24:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 3553,
                  "nodeType": "ExpressionStatement",
                  "src": "1070:24:21"
                },
                {
                  "expression": {
                    "id": 3556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3554,
                      "name": "tokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3492,
                      "src": "1105:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 3555,
                      "name": "_TokenID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3541,
                      "src": "1115:8:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1105:18:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3557,
                  "nodeType": "ExpressionStatement",
                  "src": "1105:18:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 3562,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1170:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1174:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1170:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 3566,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1190:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 3565,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1182:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3564,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1182:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3567,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1182:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3568,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "1197:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3559,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3490,
                            "src": "1141:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3558,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "1134:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1134:18:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1820",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3561,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1153:16:21",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1309,
                      "src": "1134:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3569,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1134:71:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3570,
                  "nodeType": "ExpressionStatement",
                  "src": "1134:71:21"
                },
                {
                  "expression": {
                    "id": 3574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3571,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "1216:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3572,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "1231:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1244:12:21",
                      "memberName": "nftDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3478,
                      "src": "1231:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "1216:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3575,
                  "nodeType": "ExpressionStatement",
                  "src": "1216:40:21"
                }
              ]
            },
            "functionSelector": "9b5b9b18",
            "id": 3577,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3544,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "1024:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1037:9:21",
                    "memberName": "newEscrow",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3477,
                    "src": "1024:22:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3546,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3543,
                  "name": "inProjectState",
                  "nameLocations": [
                    "1009:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3818,
                  "src": "1009:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1009:38:21"
              },
              {
                "id": 3548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3547,
                  "name": "onlySeller",
                  "nameLocations": [
                    "1048:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3764,
                  "src": "1048:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1048:10:21"
              }
            ],
            "name": "depositNFT",
            "nameLocation": "952:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3542,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3539,
                  "mutability": "mutable",
                  "name": "_NFTAddress",
                  "nameLocation": "971:11:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "963:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3538,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "963:7:21",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3541,
                  "mutability": "mutable",
                  "name": "_TokenID",
                  "nameLocation": "992:8:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3577,
                  "src": "984:16:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3540,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "984:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "962:39:21"
            },
            "returnParameters": {
              "id": 3549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1059:0:21"
            },
            "scope": 3831,
            "src": "943:321:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3604,
              "nodeType": "Block",
              "src": "1359:138:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3592,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1414:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 3591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1406:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1406:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1406:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 3594,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "1421:3:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 3595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1425:6:21",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1421:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3596,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "1433:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3587,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3490,
                            "src": "1377:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3586,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "1370:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3588,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1370:18:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1820",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1389:16:21",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1309,
                      "src": "1370:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1370:71:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3598,
                  "nodeType": "ExpressionStatement",
                  "src": "1370:71:21"
                },
                {
                  "expression": {
                    "id": 3602,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3599,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "1452:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3600,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "1467:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3601,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1480:9:21",
                      "memberName": "cancelNFT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3479,
                      "src": "1467:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "1452:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3603,
                  "nodeType": "ExpressionStatement",
                  "src": "1452:37:21"
                }
              ]
            },
            "functionSelector": "2f9fa7f6",
            "id": 3605,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3580,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "1321:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1334:12:21",
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3478,
                    "src": "1321:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3582,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3579,
                  "name": "inProjectState",
                  "nameLocations": [
                    "1306:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3818,
                  "src": "1306:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1306:41:21"
              },
              {
                "id": 3584,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3583,
                  "name": "onlySeller",
                  "nameLocations": [
                    "1348:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3764,
                  "src": "1348:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1348:10:21"
              }
            ],
            "name": "cancelAtNFT",
            "nameLocation": "1285:11:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1296:2:21"
            },
            "returnParameters": {
              "id": 3585,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:0:21"
            },
            "scope": 3831,
            "src": "1276:221:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3667,
              "nodeType": "Block",
              "src": "1621:457:21",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 3619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 3616,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "1636:3:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 3617,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1640:6:21",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1636:10:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 3618,
                      "name": "sellerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3486,
                      "src": "1650:13:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1636:27:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 3629,
                    "nodeType": "Block",
                    "src": "1726:47:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3625,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3495,
                            "src": "1741:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3626,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3607,
                            "src": "1755:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1741:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3628,
                        "nodeType": "ExpressionStatement",
                        "src": "1741:20:21"
                      }
                    ]
                  },
                  "id": 3630,
                  "nodeType": "IfStatement",
                  "src": "1632:141:21",
                  "trueBody": {
                    "id": 3624,
                    "nodeType": "Block",
                    "src": "1664:48:21",
                    "statements": [
                      {
                        "expression": {
                          "id": 3622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3620,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3498,
                            "src": "1679:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 3621,
                            "name": "_state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3607,
                            "src": "1694:6:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "1679:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 3623,
                        "nodeType": "ExpressionStatement",
                        "src": "1679:21:21"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 3637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3633,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3631,
                        "name": "sellerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3498,
                        "src": "1797:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1813:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1797:20:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 3636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 3634,
                        "name": "buyerCancel",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3495,
                        "src": "1821:11:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "74727565",
                        "id": 3635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1836:4:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      "src": "1821:19:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1797:43:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 3666,
                  "nodeType": "IfStatement",
                  "src": "1793:278:21",
                  "trueBody": {
                    "id": 3665,
                    "nodeType": "Block",
                    "src": "1841:230:21",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 3644,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "1900:4:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                                    "typeString": "contract NFTEscrow"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                                    "typeString": "contract NFTEscrow"
                                  }
                                ],
                                "id": 3643,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1892:7:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 3642,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1892:7:21",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 3645,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1892:13:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 3646,
                              "name": "sellerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3486,
                              "src": "1907:13:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            {
                              "id": 3647,
                              "name": "tokenID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3492,
                              "src": "1922:7:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 3639,
                                  "name": "nftAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3490,
                                  "src": "1863:10:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 3638,
                                "name": "ERC721",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1820,
                                "src": "1856:6:21",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                                  "typeString": "type(contract ERC721)"
                                }
                              },
                              "id": 3640,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1856:18:21",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC721_$1820",
                                "typeString": "contract ERC721"
                              }
                            },
                            "id": 3641,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1875:16:21",
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1309,
                            "src": "1856:35:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256) external"
                            }
                          },
                          "id": 3648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1856:74:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3649,
                        "nodeType": "ExpressionStatement",
                        "src": "1856:74:21"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 3655,
                                    "name": "this",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 4294967268,
                                    "src": "1975:4:21",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                                      "typeString": "contract NFTEscrow"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                                      "typeString": "contract NFTEscrow"
                                    }
                                  ],
                                  "id": 3654,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "1967:7:21",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 3653,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1967:7:21",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 3656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1967:13:21",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "id": 3657,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "1981:7:21",
                              "memberName": "balance",
                              "nodeType": "MemberAccess",
                              "src": "1967:21:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 3650,
                              "name": "buyerAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3488,
                              "src": "1945:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "id": 3652,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1958:8:21",
                            "memberName": "transfer",
                            "nodeType": "MemberAccess",
                            "src": "1945:21:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                              "typeString": "function (uint256)"
                            }
                          },
                          "id": 3658,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1945:44:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 3659,
                        "nodeType": "ExpressionStatement",
                        "src": "1945:44:21"
                      },
                      {
                        "expression": {
                          "id": 3663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 3660,
                            "name": "projectState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3501,
                            "src": "2004:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 3661,
                              "name": "ProjectState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 3484,
                              "src": "2019:12:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                                "typeString": "type(enum NFTEscrow.ProjectState)"
                              }
                            },
                            "id": 3662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberLocation": "2032:22:21",
                            "memberName": "canceledBeforeDelivery",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3481,
                            "src": "2019:35:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ProjectState_$3484",
                              "typeString": "enum NFTEscrow.ProjectState"
                            }
                          },
                          "src": "2004:50:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "id": 3664,
                        "nodeType": "ExpressionStatement",
                        "src": "2004:50:21"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "342901a7",
            "id": 3668,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3610,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "1572:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "1585:12:21",
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3480,
                    "src": "1572:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3612,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3609,
                  "name": "inProjectState",
                  "nameLocations": [
                    "1557:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3818,
                  "src": "1557:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1557:41:21"
              },
              {
                "id": 3614,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3613,
                  "name": "BuyerOrSeller",
                  "nameLocations": [
                    "1607:13:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3805,
                  "src": "1607:13:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "1607:13:21"
              }
            ],
            "name": "cancelBeforeDelivery",
            "nameLocation": "1516:20:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3607,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "1542:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3668,
                  "src": "1537:11:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3606,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1537:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1536:13:21"
            },
            "returnParameters": {
              "id": 3615,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1621:0:21"
            },
            "scope": 3831,
            "src": "1507:571:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3688,
              "nodeType": "Block",
              "src": "2169:104:21",
              "statements": [
                {
                  "expression": {
                    "id": 3681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3675,
                      "name": "buyerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3488,
                      "src": "2180:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 3678,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2203:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2207:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2203:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 3677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2195:8:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 3676,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2195:8:21",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3680,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2195:19:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "2180:34:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 3682,
                  "nodeType": "ExpressionStatement",
                  "src": "2180:34:21"
                },
                {
                  "expression": {
                    "id": 3686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3683,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "2225:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3684,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "2240:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2253:12:21",
                      "memberName": "ethDeposited",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3480,
                      "src": "2240:25:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2225:40:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3687,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:40:21"
                }
              ]
            },
            "functionSelector": "f6326fb3",
            "id": 3689,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3671,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "2142:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3672,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2155:12:21",
                    "memberName": "nftDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3478,
                    "src": "2142:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3673,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3670,
                  "name": "inProjectState",
                  "nameLocations": [
                    "2127:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3818,
                  "src": "2127:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2127:41:21"
              }
            ],
            "name": "depositETH",
            "nameLocation": "2099:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3669,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2109:2:21"
            },
            "returnParameters": {
              "id": 3674,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2169:0:21"
            },
            "scope": 3831,
            "src": "2090:183:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3705,
              "nodeType": "Block",
              "src": "2383:64:21",
              "statements": [
                {
                  "expression": {
                    "id": 3703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3700,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "2394:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3701,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "2409:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3702,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2422:17:21",
                      "memberName": "deliveryInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3482,
                      "src": "2409:30:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2394:45:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3704,
                  "nodeType": "ExpressionStatement",
                  "src": "2394:45:21"
                }
              ]
            },
            "functionSelector": "a1ee4181",
            "id": 3706,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3692,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "2335:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2348:12:21",
                    "memberName": "ethDeposited",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3480,
                    "src": "2335:25:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3694,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3691,
                  "name": "inProjectState",
                  "nameLocations": [
                    "2320:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3818,
                  "src": "2320:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2320:41:21"
              },
              {
                "id": 3696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3695,
                  "name": "onlySeller",
                  "nameLocations": [
                    "2362:10:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3764,
                  "src": "2362:10:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2362:10:21"
              },
              {
                "id": 3698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3697,
                  "name": "noDispute",
                  "nameLocations": [
                    "2373:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3789,
                  "src": "2373:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2373:9:21"
              }
            ],
            "name": "initiateDelivery",
            "nameLocation": "2294:16:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3690,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2310:2:21"
            },
            "returnParameters": {
              "id": 3699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2383:0:21"
            },
            "scope": 3831,
            "src": "2285:162:21",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3742,
              "nodeType": "Block",
              "src": "2566:196:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 3721,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "2621:4:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                              "typeString": "contract NFTEscrow"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                              "typeString": "contract NFTEscrow"
                            }
                          ],
                          "id": 3720,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2613:7:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 3719,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2613:7:21",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 3722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2613:13:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 3723,
                        "name": "buyerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3488,
                        "src": "2628:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 3724,
                        "name": "tokenID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3492,
                        "src": "2642:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 3716,
                            "name": "nftAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3490,
                            "src": "2584:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 3715,
                          "name": "ERC721",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1820,
                          "src": "2577:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC721_$1820_$",
                            "typeString": "type(contract ERC721)"
                          }
                        },
                        "id": 3717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2577:18:21",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC721_$1820",
                          "typeString": "contract ERC721"
                        }
                      },
                      "id": 3718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2596:16:21",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1309,
                      "src": "2577:35:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 3725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2577:73:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3726,
                  "nodeType": "ExpressionStatement",
                  "src": "2577:73:21"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 3732,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "2692:4:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                                "typeString": "contract NFTEscrow"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                                "typeString": "contract NFTEscrow"
                              }
                            ],
                            "id": 3731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2684:7:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3730,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2684:7:21",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 3733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2684:13:21",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 3734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2698:7:21",
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2684:21:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 3727,
                        "name": "sellerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3486,
                        "src": "2661:13:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 3729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2675:8:21",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "2661:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2661:45:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3736,
                  "nodeType": "ExpressionStatement",
                  "src": "2661:45:21"
                },
                {
                  "expression": {
                    "id": 3740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 3737,
                      "name": "projectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3501,
                      "src": "2717:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 3738,
                        "name": "ProjectState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3484,
                        "src": "2732:12:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                          "typeString": "type(enum NFTEscrow.ProjectState)"
                        }
                      },
                      "id": 3739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "2745:9:21",
                      "memberName": "delivered",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3483,
                      "src": "2732:22:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ProjectState_$3484",
                        "typeString": "enum NFTEscrow.ProjectState"
                      }
                    },
                    "src": "2717:37:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "id": 3741,
                  "nodeType": "ExpressionStatement",
                  "src": "2717:37:21"
                }
              ]
            },
            "functionSelector": "5e10177b",
            "id": 3743,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 3709,
                      "name": "ProjectState",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3484,
                      "src": "2524:12:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_enum$_ProjectState_$3484_$",
                        "typeString": "type(enum NFTEscrow.ProjectState)"
                      }
                    },
                    "id": 3710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberLocation": "2537:17:21",
                    "memberName": "deliveryInitiated",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 3482,
                    "src": "2524:30:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  }
                ],
                "id": 3711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3708,
                  "name": "inProjectState",
                  "nameLocations": [
                    "2509:14:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3818,
                  "src": "2509:14:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2509:46:21"
              },
              {
                "id": 3713,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 3712,
                  "name": "onlyBuyer",
                  "nameLocations": [
                    "2556:9:21"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 3775,
                  "src": "2556:9:21"
                },
                "nodeType": "ModifierInvocation",
                "src": "2556:9:21"
              }
            ],
            "name": "confirmDelivery",
            "nameLocation": "2476:15:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2491:2:21"
            },
            "returnParameters": {
              "id": 3714,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2566:0:21"
            },
            "scope": 3831,
            "src": "2467:295:21",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3752,
              "nodeType": "Block",
              "src": "2814:35:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 3748,
                        "name": "_condition",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3745,
                        "src": "2827:10:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3747,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2819:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:19:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3750,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:19:21"
                },
                {
                  "id": 3751,
                  "nodeType": "PlaceholderStatement",
                  "src": "2843:1:21"
                }
              ]
            },
            "id": 3753,
            "name": "condition",
            "nameLocation": "2787:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3746,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3745,
                  "mutability": "mutable",
                  "name": "_condition",
                  "nameLocation": "2802:10:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3753,
                  "src": "2797:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 3744,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2797:4:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2796:17:21"
            },
            "src": "2778:71:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3763,
              "nodeType": "Block",
              "src": "2876:52:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3756,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2889:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2893:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2889:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3758,
                          "name": "sellerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3486,
                          "src": "2903:13:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2889:27:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2881:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2881:36:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3761,
                  "nodeType": "ExpressionStatement",
                  "src": "2881:36:21"
                },
                {
                  "id": 3762,
                  "nodeType": "PlaceholderStatement",
                  "src": "2922:1:21"
                }
              ]
            },
            "id": 3764,
            "name": "onlySeller",
            "nameLocation": "2863:10:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3754,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:2:21"
            },
            "src": "2854:74:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3774,
              "nodeType": "Block",
              "src": "2954:51:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 3767,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "2967:3:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "2971:6:21",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2967:10:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3769,
                          "name": "buyerAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3488,
                          "src": "2981:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2967:26:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2959:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2959:35:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3772,
                  "nodeType": "ExpressionStatement",
                  "src": "2959:35:21"
                },
                {
                  "id": 3773,
                  "nodeType": "PlaceholderStatement",
                  "src": "2999:1:21"
                }
              ]
            },
            "id": 3775,
            "name": "onlyBuyer",
            "nameLocation": "2942:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2951:2:21"
            },
            "src": "2933:72:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3788,
              "nodeType": "Block",
              "src": "3031:76:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3778,
                            "name": "buyerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3495,
                            "src": "3047:11:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3779,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3062:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3047:20:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 3783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 3781,
                            "name": "sellerCancel",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3498,
                            "src": "3071:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 3782,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3087:5:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "3071:21:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3047:45:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3777,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3039:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3039:54:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3786,
                  "nodeType": "ExpressionStatement",
                  "src": "3039:54:21"
                },
                {
                  "id": 3787,
                  "nodeType": "PlaceholderStatement",
                  "src": "3101:1:21"
                }
              ]
            },
            "id": 3789,
            "name": "noDispute",
            "nameLocation": "3020:9:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3776,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3029:2:21"
            },
            "src": "3011:96:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3804,
              "nodeType": "Block",
              "src": "3138:82:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 3800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3792,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3151:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3155:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3151:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3794,
                            "name": "buyerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3488,
                            "src": "3165:12:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3151:26:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 3799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 3796,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3181:3:21",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 3797,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3185:6:21",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3181:10:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 3798,
                            "name": "sellerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3486,
                            "src": "3195:13:21",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          "src": "3181:27:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3151:57:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3791,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3143:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3143:66:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3802,
                  "nodeType": "ExpressionStatement",
                  "src": "3143:66:21"
                },
                {
                  "id": 3803,
                  "nodeType": "PlaceholderStatement",
                  "src": "3214:1:21"
                }
              ]
            },
            "id": 3805,
            "name": "BuyerOrSeller",
            "nameLocation": "3122:13:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3135:2:21"
            },
            "src": "3113:107:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3817,
              "nodeType": "Block",
              "src": "3271:47:21",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_ProjectState_$3484",
                          "typeString": "enum NFTEscrow.ProjectState"
                        },
                        "id": 3813,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 3811,
                          "name": "projectState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3501,
                          "src": "3284:12:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 3812,
                          "name": "_state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3808,
                          "src": "3300:6:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ProjectState_$3484",
                            "typeString": "enum NFTEscrow.ProjectState"
                          }
                        },
                        "src": "3284:22:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3810,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3276:7:21",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3276:31:21",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3815,
                  "nodeType": "ExpressionStatement",
                  "src": "3276:31:21"
                },
                {
                  "id": 3816,
                  "nodeType": "PlaceholderStatement",
                  "src": "3312:1:21"
                }
              ]
            },
            "id": 3818,
            "name": "inProjectState",
            "nameLocation": "3235:14:21",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 3809,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3808,
                  "mutability": "mutable",
                  "name": "_state",
                  "nameLocation": "3263:6:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3818,
                  "src": "3250:19:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ProjectState_$3484",
                    "typeString": "enum NFTEscrow.ProjectState"
                  },
                  "typeName": {
                    "id": 3807,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 3806,
                      "name": "ProjectState",
                      "nameLocations": [
                        "3250:12:21"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 3484,
                      "src": "3250:12:21"
                    },
                    "referencedDeclaration": 3484,
                    "src": "3250:12:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ProjectState_$3484",
                      "typeString": "enum NFTEscrow.ProjectState"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3249:21:21"
            },
            "src": "3226:92:21",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 3829,
              "nodeType": "Block",
              "src": "3386:47:21",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 3825,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "3412:4:21",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                            "typeString": "contract NFTEscrow"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_NFTEscrow_$3831",
                            "typeString": "contract NFTEscrow"
                          }
                        ],
                        "id": 3824,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3404:7:21",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 3823,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3404:7:21",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 3826,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3404:13:21",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 3827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3418:7:21",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "3404:21:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 3822,
                  "id": 3828,
                  "nodeType": "Return",
                  "src": "3397:28:21"
                }
              ]
            },
            "functionSelector": "12065fe0",
            "id": 3830,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBalance",
            "nameLocation": "3335:10:21",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3819,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3345:2:21"
            },
            "returnParameters": {
              "id": 3822,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3821,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3377:7:21",
                  "nodeType": "VariableDeclaration",
                  "scope": 3830,
                  "src": "3369:15:21",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3820,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3369:7:21",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3368:17:21"
            },
            "scope": 3831,
            "src": "3326:107:21",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3832,
        "src": "189:3247:21",
        "usedErrors": []
      }
    ],
    "src": "35:3404:21"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.9",
  "updatedAt": "2022-09-17T15:19:53.419Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "onERC721Received(address,address,uint256,bytes)": {
        "details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}